import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-a458e878.js";const p={},o=t('<h1 id="多表查询" tabindex="-1"><a class="header-anchor" href="#多表查询" aria-hidden="true">#</a> 多表查询</h1><p><code>easy-query</code>提供了丰富的多表链接查询,并且支持匿名表链接查询</p><h2 id="api变化" tabindex="-1"><a class="header-anchor" href="#api变化" aria-hidden="true">#</a> api变化</h2><p>当使用join操作后</p><ul><li><code>where</code>存在两种重载,第一种就是单个参数,第二种是两个参数,单个参数为主表操作,两个参数为表顺序,可以通过链式调用<code>then()</code>来进行切换,<code>select</code>、<code>groupBy</code>.....同理</li></ul><h2 id="leftjoin" tabindex="-1"><a class="header-anchor" href="#leftjoin" aria-hidden="true">#</a> leftJoin</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Topic</span> topic <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> t_blog t1 <span class="token constant">ON</span> t1<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="innerjoin" tabindex="-1"><a class="header-anchor" href="#innerjoin" aria-hidden="true">#</a> innerJoin</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> blogEntities <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">innerJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getTitle</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t1<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`create_time`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`update_time`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`create_by`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`update_by`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`url`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_topic t <span class="token constant">INNER</span> <span class="token constant">JOIN</span> t_blog t1 <span class="token constant">ON</span> t1<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t1<span class="token punctuation">.</span>`title` <span class="token constant">IS</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="嵌套join" tabindex="-1"><a class="header-anchor" href="#嵌套join" aria-hidden="true">#</a> 嵌套Join</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//创建一个匿名表的表达式</span>\n <span class="token class-name">Queryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Topic</span><span class="token punctuation">&gt;</span></span> sql <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                \n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span>a<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//join匿名表</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`url`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_blog t <span class="token class-name">LEFT</span> <span class="token constant">JOIN</span> <span class="token punctuation">(</span><span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">)</span> t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token constant">IS</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="group-join" tabindex="-1"><a class="header-anchor" href="#group-join" aria-hidden="true">#</a> group join</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">Queryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicGroupTestDTO</span><span class="token punctuation">&gt;</span></span> sql <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">TopicGroupTestDTO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAs</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token class-name">TopicGroupTestDTO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token class-name">TopicGroupTestDTO</span><span class="token operator">::</span><span class="token function">getIdCount</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span>a<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token class-name">TopicGroupTestDTO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`url`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_blog t <span class="token class-name">LEFT</span> <span class="token constant">JOIN</span> <span class="token punctuation">(</span><span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id` <span class="token constant">AS</span> `id`<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>`id`<span class="token punctuation">)</span> <span class="token constant">AS</span> `idCount` <span class="token constant">FROM</span> t_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">GROUP</span> <span class="token constant">BY</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">)</span> t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token constant">IS</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',13),c=[o];function e(l,u){return s(),a("div",null,c)}const r=n(p,[["render",e],["__file","multi-query.html.vue"]]);export{r as default};
