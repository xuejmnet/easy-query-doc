import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as s,a as t,o as n}from"./app-DvB_5WTW.js";const l={};function r(h,i){return n(),a("div",null,[i[0]||(i[0]=s(`<h1 id="annotation-description" tabindex="-1"><a class="header-anchor" href="#annotation-description"><span>Annotation Description</span></a></h1><h2 id="table" tabindex="-1"><a class="header-anchor" href="#table"><span>Table</span></a></h2><p>Describes the database table name corresponding to the object. Not needed for VO objects or non-database objects.</p><table><thead><tr><th>Attribute</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>&quot;&quot;</td><td>Database table name. Empty means nameConversion.convert(class.getSimpleName), can be modified at runtime</td></tr><tr><td>schema</td><td>&quot;&quot;</td><td>Database schema, can be modified at runtime. Defaults to the database in the JDBC connection string</td></tr><tr><td>ignoreProperties</td><td>{}</td><td>Properties to ignore. Generally used for ignoring parent class properties when inheriting</td></tr><tr><td>shardingInitializer</td><td>UnShardingInitializer.class</td><td>Sharding initializer. Used only when the object is a sharded object to initialize the sharded object. Can also be manually added later</td></tr><tr><td>oldName</td><td>&quot;&quot;</td><td>Old table name used for table name migration in code-first</td></tr><tr><td>comment</td><td>&quot;&quot;</td><td>Comment information when automatically generating tables</td></tr><tr><td>keyword</td><td>true</td><td>Whether to add keyword handling to table names, such as MySQL&#39;s \`\`, PostgreSQL&#39;s &quot;&quot;, or SQL Server&#39;s []. false scenario: duckdb reading Excel for queries</td></tr></tbody></table><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //.....</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="column" tabindex="-1"><a class="header-anchor" href="#column"><span>Column</span></a></h2><p>Describes the column name corresponding to the property</p><table><thead><tr><th>Attribute</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>&quot;&quot;</td><td>Column name in the database table. Default empty means nameConversion.convert(property name)</td></tr><tr><td>primaryKey</td><td>false</td><td>Indicates whether it&#39;s a primary key. If yes, will use this field as id in update object / delete object</td></tr><tr><td>generatedKey</td><td>false</td><td>Whether it&#39;s an auto-increment column. If true, after <code>insertable().executeRows(true)</code>, the retrieved auto-increment id will be populated</td></tr><tr><td>conversion</td><td>DefaultValueConverter.class</td><td>In-memory computed property, value converter. Default means no conversion. Can customize for enums or JSON</td></tr><tr><td>sqlConversion</td><td>DefaultColumnValueSQLConverter.class</td><td>DB computed property, value converter. Default means no conversion. Can customize composite columns like <code>fullName=Concat(firstName,lastName)</code>. If vo/dto also has this property, no need to annotate it</td></tr><tr><td>generatedSQLColumnGenerator</td><td>DefaultGeneratedKeySQLColumnGenerator.class</td><td>Column generator used when inserting into database, such as database function <code>NEWID()</code> or other custom functions</td></tr><tr><td>complexPropType</td><td>DefaultComplexPropType.class</td><td>Complex type used for JSON deserialization handling</td></tr><tr><td>autoSelect</td><td>true</td><td>Whether the current column needs automatic querying. Mainly for whether to return the current column when directly toList. false commonly used for database computed properties or large field columns</td></tr><tr><td>typeHandler</td><td>UnKnownTypeHandler.class</td><td>What TypeHandler the current column uses, special handling for unknown types</td></tr><tr><td>primaryKeyGenerator</td><td>UnsupportPrimaryKeyGenerator.class</td><td>Primary key generator used to directly generate primary key value when object primary key is null during insertion</td></tr><tr><td>exist</td><td>true</td><td>Indicates whether the current field exists in the database. false means not queried by default and not inserted/updated</td></tr><tr><td>nullable</td><td>true</td><td>Indicates whether the database column mapped to the current field can be null. Commonly used for code-first generation of database DDL</td></tr><tr><td>dbType</td><td>&quot;&quot;</td><td>Indicates the specified type of the database column mapped to the current field</td></tr><tr><td>dbDefault</td><td>&quot;&quot;</td><td>Indicates the default insert value for the database column mapped to the current field</td></tr><tr><td>comment</td><td>&quot;&quot;</td><td>Indicates the description of the database column mapped to the current field</td></tr><tr><td>length</td><td>-1</td><td>Indicates the length of the database column mapped to the current field</td></tr><tr><td>scale</td><td>0</td><td>Indicates the precision of the database column mapped to the current field</td></tr><tr><td>sqlExpression</td><td>ColumnSQLExpression</td><td>Indicates simple database computed properties</td></tr><tr><td>jdbcType</td><td>JDBCType.OTHER</td><td>Maps the current field to the actual JDBC type in the database. PostgreSQL&#39;s uuid and MySQL&#39;s uuid will use this field type</td></tr></tbody></table>`,8)),t(" valueUpdateAtomicTrack | DefaultValueUpdateAtomicTrack.class | Atomic update, default means no atomic update "),i[1]||(i[1]=s(`<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;title1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="columnignore" tabindex="-1"><a class="header-anchor" href="#columnignore"><span>ColumnIgnore</span></a></h2><p>Properties with this annotation will be directly ignored in database mapping</p><h2 id="insertignore" tabindex="-1"><a class="header-anchor" href="#insertignore"><span>InsertIgnore</span></a></h2><p>Properties with this annotation will not be assigned during insertion</p><h2 id="updateignore" tabindex="-1"><a class="header-anchor" href="#updateignore"><span>UpdateIgnore</span></a></h2><p>Properties with this annotation will not be updated during updates unless manually specified, such as <code>creation time</code>, <code>creator</code>, <code>logical deletion field</code>, <code>large column</code>. If the current field is marked <code>update ignore</code>, it will be directly ignored in non-track updates. If the property <code>updateSetInTrackDiff = true</code>, it&#39;s still effective in track updates</p><table><thead><tr><th>Attribute</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>updateSetInTrackDiff</td><td>false</td><td>Whether to include in update set in tracking queries</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">Note!!!</p><blockquote><p>Adding <code>UpdateIgnore</code> to <code>large column</code> is to ensure that when large fields are queried and then entity all-field update is performed, since <code>title</code> was not queried, the null will be updated during update (default update strategy is all fields). So update ignore is adopted here. If needed, you can use expression ignore [Of course you can also choose to update strategy as non-null update]</p></blockquote></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">large</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //Large field doesn&#39;t need update, prevents all-field update from changing original field to null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //Creation time field doesn&#39;t need update</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">LogicDelete</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> LogicDeleteStrategyEnum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BOOLEAN</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //Logical deletion field doesn&#39;t need update</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> deleted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logicdelete" tabindex="-1"><a class="header-anchor" href="#logicdelete"><span>LogicDelete</span></a></h2><p>Logical deletion. Indicates that the current field corresponds to logical deletion representation in the database. SELECT will filter, UPDATE will also filter, DELETE data will be rewritten as UPDATE</p><table><thead><tr><th>Attribute</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>BOOLEAN</td><td>Logical deletion strategy. Default true means deleted, false means not deleted</td></tr><tr><td>strategyName</td><td>&quot;&quot;</td><td>When logical deletion is custom logical deletion</td></tr></tbody></table><ul><li>BOOLEAN false means not deleted</li><li>DELETE_LONG_TIMESTAMP 0 means not deleted</li><li>LOCAL_DATE_TIME null means not deleted</li><li>LOCAL_DATE null means not deleted</li><li>CUSTOM user-defined</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">large</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //Large field doesn&#39;t need update, prevents all-field update from changing original field to null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //Creation time field doesn&#39;t need update</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">LogicDelete</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> LogicDeleteStrategyEnum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BOOLEAN</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //Logical deletion field doesn&#39;t need update</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> deleted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="version" tabindex="-1"><a class="header-anchor" href="#version"><span>Version</span></a></h2><p>Optimistic lock, also known as version number</p><table><thead><tr><th>Attribute</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td>-</td><td>Define your own version number strategy</td></tr></tbody></table><h3 id="default-optimistic-lock-version-number-strategies" tabindex="-1"><a class="header-anchor" href="#default-optimistic-lock-version-number-strategies"><span>Default Optimistic Lock Version Number Strategies</span></a></h3><ul><li>VersionIntStrategy</li><li>VersionLongStrategy</li><li>VersionTimestampStrategy (not recommended)</li><li>VersionUUIDStrategy</li></ul><h4 id="versionintstrategy" tabindex="-1"><a class="header-anchor" href="#versionintstrategy"><span>VersionIntStrategy</span></a></h4><p>//Here uses Version=2, can also use version+1 but actually it&#39;s the same because where clause limits version=1</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="versionlongstrategy" tabindex="-1"><a class="header-anchor" href="#versionlongstrategy"><span>VersionLongStrategy</span></a></h4><p>//Here uses Version=2, can also use version+1 but actually it&#39;s the same because where clause limits version=1</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="versionuuidstrategy" tabindex="-1"><a class="header-anchor" href="#versionuuidstrategy"><span>VersionUUIDStrategy</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxxxxxasd </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxxxasdasd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="encryption" tabindex="-1"><a class="header-anchor" href="#encryption"><span>Encryption</span></a></h2><p>Column encryption. Supports custom data encryption storage and supports like search handling at the database layer with very high performance. Does not use database encryption/decryption functions</p><h3 id="encryptionstrategy" tabindex="-1"><a class="header-anchor" href="#encryptionstrategy"><span>EncryptionStrategy</span></a></h3><p>Used to handle how to encrypt and decrypt data strategies. Can be customized</p><p>Default implementation has an AES+Base64 <code>AbstractAesBase64EncryptionStrategy</code> abstract class. Users need to return a 16-bit vector and key</p><h3 id="supportquerylike" tabindex="-1"><a class="header-anchor" href="#supportquerylike"><span>supportQueryLike</span></a></h3><p>Used to indicate whether like search is needed. If true, it will segment encrypt the input parameters</p><h2 id="navigate" tabindex="-1"><a class="header-anchor" href="#navigate"><span>Navigate</span></a></h2><p>Navigation property. Used on database objects and return results for handling one-to-one, one-to-many, many-to-one, many-to-many</p><h2 id="shardingdatasourcekey" tabindex="-1"><a class="header-anchor" href="#shardingdatasourcekey"><span>ShardingDataSourceKey</span></a></h2><p>Used to identify which is the database sharding key for the current object</p><h2 id="shardingextradatasourcekey" tabindex="-1"><a class="header-anchor" href="#shardingextradatasourcekey"><span>ShardingExtraDataSourceKey</span></a></h2><p>Used to identify which is the additional database sharding key for the current object</p><h2 id="shardingtablekey" tabindex="-1"><a class="header-anchor" href="#shardingtablekey"><span>ShardingTableKey</span></a></h2><p>Used to identify which is the table sharding key for the current object</p><h2 id="shardingextratablekey" tabindex="-1"><a class="header-anchor" href="#shardingextratablekey"><span>ShardingExtraTableKey</span></a></h2><p>Used to identify which is the additional table sharding key for the current object</p><h2 id="easywherecondition" tabindex="-1"><a class="header-anchor" href="#easywherecondition"><span>EasyWhereCondition</span></a></h2><p>Default dynamic condition object query condition. Can replace with custom annotation to implement dynamic conditions</p><h2 id="easyquerytrack" tabindex="-1"><a class="header-anchor" href="#easyquerytrack"><span>EasyQueryTrack</span></a></h2><p>Default tracking context annotation, can also be customized. Used on methods</p><h2 id="entityproxy" tabindex="-1"><a class="header-anchor" href="#entityproxy"><span>EntityProxy</span></a></h2><p>Generate proxy object. Added to entities and DTOs to automatically generate APT proxy classes. Generated files exist in the target directory. Need to rebuild after clean</p><h2 id="entityfileproxy" tabindex="-1"><a class="header-anchor" href="#entityfileproxy"><span>EntityFileProxy</span></a></h2><p>Same as <code>EntityProxy</code> but generated files exist in source code</p><h2 id="proxyproperty" tabindex="-1"><a class="header-anchor" href="#proxyproperty"><span>ProxyProperty</span></a></h2><p>Used to prevent generated APT properties from duplicating with system built-in ones. Can define aliases on properties</p>`,55))])}const k=e(l,[["render",r]]),o=JSON.parse('{"path":"/en/framework/annotation.html","title":"Annotation Description","lang":"en-US","frontmatter":{"title":"Annotation Description","order":30,"description":"Annotation Description Table Describes the database table name corresponding to the object. Not needed for VO objects or non-database objects. Column Describes the column name c...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Annotation Description\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-27T05:04:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/en/framework/annotation.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Annotation Description"}],["meta",{"property":"og:description","content":"Annotation Description Table Describes the database table name corresponding to the object. Not needed for VO objects or non-database objects. Column Describes the column name c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-27T05:04:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-27T05:04:42.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/dromara/easy-query/easy-query-doc/framework/annotation.html"}]]},"git":{"createdTime":1761500387000,"updatedTime":1761541482000,"contributors":[{"name":"只是我","username":"","email":"alice@example.com","commits":2}]},"readingTime":{"minutes":4.23,"words":1269},"filePathRelative":"en/framework/annotation.md","autoDesc":true}');export{k as comp,o as data};
