import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,d as a,o as l}from"./app-B2PNxRko.js";const r={},h=["src"],p=["src"],d=["src"];function o(s,i){return l(),t("div",null,[i[0]||(i[0]=n(`<h1 id="graalvm" tabindex="-1"><a class="header-anchor" href="#graalvm"><span>GraalVM</span></a></h1><p>GraalVM 是一个高性能的多语言运行时（runtime），它支持以多种语言编写的应用程序，包括 Java、JavaScript、Python、Ruby、R 以及 WebAssembly 等，同时它也提供了一个重要特性：将 Java 应用程序编译为原生可执行文件（Native Image）。</p><div class="hint-container tip"><p class="hint-container-title">一句话解释!!!</p><blockquote><p>GraalVM 是一个可以把 Java 应用“变成原生程序”的高性能虚拟机，同时支持多语言混合执行。</p></blockquote></div><p>这是eq史上第一个native的demo,证明了在eq在native领域的可行性,具体是否使用用户自行选择参考</p><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>demo</span></a></h2><p>本章节demo由<a href="https://github.com/wzszsw" target="_blank" rel="noopener noreferrer">用户提供</a> 地址:<a href="https://github.com/wzszsw/easy-query-native-demo" target="_blank" rel="noopener noreferrer">https://github.com/wzszsw/easy-query-native-demo</a></p><p>具体代码可以参考用户提供的demo</p><h2 id="运行步骤" tabindex="-1"><a class="header-anchor" href="#运行步骤"><span>运行步骤</span></a></h2><h3 id="步骤1" tabindex="-1"><a class="header-anchor" href="#步骤1"><span>步骤1</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DemoApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        EasyBeanUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">FAST_BEAN_FUNCTION</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ReflectBean</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">::new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//启动项添加这句话替换默认的反射</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">DemoApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤2" tabindex="-1"><a class="header-anchor" href="#步骤2"><span>步骤2</span></a></h3>`,11)),a("img",{src:s.$withBase("/images/graalvm1.png"),msg:"第一步"},null,8,h),i[1]||(i[1]=a("h3",{id:"步骤3",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#步骤3"},[a("span",null,"步骤3")])],-1)),a("img",{src:s.$withBase("/images/graalvm2.png"),msg:"第一步"},null,8,p),i[2]||(i[2]=a("h3",{id:"步骤4",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#步骤4"},[a("span",null,"步骤4")])],-1)),a("img",{src:s.$withBase("/images/graalvm3.png"),msg:"第一步"},null,8,d)])}const c=e(r,[["render",o]]),g=JSON.parse('{"path":"/framework/graalvm.html","title":"GraalVM","lang":"zh-CN","frontmatter":{"title":"GraalVM","order":90,"description":"GraalVM GraalVM 是一个高性能的多语言运行时（runtime），它支持以多种语言编写的应用程序，包括 Java、JavaScript、Python、Ruby、R 以及 WebAssembly 等，同时它也提供了一个重要特性：将 Java 应用程序编译为原生可执行文件（Native Image）。 一句话解释!!! GraalVM 是一个可...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GraalVM\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-27T05:38:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/framework/graalvm.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"GraalVM"}],["meta",{"property":"og:description","content":"GraalVM GraalVM 是一个高性能的多语言运行时（runtime），它支持以多种语言编写的应用程序，包括 Java、JavaScript、Python、Ruby、R 以及 WebAssembly 等，同时它也提供了一个重要特性：将 Java 应用程序编译为原生可执行文件（Native Image）。 一句话解释!!! GraalVM 是一个可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-27T05:38:11.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-27T05:38:11.000Z"}]]},"git":{"createdTime":1748324291000,"updatedTime":1748324291000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":1,"url":"https://github.com/xuejiaming"}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"framework/graalvm.md","autoDesc":true}');export{c as comp,g as data};
