import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-fc8deeef.js";const p={},o=t(`<h2 id="cte" tabindex="-1"><a class="header-anchor" href="#cte" aria-hidden="true">#</a> cte</h2><p>递归树查询使用数据库方言<code>cte</code>来实现其功能,如果您是<code>mysql</code>那么请使用<code>mysql 8.x^</code>版本</p><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> api</h2><p><code>asTreeCTE</code>和<code>asTreeCTECustom</code></p><h2 id="astreecte" tabindex="-1"><a class="header-anchor" href="#astreecte" aria-hidden="true">#</a> asTreeCTE</h2><p>使用该api需要在数据库对象中添加<code>OneToMany</code>的关联关系,并且导航属性必须是<code>List&lt;SelfType&gt;</code>，系统会将其视为<code>children</code>属性,如果实体内部出现多个<code>OneToMany</code>的<code>List&lt;SelfType&gt;</code>则可以在对应实体上添加<code>@EastTree(&quot;属性名&quot;)</code>来指定具体的属性作为<code>children</code></p><p><code>asTreeCTE</code>支持自定义cte内部参数<code>asTreeCTE(op-&gt;{......})</code></p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>setLimitDeep</td><td>限制查询的深度，-1表示不限制(默认)，0表示只查询第一级</td></tr><tr><td>setUp</td><td>查询方向,默认向下，参数true向上,false向下(默认)</td></tr><tr><td>setUnionAll</td><td>是否使用union all，参数true使用unionAll(默认),false使用union</td></tr><tr><td>setCTETableName</td><td>设置cte表别名默认as_tree_cte</td></tr><tr><td>setDeepColumnName</td><td>默认深度列别名</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;category&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@EntityProxy</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyCategory</span> <span class="token keyword">implements</span> <span class="token class-name">ProxyEntityAvailable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyCategory</span> <span class="token punctuation">,</span> <span class="token class-name">MyCategoryProxy</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> parentId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">,</span>targetProperty <span class="token operator">=</span> <span class="token string">&quot;parentId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyCategory</span><span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//平铺结构返回</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyCategory</span><span class="token punctuation">&gt;</span></span> treeList <span class="token operator">=</span> entityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyCategory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">asTreeCTE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//树形结构返回</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyCategory</span><span class="token punctuation">&gt;</span></span> treeList <span class="token operator">=</span> entityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyCategory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">asTreeCTE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toTreeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">WITH</span> <span class="token constant">RECURSIVE</span> <span class="token string">&quot;as_tree_cte&quot;</span> <span class="token constant">AS</span> <span class="token punctuation">(</span> 
<span class="token punctuation">(</span><span class="token constant">SELECT</span>
    <span class="token number">0</span> <span class="token constant">AS</span> <span class="token string">&quot;cte_deep&quot;</span><span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span> 
<span class="token constant">FROM</span>
    <span class="token string">&quot;category&quot;</span> t1 
<span class="token constant">WHERE</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span> <span class="token operator">=</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">)</span>  
<span class="token class-name">UNION</span> <span class="token constant">ALL</span>  
<span class="token punctuation">(</span><span class="token constant">SELECT</span>
    t2<span class="token punctuation">.</span><span class="token string">&quot;cte_deep&quot;</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token constant">AS</span> <span class="token string">&quot;cte_deep&quot;</span><span class="token punctuation">,</span>
    t3<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
    t3<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">,</span>
    t3<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span> 
    <span class="token constant">FROM</span>
    <span class="token string">&quot;as_tree_cte&quot;</span> t2 
    <span class="token constant">INNER</span> <span class="token constant">JOIN</span>  <span class="token string">&quot;category&quot;</span> t3  <span class="token constant">ON</span> t3<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span> <span class="token operator">=</span> t2<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> 
<span class="token constant">SELECT</span>
    t<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
    t<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">,</span>
    t<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span> 
<span class="token constant">FROM</span>
<span class="token string">&quot;as_tree_cte&quot;</span> t 
<span class="token constant">ORDER</span> <span class="token constant">BY</span>
t<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span> <span class="token constant">DESC</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要join那么请在<code>asTreeCTE</code>后进行join处理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Draft2</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Number</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> entityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyCategory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">asTreeCTE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> b2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>b2<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment">//创建group by 2.3.4之前使用GroupKeys.TABLE1_10.of</span>
        <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m1<span class="token punctuation">,</span> b2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">GroupKeys</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>m1<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>group <span class="token operator">-&gt;</span> <span class="token class-name">Select</span><span class="token punctuation">.</span><span class="token constant">DRAFT</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
                group<span class="token punctuation">.</span><span class="token function">key1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                group<span class="token punctuation">.</span><span class="token function">groupTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>t2<span class="token punctuation">.</span><span class="token function">star</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token constant">WITH</span> <span class="token constant">RECURSIVE</span> <span class="token string">&quot;as_tree_cte&quot;</span> <span class="token constant">AS</span> <span class="token punctuation">(</span> 
<span class="token punctuation">(</span><span class="token constant">SELECT</span>
    <span class="token number">0</span> <span class="token constant">AS</span> <span class="token string">&quot;cte_deep&quot;</span><span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">,</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span> 
<span class="token constant">FROM</span>
    <span class="token string">&quot;category&quot;</span> t1 
<span class="token constant">WHERE</span>
    t1<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span> <span class="token operator">=</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">)</span>  
<span class="token class-name">UNION</span> <span class="token constant">ALL</span>  
<span class="token punctuation">(</span><span class="token constant">SELECT</span>
t2<span class="token punctuation">.</span><span class="token string">&quot;cte_deep&quot;</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token constant">AS</span> <span class="token string">&quot;cte_deep&quot;</span><span class="token punctuation">,</span>
t3<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
t3<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">,</span>
t3<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span> 
<span class="token constant">FROM</span>
<span class="token string">&quot;as_tree_cte&quot;</span> t2 
<span class="token constant">INNER</span> <span class="token constant">JOIN</span>
<span class="token string">&quot;category&quot;</span> t3 
    <span class="token constant">ON</span> t3<span class="token punctuation">.</span><span class="token string">&quot;parent_id&quot;</span> <span class="token operator">=</span> t2<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  
<span class="token constant">SELECT</span>
    t<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span> <span class="token constant">AS</span> <span class="token string">&quot;value1&quot;</span><span class="token punctuation">,</span>
    <span class="token function">SUM</span><span class="token punctuation">(</span>t6<span class="token punctuation">.</span><span class="token string">&quot;star&quot;</span><span class="token punctuation">)</span> <span class="token constant">AS</span> <span class="token string">&quot;value2&quot;</span> 
<span class="token constant">FROM</span>
<span class="token string">&quot;as_tree_cte&quot;</span> t 
<span class="token constant">LEFT</span> <span class="token constant">JOIN</span>
<span class="token string">&quot;t_blog&quot;</span> t6 <span class="token constant">ON</span> t6<span class="token punctuation">.</span><span class="token string">&quot;deleted&quot;</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span> <span class="token operator">=</span> t6<span class="token punctuation">.</span><span class="token string">&quot;id&quot;</span> 
<span class="token constant">GROUP</span> <span class="token constant">BY</span>
t<span class="token punctuation">.</span><span class="token string">&quot;name&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="astreectecustom" tabindex="-1"><a class="header-anchor" href="#astreectecustom" aria-hidden="true">#</a> asTreeCTECustom</h2><p><code>asTreeCTECustom</code>和<code>asTreeCTE</code>不同的是不需要再实体内添加<code>OneToMany</code>导航属性,使用时指定<code>id</code>和<code>pid</code>，且无法使用<code>toTreeList</code>因为无需添加<code>List&lt;SelfType&gt;</code>所以无法构建对应的树形结构</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyCategory</span><span class="token punctuation">&gt;</span></span> treeList <span class="token operator">=</span> entityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyCategory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">asTreeCTECustom</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">parentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> m<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toTreeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),e=[o];function c(u,i){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","tree.html.vue"]]);export{r as default};
