const e=JSON.parse('{"key":"v-d2e44a9a","path":"/guide/adv/column-func-new.html","title":"自定义数据库函数(新)","lang":"zh-CN","frontmatter":{"title":"自定义数据库函数(新)","description":"目前框架未提供相应的数据库函数,仅提供了count,sum,min,max等加入我们要实现这么一个数据库语句,那么我们应该如何实现,接下来我们将使用easy-query的`sqlNativeSegment封装和sqlFunc和sqlFuncAs能力实现单列的数据库函数 FINDINSET编写 sqlNativeSegment封装 如果你不想使用封装的方...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/easy-query-doc/guide/adv/column-func-new.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"自定义数据库函数(新)"}],["meta",{"property":"og:description","content":"目前框架未提供相应的数据库函数,仅提供了count,sum,min,max等加入我们要实现这么一个数据库语句,那么我们应该如何实现,接下来我们将使用easy-query的`sqlNativeSegment封装和sqlFunc和sqlFuncAs能力实现单列的数据库函数 FINDINSET编写 sqlNativeSegment封装 如果你不想使用封装的方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-28T03:34:47.000Z"}],["meta",{"property":"article:author","content":"xuejmnet"}],["meta",{"property":"article:modified_time","content":"2023-10-28T03:34:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义数据库函数(新)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-28T03:34:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"]]},"headers":[{"level":2,"title":"FIND_IN_SET编写","slug":"find-in-set编写","link":"#find-in-set编写","children":[{"level":3,"title":"sqlNativeSegment封装","slug":"sqlnativesegment封装","link":"#sqlnativesegment封装","children":[]}]}],"git":{"createdTime":1698280223000,"updatedTime":1698464087000,"contributors":[{"name":"xuejiaming","email":"326308290@qq.com","commits":2}]},"readingTime":{"minutes":1.48,"words":443},"filePathRelative":"guide/adv/column-func-new.md","localizedDate":"2023年10月26日","autoDesc":true,"excerpt":""}');export{e as data};
