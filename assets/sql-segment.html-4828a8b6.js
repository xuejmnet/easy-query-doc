import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-bbe4d638.js";const p={},o=t(`<h1 id="自定义sql片段" tabindex="-1"><a class="header-anchor" href="#自定义sql片段" aria-hidden="true">#</a> 自定义SQL片段</h1><p><code>easy-query</code>默认提供了数据库自定义<code>SQL</code>片段,其中 <a href="/easy-query-doc/guide/query/case-when">《CaseWhen》</a> 就是有数据库自定义片段来自行实现api</p><p>如何设计api完全可以看用户自行实现。</p><h2 id="sqlcolumnas" tabindex="-1"><a class="header-anchor" href="#sqlcolumnas" aria-hidden="true">#</a> sqlColumnAs</h2><p>最好是封装自行实现</p><h2 id="columnconst" tabindex="-1"><a class="header-anchor" href="#columnconst" aria-hidden="true">#</a> columnConst</h2><p>无需编写复杂封装代码</p><h2 id="分组求第一条" tabindex="-1"><a class="header-anchor" href="#分组求第一条" aria-hidden="true">#</a> 分组求第一条</h2><p><code>OVER(Partition By ... Order By ...)</code> 采用pgsql语法来实现</p><p>案例来自 jimmer</p><ul><li>获取书本价格在所有书籍中的名次</li><li>获取数据的价格在所属书店中的名次</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_book_test&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">H2BookTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> edition<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> price<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> storeId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">String</span> sql <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">columnConst</span><span class="token punctuation">(</span><span class="token string">&quot;rank() over(order by {0} desc) as rank1&quot;</span><span class="token punctuation">,</span> it <span class="token operator">-&gt;</span> it<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token operator">::</span><span class="token function">getPrice</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">columnConst</span><span class="token punctuation">(</span><span class="token string">&quot;rank() over(partition by {0} order by {1} desc) as rank2&quot;</span><span class="token punctuation">,</span> it <span class="token operator">-&gt;</span> it
                            <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token operator">::</span><span class="token function">getStoreId</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token operator">::</span><span class="token function">getPrice</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">SELECT</span> 
    id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>edition<span class="token punctuation">,</span>price<span class="token punctuation">,</span>store_id<span class="token punctuation">,</span>
    <span class="token function">rank</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">over</span><span class="token punctuation">(</span>order by price desc<span class="token punctuation">)</span> as rank1<span class="token punctuation">,</span>
    <span class="token function">rank</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">over</span><span class="token punctuation">(</span>partition by store_id order by price desc<span class="token punctuation">)</span> as rank2 

<span class="token constant">FROM</span> t_book_test



<span class="token comment">//别名自动设置</span>
<span class="token class-name">String</span> sql <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">asAlias</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">columnConst</span><span class="token punctuation">(</span><span class="token string">&quot;rank() over(order by {0} desc) as rank1&quot;</span><span class="token punctuation">,</span> it <span class="token operator">-&gt;</span> it<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token operator">::</span><span class="token function">getPrice</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">columnConst</span><span class="token punctuation">(</span><span class="token string">&quot;rank() over(partition by {0} order by {1} desc) as rank2&quot;</span><span class="token punctuation">,</span> it <span class="token operator">-&gt;</span> it
                        <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token operator">::</span><span class="token function">getStoreId</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token class-name">H2BookTest</span><span class="token operator">::</span><span class="token function">getPrice</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">SELECT</span> 
    x<span class="token punctuation">.</span>id<span class="token punctuation">,</span>x<span class="token punctuation">.</span>name<span class="token punctuation">,</span>x<span class="token punctuation">.</span>edition<span class="token punctuation">,</span>x<span class="token punctuation">.</span>price<span class="token punctuation">,</span>x<span class="token punctuation">.</span>store_id<span class="token punctuation">,</span>
    <span class="token function">rank</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">over</span><span class="token punctuation">(</span>order by x<span class="token punctuation">.</span>price desc<span class="token punctuation">)</span> as rank1<span class="token punctuation">,</span>
    <span class="token function">rank</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">over</span><span class="token punctuation">(</span>partition by x<span class="token punctuation">.</span>store_id order by x<span class="token punctuation">.</span>price desc<span class="token punctuation">)</span> as rank2 
<span class="token constant">FROM</span> t_book_test x

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","sql-segment.html.vue"]]);export{r as default};
