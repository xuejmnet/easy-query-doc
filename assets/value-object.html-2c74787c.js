import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as p}from"./app-1f7c47b0.js";const t={},e=p(`<p><code>easy-query</code>在<code>1.7.3^</code>版本支持<code>value-object</code>值类型对象,用于描述数据库对象的聚合列,譬如</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;my_company&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Company</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业名称
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业所属省份
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> province<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业所属市区
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> city<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业所属区域
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> area<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照编号
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> licenseNo<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照到期时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> licenseDeadline<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照图片
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> licenseImage<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照经营内容
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> licenseContent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用值类型后可以改写为</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;my_company&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValueCompany</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业名称
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业地址信息
     */</span>
    <span class="token annotation punctuation">@ValueObject</span>
    <span class="token keyword">private</span> <span class="token class-name">ValueCompanyAddress</span> address<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照信息
     */</span>
    <span class="token annotation punctuation">@ValueObject</span>
    <span class="token keyword">private</span> <span class="token class-name">ValueCompanyLicense</span> license<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValueCompanyAddress</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 企业所属省份
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> province<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业所属市区
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> city<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业所属区域
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> area<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValueCompanyLicense</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 企业营业执照编号
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> licenseNo<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照到期时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> licenseDeadline<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@ValueObject</span>
    <span class="token keyword">private</span> <span class="token class-name">ValueCompanyLicenseExtra</span> extra<span class="token punctuation">;</span><span class="token comment">//支持ValueObject嵌套</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ValueCompanyLicenseExtra</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照图片
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> licenseImage<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 企业营业执照经营内容
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> licenseContent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于大对象属性聚合有着更好的属性表示而不是一股脑儿的展开平铺对象的设计</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 数据库搅拌</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> my_company
<span class="token punctuation">(</span>
    id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;主键ID&#39;</span><span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;名称&#39;</span><span class="token punctuation">,</span>
    province <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;省&#39;</span><span class="token punctuation">,</span>
    city <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;市&#39;</span><span class="token punctuation">,</span>
    area <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;区&#39;</span><span class="token punctuation">,</span>
    license_no <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;企业营业执照编号&#39;</span><span class="token punctuation">,</span>
    license_deadline <span class="token keyword">datetime</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;企业营业执照到期时间&#39;</span><span class="token punctuation">,</span>
    license_image <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;企业营业执照图片&#39;</span><span class="token punctuation">,</span>
    license_content <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span>  <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;企业营业执照经营内容&#39;</span>
<span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">&#39;公司表&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意点及说明!!!</p><blockquote><p>属性模式已经原生支持,通过属性.属性来访问和使用,其中proxy已适配完成,java的lambda版本需要自行实现,kotlin也需要自行实现</p></blockquote></div><h2 id="java版本实现" tabindex="-1"><a class="header-anchor" href="#java版本实现" aria-hidden="true">#</a> java版本实现</h2><p>因为java默认不支持lambda表达式的多级获取所以需要使用asm字节码技术自行实现</p><h3 id="替换系统默认lambda表达式解析" tabindex="-1"><a class="header-anchor" href="#替换系统默认lambda表达式解析" aria-hidden="true">#</a> 替换系统默认lambda表达式解析</h3><p>需要添加依赖asm的</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!--选择自己合适的版本即可--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.ow2.asm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>asm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>9.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//lambda的类访问器</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExpressionClassVisitor</span> <span class="token keyword">extends</span> <span class="token class-name">ClassVisitor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StringBuilder</span> _methodBody<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> _method<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> _methodDesc<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ExpressionClassVisitor</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> methodBody<span class="token punctuation">,</span><span class="token class-name">SerializedDescriptor</span> serializedDescriptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">Opcodes</span><span class="token punctuation">.</span><span class="token constant">ASM9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_methodBody <span class="token operator">=</span> methodBody<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_method <span class="token operator">=</span> serializedDescriptor<span class="token punctuation">.</span><span class="token function">getImplMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_methodDesc <span class="token operator">=</span> serializedDescriptor<span class="token punctuation">.</span><span class="token function">getImplMethodSignature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">MethodVisitor</span> <span class="token function">visitMethod</span><span class="token punctuation">(</span><span class="token keyword">int</span> access<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> desc<span class="token punctuation">,</span> <span class="token class-name">String</span> signature<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> exceptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>_method<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>_methodDesc<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ExpressionMethodVisitor</span><span class="token punctuation">(</span>_methodBody<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _methodBody<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//lambda方法访问器</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExpressionMethodVisitor</span> <span class="token keyword">extends</span> <span class="token class-name">MethodVisitor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StringBuilder</span> _methodBody<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ExpressionMethodVisitor</span><span class="token punctuation">(</span><span class="token class-name">StringBuilder</span> methodBody<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">Opcodes</span><span class="token punctuation">.</span><span class="token constant">ASM9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_methodBody<span class="token operator">=</span>methodBody<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">visitMethodInsn</span><span class="token punctuation">(</span><span class="token keyword">int</span> opcode<span class="token punctuation">,</span> <span class="token class-name">String</span> owner<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> desc<span class="token punctuation">,</span> <span class="token keyword">boolean</span> itf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>opcode<span class="token operator">==</span><span class="token class-name">Opcodes</span><span class="token punctuation">.</span><span class="token constant">INVOKEVIRTUAL</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> attr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                attr <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                attr <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            _methodBody<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">EasyStringUtil</span><span class="token punctuation">.</span><span class="token function">toLowerCaseFirstOne</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">visitEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _methodBody<span class="token punctuation">.</span><span class="token function">deleteCharAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//lambda解析器自定义</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyLambdaParser</span> <span class="token keyword">implements</span> <span class="token class-name">LambdaParser</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Cache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SerializedDescriptor</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> lambdaCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMemoryCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">String</span> <span class="token function">getPropertyName</span><span class="token punctuation">(</span><span class="token class-name">Property</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> property<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>property <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Method</span> declaredMethod <span class="token operator">=</span> property<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;writeReplace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            declaredMethod<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SerializedLambda</span> serializedLambda <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SerializedLambda</span><span class="token punctuation">)</span> declaredMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token comment">//Class.method.method....</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>serializedLambda<span class="token punctuation">.</span><span class="token function">getImplMethodKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">MethodHandleInfo<span class="token punctuation">.</span>REF_invokeStatic</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">getPropertyNameByInvokeStatic</span><span class="token punctuation">(</span>property<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> serializedLambda<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//Class::method</span>
            <span class="token keyword">return</span> <span class="token function">getPropertyNameByInvokeVirtual</span><span class="token punctuation">(</span>serializedLambda<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ReflectiveOperationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getPropertyNameByInvokeStatic</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">,</span> <span class="token class-name">SerializedLambda</span> serializedLambda<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">SerializedDescriptor</span> serializedDescriptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SerializedDescriptor</span><span class="token punctuation">(</span>serializedLambda<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> propertyName <span class="token operator">=</span> lambdaCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>serializedDescriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>propertyName <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> propertyName<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span> className <span class="token operator">=</span> serializedLambda<span class="token punctuation">.</span><span class="token function">getImplClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> classFilePath <span class="token operator">=</span> <span class="token function">classFilePath</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> methodBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ExpressionClassVisitor</span> expressionClassVisitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExpressionClassVisitor</span><span class="token punctuation">(</span>methodBody<span class="token punctuation">,</span> serializedDescriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> classStream <span class="token operator">=</span> <span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> classFilePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ClassReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassReader</span><span class="token punctuation">(</span>classStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            reader<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>expressionClassVisitor<span class="token punctuation">,</span> <span class="token class-name">ClassReader</span><span class="token punctuation">.</span><span class="token constant">SKIP_DEBUG</span> <span class="token operator">|</span> <span class="token class-name">ClassReader</span><span class="token punctuation">.</span><span class="token constant">SKIP_FRAMES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> fullPropertyName <span class="token operator">=</span> methodBody<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> lambdaCache<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>serializedDescriptor<span class="token punctuation">,</span> key <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> fullPropertyName<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;error parsing class file &quot;</span> <span class="token operator">+</span> classFilePath<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">InputStream</span> <span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">,</span>
                                                       <span class="token class-name">String</span> path<span class="token punctuation">)</span>
                <span class="token keyword">throws</span> <span class="token class-name">FileNotFoundException</span> <span class="token punctuation">{</span>
            <span class="token class-name">InputStream</span> stream <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stream <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">FileNotFoundException</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> stream<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">classFilePath</span><span class="token punctuation">(</span><span class="token class-name">String</span> className<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> className<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.class&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getPropertyNameByInvokeVirtual</span><span class="token punctuation">(</span><span class="token class-name">SerializedLambda</span> serializedLambda<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> method <span class="token operator">=</span> serializedLambda<span class="token punctuation">.</span><span class="token function">getImplMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> attr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            attr <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            attr <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">EasyStringUtil</span><span class="token punctuation">.</span><span class="token function">toLowerCaseFirstOne</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//使用前替换掉默认的解析器</span>
<span class="token class-name">EasyLambdaUtil</span><span class="token punctuation">.</span><span class="token function">replaceParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyLambdaParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="新增" tabindex="-1"><a class="header-anchor" href="#新增" aria-hidden="true">#</a> 新增</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ValueCompany</span> company <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValueCompany</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
company<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;my1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
company<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;myCompany1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ValueCompanyAddress</span> valueCompanyAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValueCompanyAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyAddress<span class="token punctuation">.</span><span class="token function">setProvince</span><span class="token punctuation">(</span><span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyAddress<span class="token punctuation">.</span><span class="token function">setCity</span><span class="token punctuation">(</span><span class="token string">&quot;city1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyAddress<span class="token punctuation">.</span><span class="token function">setArea</span><span class="token punctuation">(</span><span class="token string">&quot;area1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
company<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>valueCompanyAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ValueCompanyLicense</span> valueCompanyLicense <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValueCompanyLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyLicense<span class="token punctuation">.</span><span class="token function">setLicenseNo</span><span class="token punctuation">(</span><span class="token string">&quot;license1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyLicense<span class="token punctuation">.</span><span class="token function">setLicenseDeadline</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ValueCompanyLicenseExtra</span> valueCompanyLicenseExtra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValueCompanyLicenseExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyLicenseExtra<span class="token punctuation">.</span><span class="token function">setLicenseImage</span><span class="token punctuation">(</span><span class="token string">&quot;www.baidu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyLicenseExtra<span class="token punctuation">.</span><span class="token function">setLicenseContent</span><span class="token punctuation">(</span><span class="token string">&quot;it编程&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
valueCompanyLicense<span class="token punctuation">.</span><span class="token function">setExtra</span><span class="token punctuation">(</span>valueCompanyLicenseExtra<span class="token punctuation">)</span><span class="token punctuation">;</span>
company<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>valueCompanyLicense<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQueryClient<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>company<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`my_company\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\`<span class="token punctuation">,</span>\`license_deadline\`<span class="token punctuation">,</span>\`license_image\`<span class="token punctuation">,</span>\`license_content\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">my1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">myCompany1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">city1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">area1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">license1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span><span class="token constant">T00</span><span class="token operator">:</span><span class="token function">00</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span><span class="token function">com</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>it编程<span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//属性模式</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ValueCompany</span><span class="token punctuation">&gt;</span></span> province1 <span class="token operator">=</span> easyQueryClient<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;address.province&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span><span class="token class-name">ValueCompany</span><span class="token punctuation">(</span>id<span class="token operator">=</span>my1<span class="token punctuation">,</span> name<span class="token operator">=</span>myCompany1<span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token class-name">ValueCompanyAddress</span><span class="token punctuation">(</span>province<span class="token operator">=</span>province1<span class="token punctuation">,</span> city<span class="token operator">=</span>city1<span class="token punctuation">,</span> area<span class="token operator">=</span>area1<span class="token punctuation">)</span><span class="token punctuation">,</span> license<span class="token operator">=</span><span class="token class-name">ValueCompanyLicense</span><span class="token punctuation">(</span>licenseNo<span class="token operator">=</span>license1<span class="token punctuation">,</span> licenseDeadline<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span><span class="token constant">T00</span><span class="token operator">:</span><span class="token number">00</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token class-name">ValueCompanyLicenseExtra</span><span class="token punctuation">(</span>licenseImage<span class="token operator">=</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">,</span> licenseContent<span class="token operator">=</span>it编程<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\`<span class="token punctuation">,</span>\`license_deadline\`<span class="token punctuation">,</span>\`license_image\`<span class="token punctuation">,</span>\`license_content\` <span class="token constant">FROM</span> \`my_company\` <span class="token constant">WHERE</span> \`province\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token comment">//lambda模式</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ValueCompany</span><span class="token punctuation">&gt;</span></span> province11 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProvince</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\`<span class="token punctuation">,</span>\`license_deadline\`<span class="token punctuation">,</span>\`license_image\`<span class="token punctuation">,</span>\`license_content\` <span class="token constant">FROM</span> \`my_company\` <span class="token constant">WHERE</span> \`province\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token comment">//不查询营业执照额外信息</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ValueCompany</span><span class="token punctuation">&gt;</span></span> province2 <span class="token operator">=</span> easyQueryClient<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;address.province&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">columnIgnore</span><span class="token punctuation">(</span><span class="token string">&quot;license.extra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\`<span class="token punctuation">,</span>\`license_deadline\` <span class="token constant">FROM</span> \`my_company\` <span class="token constant">WHERE</span> \`province\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token punctuation">[</span><span class="token class-name">ValueCompany</span><span class="token punctuation">(</span>id<span class="token operator">=</span>my1<span class="token punctuation">,</span> name<span class="token operator">=</span>myCompany1<span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token class-name">ValueCompanyAddress</span><span class="token punctuation">(</span>province<span class="token operator">=</span>province1<span class="token punctuation">,</span> city<span class="token operator">=</span>city1<span class="token punctuation">,</span> area<span class="token operator">=</span>area1<span class="token punctuation">)</span><span class="token punctuation">,</span> license<span class="token operator">=</span><span class="token class-name">ValueCompanyLicense</span><span class="token punctuation">(</span>licenseNo<span class="token operator">=</span>license1<span class="token punctuation">,</span> licenseDeadline<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span><span class="token constant">T00</span><span class="token operator">:</span><span class="token number">00</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

 <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ValueCompany</span><span class="token punctuation">&gt;</span></span> province22 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProvince</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">columnIgnore</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">getLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\`<span class="token punctuation">,</span>\`license_deadline\` <span class="token constant">FROM</span> \`my_company\` <span class="token constant">WHERE</span> \`province\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token punctuation">[</span><span class="token class-name">ValueCompany</span><span class="token punctuation">(</span>id<span class="token operator">=</span>my1<span class="token punctuation">,</span> name<span class="token operator">=</span>myCompany1<span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token class-name">ValueCompanyAddress</span><span class="token punctuation">(</span>province<span class="token operator">=</span>province1<span class="token punctuation">,</span> city<span class="token operator">=</span>city1<span class="token punctuation">,</span> area<span class="token operator">=</span>area1<span class="token punctuation">)</span><span class="token punctuation">,</span> license<span class="token operator">=</span><span class="token class-name">ValueCompanyLicense</span><span class="token punctuation">(</span>licenseNo<span class="token operator">=</span>license1<span class="token punctuation">,</span> licenseDeadline<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span><span class="token constant">T00</span><span class="token operator">:</span><span class="token number">00</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token comment">//仅查询地址和营业执照编号</span>
 <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ValueCompany</span><span class="token punctuation">&gt;</span></span> province4 <span class="token operator">=</span> easyQueryClient<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;address.province&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token string">&quot;license.licenseNo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\` <span class="token constant">FROM</span> \`my_company\` <span class="token constant">WHERE</span> \`province\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token punctuation">[</span><span class="token class-name">ValueCompany</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token class-name">ValueCompanyAddress</span><span class="token punctuation">(</span>province<span class="token operator">=</span>province1<span class="token punctuation">,</span> city<span class="token operator">=</span>city1<span class="token punctuation">,</span> area<span class="token operator">=</span>area1<span class="token punctuation">)</span><span class="token punctuation">,</span> license<span class="token operator">=</span><span class="token class-name">ValueCompanyLicense</span><span class="token punctuation">(</span>licenseNo<span class="token operator">=</span>license1<span class="token punctuation">,</span> licenseDeadline<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>


<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ValueCompany</span><span class="token punctuation">&gt;</span></span> province44 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProvince</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;province1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token class-name">ValueCompany</span><span class="token operator">::</span><span class="token function">getAddress</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">getLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLicenseNo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`province\`<span class="token punctuation">,</span>\`city\`<span class="token punctuation">,</span>\`area\`<span class="token punctuation">,</span>\`license_no\` <span class="token constant">FROM</span> \`my_company\` <span class="token constant">WHERE</span> \`province\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token punctuation">[</span><span class="token class-name">ValueCompany</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token class-name">ValueCompanyAddress</span><span class="token punctuation">(</span>province<span class="token operator">=</span>province1<span class="token punctuation">,</span> city<span class="token operator">=</span>city1<span class="token punctuation">,</span> area<span class="token operator">=</span>area1<span class="token punctuation">)</span><span class="token punctuation">,</span> license<span class="token operator">=</span><span class="token class-name">ValueCompanyLicense</span><span class="token punctuation">(</span>licenseNo<span class="token operator">=</span>license1<span class="token punctuation">,</span> licenseDeadline<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> extra<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新" tabindex="-1"><a class="header-anchor" href="#更新" aria-hidden="true">#</a> 更新</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//追踪更新进修改营业执照内容</span>
<span class="token class-name">TrackManager</span> trackManager <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">getRuntimeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTrackManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    trackManager<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    easyQuery<span class="token punctuation">.</span><span class="token function">addTracking</span><span class="token punctuation">(</span>company<span class="token punctuation">)</span><span class="token punctuation">;</span>
    company<span class="token punctuation">.</span><span class="token function">getLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLicenseContent</span><span class="token punctuation">(</span><span class="token string">&quot;it++++1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>company<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">finally</span> <span class="token punctuation">{</span>
    trackManager<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> \`my_company\` <span class="token constant">SET</span> \`license_content\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> it<span class="token operator">++</span><span class="token operator">++</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">my1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>


<span class="token comment">//直接更新</span>
easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>company<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> \`my_company\` <span class="token constant">SET</span> \`name\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`province\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`city\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`area\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`license_no\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`license_deadline\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`license_image\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`license_content\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">myCompany1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">province1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">city1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">area1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">license1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span><span class="token constant">T00</span><span class="token operator">:</span><span class="token function">00</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span><span class="token function">com</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span>it编程<span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">my1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相关搜索" tabindex="-1"><a class="header-anchor" href="#相关搜索" aria-hidden="true">#</a> 相关搜索</h2><p><code>@Embedded</code> <code>@Embeddable</code> <code>值类型</code> <code>值对象</code></p>`,21),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","value-object.html.vue"]]);export{r as default};
