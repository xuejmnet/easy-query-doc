import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-f236024f.js";const p={},e=t(`<p>比如您有一张证书表,证书表存在证书过期时间,那么证书有个动态的隐藏属性叫做状态,证书是否过期可以通过这个状态来实现</p><p>临期、过期、未过期</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>

<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_certificate&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@EntityProxy</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Certificate</span> <span class="token keyword">implements</span> <span class="token class-name">ProxyEntityAvailable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Certificate</span> <span class="token punctuation">,</span> <span class="token class-name">CertificateProxy</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 证书名称
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 创建时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 过期时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> invalidTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>sqlConversion <span class="token operator">=</span> <span class="token class-name">CertStatusColumnValueSQLConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token comment">//因为不是真实列所以不需要插入</span>
    <span class="token annotation punctuation">@InsertIgnore</span>
    <span class="token comment">//因为不是真实列所以不需要修改</span>
    <span class="token annotation punctuation">@UpdateIgnore</span>
    <span class="token keyword">private</span> <span class="token class-name">CertStatusEnum</span> status<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CertificateProxy</span><span class="token punctuation">&gt;</span></span> <span class="token function">proxyTableClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">CertificateProxy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



<span class="token annotation punctuation">@Getter</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">CertStatusEnum</span> <span class="token keyword">implements</span> <span class="token class-name">IEnum</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CertStatusEnum</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token function">NORMAL</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;正常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token function">WILL_INVALID</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;临期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

    <span class="token function">INVALID</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;过期&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token class-name">CertStatusEnum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> code<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">CertStatusEnum</span> <span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> enumValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>enumValue<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token constant">NORMAL</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token constant">WILL_INVALID</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span><span class="token keyword">return</span> <span class="token constant">INVALID</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UnsupportedOperationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>





<span class="token comment">//证书状态值</span>
<span class="token annotation punctuation">@Component</span><span class="token comment">//非springboot自行注册比如solon</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CertStatusColumnValueSQLConverter</span>  <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isRealColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//他不是一个真实存在的列所以返回false</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isMergeSubQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//期间没有用到别的数据库所以是false</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//计算出两者天数差值 前面是大的时间后面是小的时间</span>
        <span class="token class-name">SQLFunction</span> durationDay <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token string">&quot;invalidTime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>fx<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeDurationEnum<span class="token punctuation">.</span>Days</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//计算出来的时间如果大于30天表示是正常的,大于等于0表示临期的小于0表示过期的</span>
        <span class="token class-name">SQLFunction</span> sqlFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">anySQLFunction</span><span class="token punctuation">(</span><span class="token string">&quot;(CASE WHEN {0}&gt;30 THEN 1 WHEN {0}&gt;=0 THEN 2 ELSE 3 END)&quot;</span><span class="token punctuation">,</span> c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            c<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>durationDay<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> sqlFunction<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            sqlFunction<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//因为是返回所以需要设置别名</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> durationDay <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token string">&quot;invalidTime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>fx<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeDurationEnum<span class="token punctuation">.</span>Days</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> sqlFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">anySQLFunction</span><span class="token punctuation">(</span><span class="token string">&quot;(CASE WHEN {0}&gt;30 THEN 1 WHEN {0}&gt;=0 THEN 2 ELSE 3 END)&quot;</span><span class="token punctuation">,</span> c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            c<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>durationDay<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> sqlFunction<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            sqlFunction<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//当做属性用所以不需要别名</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//因为不做插入和修改所以这个status属性被用作条件比较的时候条件值还是原先的值</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">//注册计算属性</span>

<span class="token class-name">QueryRuntimeContext</span> runtimeContext <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">getRuntimeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">QueryConfiguration</span> configuration <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getQueryConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
configuration<span class="token punctuation">.</span><span class="token function">applyColumnValueSQLConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CertStatusColumnValueSQLConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Certificate</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Certificate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`name\`<span class="token punctuation">,</span>
    \`create_time\`<span class="token punctuation">,</span>
    \`invalid_time\`<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token constant">CASE</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token constant">THEN</span> <span class="token number">2</span> 
        <span class="token constant">ELSE</span> <span class="token number">3</span> 
    <span class="token constant">END</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`status\` 
<span class="token constant">FROM</span>
    \`t_certificate\` 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="筛选" tabindex="-1"><a class="header-anchor" href="#筛选" aria-hidden="true">#</a> 筛选</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Certificate</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Certificate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> c<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CertStatusEnum</span><span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`name\`<span class="token punctuation">,</span>
    \`create_time\`<span class="token punctuation">,</span>
    \`invalid_time\`<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token constant">CASE</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token constant">THEN</span> <span class="token number">2</span> 
        <span class="token constant">ELSE</span> <span class="token number">3</span> 
    <span class="token constant">END</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`status\` 
<span class="token constant">FROM</span>
    \`t_certificate\` 
<span class="token constant">WHERE</span>
    <span class="token punctuation">(</span>
        <span class="token constant">CASE</span> 
            <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
            <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token constant">THEN</span> <span class="token number">2</span> 
            <span class="token constant">ELSE</span> <span class="token number">3</span> 
        <span class="token constant">END</span>
    <span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="排序" tabindex="-1"><a class="header-anchor" href="#排序" aria-hidden="true">#</a> 排序</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Certificate</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Certificate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> c<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">CertStatusEnum</span><span class="token punctuation">.</span><span class="token constant">NORMAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> c<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">--</span> 第<span class="token number">1</span>条sql数据
<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`name\`<span class="token punctuation">,</span>
    \`create_time\`<span class="token punctuation">,</span>
    \`invalid_time\`<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token constant">CASE</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token constant">THEN</span> <span class="token number">2</span> 
        <span class="token constant">ELSE</span> <span class="token number">3</span> 
    <span class="token constant">END</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`status\` 
<span class="token constant">FROM</span>
    \`t_certificate\` 
<span class="token constant">WHERE</span>
    <span class="token punctuation">(</span>
        <span class="token constant">CASE</span> 
            <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
            <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token constant">THEN</span> <span class="token number">2</span> 
            <span class="token constant">ELSE</span> <span class="token number">3</span> 
        <span class="token constant">END</span>
    <span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span> 
<span class="token class-name">ORDER</span> <span class="token constant">BY</span>
    <span class="token punctuation">(</span><span class="token constant">CASE</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">30</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
        <span class="token class-name">WHEN</span> <span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>
        <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        \`invalid_time\`<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0</span> <span class="token constant">THEN</span> <span class="token number">2</span> 
        <span class="token constant">ELSE</span> <span class="token number">3</span> 
    <span class="token constant">END</span><span class="token punctuation">)</span> <span class="token constant">ASC</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),c=[e];function o(l,i){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","status-prop.html.vue"]]);export{r as default};
