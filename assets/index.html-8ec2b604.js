const t=JSON.parse('{"key":"v-272edeb6","path":"/practice/apt/","title":"注解处理器","lang":"zh-CN","frontmatter":{"title":"注解处理器","description":"Java APT（Annotation Processing Tool，注解处理工具）是一种用于在编译时处理注解的技术。它允许开发者在编译Java代码时，扫描和处理注解，并生成新的源代码、辅助文件或其他类型的输出。 这边简单的使用编译时注解来完成代理功能 为什么不使用动态代理而是使用编译时apt技术呢因为apt技术在项目build后可以完美的生成src...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/easy-query-doc/practice/apt/"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"注解处理器"}],["meta",{"property":"og:description","content":"Java APT（Annotation Processing Tool，注解处理工具）是一种用于在编译时处理注解的技术。它允许开发者在编译Java代码时，扫描和处理注解，并生成新的源代码、辅助文件或其他类型的输出。 这边简单的使用编译时注解来完成代理功能 为什么不使用动态代理而是使用编译时apt技术呢因为apt技术在项目build后可以完美的生成src..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-19T14:42:02.000Z"}],["meta",{"property":"article:author","content":"xuejmnet"}],["meta",{"property":"article:modified_time","content":"2024-05-19T14:42:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注解处理器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-19T14:42:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"]]},"headers":[],"git":{"createdTime":1716129722000,"updatedTime":1716129722000,"contributors":[{"name":"xuejiaming","email":"326308290@qq.com","commits":1}]},"readingTime":{"minutes":0.52,"words":156},"filePathRelative":"practice/apt/README.md","localizedDate":"2024年5月19日","autoDesc":true,"excerpt":""}');export{t as data};
