import{_ as u}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as k,c as r,e,w as a,f as c,d as s,b as n}from"./app-16b339b4.js";const d={},m=c('<h1 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h1><p><code>selectAutoInclude</code>在处理大部分业务的时候已经足够优秀便捷了,但是在部分特定场合需要动态处理某些子项自定义的时候还是会出现繁琐的情况(你可以通过显式include()来做到,但是如果我只是希望其中某一层级需要就需要把所有层级都进行显式描述)这样实在是太麻烦了,所以在后续版本<code>eq</code>推出了<code>SelectAutoIncludeConfigurable</code>接口和<code>EntitySelectAutoIncludeConfigurable</code>来快速帮用户实现需求</p><h2 id="selectautoincludeconfigurable" tabindex="-1"><a class="header-anchor" href="#selectautoincludeconfigurable" aria-hidden="true">#</a> SelectAutoIncludeConfigurable</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>isInheritedBehavior</code></td><td>是否继承`实体</td></tr><tr><td><code>configure</code></td><td>自行配置当前结构化对象节点的查询sql</td></tr></tbody></table><h2 id="entityselectautoincludeconfigurable" tabindex="-1"><a class="header-anchor" href="#entityselectautoincludeconfigurable" aria-hidden="true">#</a> EntitySelectAutoIncludeConfigurable</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>isInheritedBehavior</code></td><td>是否继承`实体</td></tr><tr><td><code>configure</code></td><td>自行配置当前结构化对象节点的查询sql</td></tr><tr><td><code>entityConfigure</code></td><td>自行配置当前结构化对象节点的查询sql,将<code>configure</code>进行强类型化</td></tr></tbody></table>',6),v=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"my_com_user"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EntityProxy"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MyComUser1"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ProxyEntityAvailable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"MyComUser1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"MyComUser1Proxy"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" comId"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" userId"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" gw"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Navigate"),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},[s("RelationTypeEnum"),n("span",{class:"token punctuation"},"."),s("OneToMany")]),n("span",{class:"token punctuation"},","),s(" selfProperty "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"comId"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"userId"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(" targetProperty "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"comId"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"userId"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(" orderByProps "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token annotation punctuation"},"@OrderByProperty"),n("span",{class:"token punctuation"},"("),s("property "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"comId"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token annotation punctuation"},"@OrderByProperty"),n("span",{class:"token punctuation"},"("),s("property "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"time"'),n("span",{class:"token punctuation"},","),s(" asc "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(" mode "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"OrderByPropertyModeEnum"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"NULLS_FIRST"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"MySignUp"),n("span",{class:"token punctuation"},">")]),s(" mySignUps"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"my_sign_up"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EntityProxy"),s(`
`),n("span",{class:"token annotation punctuation"},"@FieldNameConstants"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MySignUp"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ProxyEntityAvailable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"MySignUp"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"MySignUpProxy"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" comId"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" userId"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" time"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" content"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Navigate"),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},[s("RelationTypeEnum"),n("span",{class:"token punctuation"},"."),s("ManyToOne")]),n("span",{class:"token punctuation"},","),s(" selfProperty "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"comId"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"userId"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(" targetProperty "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"comId"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"userId"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"MyComUser"),s(" comUser"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=c(`<h2 id="实体行为" tabindex="-1"><a class="header-anchor" href="#实体行为" aria-hidden="true">#</a> 实体行为</h2><p>实体行为是实体对象的@Navigate上面的<code>order、limit、offset</code>如果dto设置了<code>order</code>采用dto的否则使用实体对象的,如果dto使用了<code>limit+offset</code>则用dto的否则使用实体对象的,<br> 如果接口<code>isInheritedBehavior</code>方法返回false则会忽略上述实体行为自行控制</p><h2 id="不继承实体对象行为dto自己排序" tabindex="-1"><a class="header-anchor" href="#不继承实体对象行为dto自己排序" aria-hidden="true">#</a> 不继承实体对象行为dto自己排序</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyComUserDTO8</span> <span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token class-name">String</span> gw<span class="token punctuation">;</span>
    <span class="token comment">//dto显式指定了order那么会覆盖掉entity的</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">,</span> orderByProps <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@OrderByProperty</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;comId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@OrderByProperty</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> asc <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> mode <span class="token operator">=</span> <span class="token class-name">OrderByPropertyModeEnum</span><span class="token punctuation">.</span><span class="token constant">NULLS_LAST</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InternalMySignUps</span><span class="token punctuation">&gt;</span></span> mySignUps<span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>test<span class="token punctuation">.</span>doc<span class="token punctuation">.</span></span><span class="token class-name">MySignUp</span></span> <span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@FieldNameConstants</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InternalMySignUps</span> <span class="token keyword">implements</span> <span class="token class-name">SelectAutoIncludeConfigurable</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> time<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>

<span class="token comment">//接口优先级最高 false表示不继承实体对象行为,那么由接口方法configure来设置,也会忽略掉dto上的配置</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInheritedBehavior</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">//false表示不继承对象行为</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> queryable<span class="token punctuation">,</span> <span class="token class-name">ConfigureArgument</span> configureArgument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> queryable<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Fields</span><span class="token punctuation">.</span>time<span class="token punctuation">,</span><span class="token string">&quot;123123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token class-name">Fields</span><span class="token punctuation">.</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>




<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyComUserDTO8</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyComUser1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">selectAutoInclude</span><span class="token punctuation">(</span><span class="token class-name">MyComUserDTO8</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`gw\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_com_user\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`content\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_sign_up\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`time\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">ORDER</span> <span class="token constant">BY</span> t<span class="token punctuation">.</span>\`time\` <span class="token constant">ASC</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="不继承实体对象行为" tabindex="-1"><a class="header-anchor" href="#不继承实体对象行为" aria-hidden="true">#</a> 不继承实体对象行为</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyComUserDTO9</span> <span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token class-name">String</span> gw<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InternalMySignUps</span><span class="token punctuation">&gt;</span></span> mySignUps<span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>test<span class="token punctuation">.</span>doc<span class="token punctuation">.</span></span><span class="token class-name">MySignUp</span></span> <span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@FieldNameConstants</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InternalMySignUps</span> <span class="token keyword">implements</span> <span class="token class-name">SelectAutoIncludeConfigurable</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> time<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>


        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInheritedBehavior</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> queryable<span class="token punctuation">,</span> <span class="token class-name">ConfigureArgument</span> configureArgument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> configureArgument<span class="token punctuation">.</span><span class="token function">getTypeArg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//外部传递的参数支持任意类型</span>
            <span class="token keyword">return</span> queryable<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringStringEntry <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">String</span> column <span class="token operator">=</span> stringStringEntry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">String</span> value <span class="token operator">=</span> stringStringEntry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>column<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>



<span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyComUserDTO9</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyComUser1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span><span class="token function">setConfigureArgument</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//传递的参数支持任意类型</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">selectAutoInclude</span><span class="token punctuation">(</span><span class="token class-name">MyComUserDTO9</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`gw\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_com_user\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">14</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`content\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_sign_up\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`time\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">6</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="entity模式" tabindex="-1"><a class="header-anchor" href="#entity模式" aria-hidden="true">#</a> entity模式</h2><p>不继承实体对象行为<code>orderBy</code>自行控制</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyComUserDTO10</span> <span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token class-name">String</span> gw<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InternalMySignUps</span><span class="token punctuation">&gt;</span></span> mySignUps<span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MySignUp</span></span> <span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@FieldNameConstants</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InternalMySignUps</span> <span class="token keyword">implements</span> <span class="token class-name">EntitySelectAutoIncludeConfigurable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MySignUp</span><span class="token punctuation">,</span> <span class="token class-name">MySignUpProxy</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> time<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>


        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInheritedBehavior</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">EntityQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MySignUpProxy</span><span class="token punctuation">,</span> <span class="token class-name">MySignUp</span><span class="token punctuation">&gt;</span></span> <span class="token function">entityConfigure</span><span class="token punctuation">(</span><span class="token class-name">EntityQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MySignUpProxy</span><span class="token punctuation">,</span> <span class="token class-name">MySignUp</span><span class="token punctuation">&gt;</span></span> queryable<span class="token punctuation">,</span> <span class="token class-name">ConfigureArgument</span> configureArgument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> queryable<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                o<span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>m <span class="token operator">-&gt;</span> m<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>




<span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyComUserDTO10</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyComUser1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span><span class="token function">setConfigureArgument</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">selectAutoInclude</span><span class="token punctuation">(</span><span class="token class-name">MyComUserDTO10</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`gw\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_com_user\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">15</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`content\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_sign_up\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">ORDER</span> <span class="token constant">BY</span> t<span class="token punctuation">.</span>\`content\` <span class="token constant">ASC</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">10</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="继承entity行为" tabindex="-1"><a class="header-anchor" href="#继承entity行为" aria-hidden="true">#</a> 继承entity行为</h2><p>承实体对象行为</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyComUserDTO11</span> <span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token class-name">String</span> gw<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InternalMySignUps</span><span class="token punctuation">&gt;</span></span> mySignUps<span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MySignUp</span></span> <span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Data</span>
    <span class="token annotation punctuation">@FieldNameConstants</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InternalMySignUps</span> <span class="token keyword">implements</span> <span class="token class-name">EntitySelectAutoIncludeConfigurable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MySignUp</span><span class="token punctuation">,</span> <span class="token class-name">MySignUpProxy</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> time<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>


        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isInheritedBehavior</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token class-name">EntityQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MySignUpProxy</span><span class="token punctuation">,</span> <span class="token class-name">MySignUp</span><span class="token punctuation">&gt;</span></span> <span class="token function">entityConfigure</span><span class="token punctuation">(</span><span class="token class-name">EntityQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MySignUpProxy</span><span class="token punctuation">,</span> <span class="token class-name">MySignUp</span><span class="token punctuation">&gt;</span></span> queryable<span class="token punctuation">,</span> <span class="token class-name">ConfigureArgument</span> configureArgument<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> queryable<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                o<span class="token punctuation">.</span><span class="token function">userId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
<span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyComUserDTO11</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">MyComUser1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span><span class="token function">setConfigureArgument</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">selectAutoInclude</span><span class="token punctuation">(</span><span class="token class-name">MyComUserDTO11</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`gw\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_com_user\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">23</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`content\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">AS</span> \`__relation__comId\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`user_id\` <span class="token constant">AS</span> \`__relation__userId\` <span class="token constant">FROM</span> \`my_sign_up\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">OR</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`com_id\` <span class="token operator">=</span><span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`user_id\` <span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">ORDER</span> <span class="token constant">BY</span> t<span class="token punctuation">.</span>\`com_id\` <span class="token constant">ASC</span><span class="token punctuation">,</span><span class="token constant">CASE</span> <span class="token constant">WHEN</span> t<span class="token punctuation">.</span>\`time\` <span class="token constant">IS</span> <span class="token constant">NULL</span> <span class="token constant">THEN</span> <span class="token number">0</span> <span class="token constant">ELSE</span> <span class="token number">1</span> <span class="token class-name">END</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`time\` <span class="token constant">DESC</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">c1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">u3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">4</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function y(f,_){const l=o("Mermaid"),i=o("Tabs");return k(),r("div",null,[m,e(i,{id:"80",data:[{id:"关系图"},{id:"MyComUser1"},{id:"MySignUp"}]},{title0:a(({value:t,isActive:p})=>[s("关系图")]),title1:a(({value:t,isActive:p})=>[s("MyComUser1")]),title2:a(({value:t,isActive:p})=>[s("MySignUp")]),tab0:a(({value:t,isActive:p})=>[e(l,{id:"mermaid-82",code:"eJxLLXLJTEwvSszlUgAC30hnf9/QYNcgQ4VqsAAIBIcEefq5K2SmKAR4owsm5+d6pqALlhanFmGKppeDRWq5oDYFe7r7hQaQYo+CG4Y4xCpkCRfHENcQT19XhZLM3FRMY/JKUvNKUB0C93JNja5ufjXCaVYKSv55qbol+bq+iXmVChoaYFfoQC3V1EHjaypxAQBS0lNN"})]),tab1:a(({value:t,isActive:p})=>[v]),tab2:a(({value:t,isActive:p})=>[b]),_:1}),g])}const h=u(d,[["render",y],["__file","select-auto-include-configurable.html.vue"]]);export{h as default};
