import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as p}from"./app-246d031c.js";const t={},o=p(`<p><code>easy-query</code> 1.2.1+ 支持关联查询,支持多级关联查询,并且只支持first和tolist两个返回方法,支持vo对象返回支持<code>include</code>追加追踪、禁止、逻辑删除、where过滤、order、limit等一系列处理，但是返回结果必须是数据库对象实例(include方法内部),如果需要额外字段返回可以使用<code>columnInclude</code>/<code>columnIncludeMany</code>自定义返回</p><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>暂时不支持<code>proxy</code>模式</p></blockquote></div><table><thead><tr><th>类型</th><th>描述</th><th>场景</th></tr></thead><tbody><tr><td>OneToOne</td><td>一对一</td><td>学生和学生家庭信息</td></tr><tr><td>OneToMany</td><td>一对多</td><td>班级和学生</td></tr><tr><td>ManyToOne</td><td>多对一</td><td>学生和班级</td></tr><tr><td>ManyToMany</td><td>多对多</td><td>班级和老师</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p><code>include</code> 内部属于独立查询,如果您需要差异更新并且没有配置默认启动追踪查询那么需要独立进行<code>asTracking()</code>等,include的后one或者many的第二个参数表示以多少关联属性为一组进行获取</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token comment">//一对一查询启用追踪并且对子查询逻辑删除禁用</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disableLogicDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token comment">//一对一查询启用追踪并且对子查询逻辑删除禁用</span>
                        <span class="token comment">//如果查询学生有20个以上假如21个那么会先用20个id进行in查询,再用1个id进行查询最后进行合并</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="navigate" tabindex="-1"><a class="header-anchor" href="#navigate" aria-hidden="true">#</a> Navigate</h2><table><thead><tr><th>属性</th><th>是否必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td><code>true</code></td><td>-</td><td>表示当前对象和目标对象的关系<code>RelationTypeEnum</code>枚举</td></tr><tr><td>selfProperty</td><td><code>false</code></td><td>-</td><td>当前对象的哪个属性关联目标对象,空表示使用当前对象的主键</td></tr><tr><td>targetProperty</td><td><code>false</code></td><td>-</td><td>当前对象的<code>selfProperty</code>属性关联目标的哪个属性,空表示使用目标对象的主键</td></tr><tr><td>mappingClass</td><td><code>false</code></td><td>Object.class</td><td>中间表对象,必须是表对象实体字节</td></tr><tr><td>selfMappingProperty</td><td><code>false</code>多对多必填</td><td>-</td><td>当前对象的<code>selfProperty</code>属性对应中间表的哪个属性,多对多不能为空</td></tr><tr><td>targetMappingProperty</td><td><code>false</code>多对多必填</td><td>-</td><td>目标对象的<code>targetProperty</code>属性对应中间表的哪个属性,多对多不能为空</td></tr></tbody></table><h2 id="普通链接查询" tabindex="-1"><a class="header-anchor" href="#普通链接查询" aria-hidden="true">#</a> 普通链接查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//班级表</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;school_class&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolClass</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//主键</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token comment">//一对多 一个班级多个学生</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">,</span> targetProperty <span class="token operator">=</span> <span class="token string">&quot;classId&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">//完整配置,property忽略表示对应的主键</span>
<span class="token comment">//    @Navigate(value = RelationTypeEnum.OneToMany,selfProperty = &quot;id&quot;,targetProperty = &quot;classId&quot;)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> schoolStudents<span class="token punctuation">;</span>

    <span class="token comment">//中间表多对多配置,其中mappingClass表示中间表,selfMappingProperty表示中间表的哪个字段和当前表对应,</span>
    <span class="token comment">//targetMappingProperty表示中间表的哪个字段和目标表的属性对应</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToMany</span>
            <span class="token punctuation">,</span> mappingClass <span class="token operator">=</span> <span class="token class-name">SchoolClassTeacher</span><span class="token punctuation">.</span><span class="token keyword">class</span>
            <span class="token punctuation">,</span> selfMappingProperty <span class="token operator">=</span> <span class="token string">&quot;classId&quot;</span>
            <span class="token punctuation">,</span> targetMappingProperty <span class="token operator">=</span> <span class="token string">&quot;teacherId&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">//完整配置其中自己的属性和目标属性忽略表示主键</span>
<span class="token comment">//    @Navigate(value = RelationTypeEnum.ManyToMany</span>
<span class="token comment">//            , selfProperty = &quot;id&quot;</span>
<span class="token comment">//            , targetProperty = &quot;id&quot;</span>
<span class="token comment">//            , mappingClass = SchoolClassTeacher.class</span>
<span class="token comment">//            , selfMappingProperty = &quot;classId&quot;</span>
<span class="token comment">//            , targetMappingProperty = &quot;teacherId&quot;)</span>

    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolTeacher</span><span class="token punctuation">&gt;</span></span> schoolTeachers<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//学生表</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;school_student&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolStudent</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> classId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToOne</span><span class="token punctuation">,</span>selfProperty <span class="token operator">=</span> <span class="token string">&quot;classId&quot;</span><span class="token punctuation">,</span>targetProperty <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">SchoolClass</span> schoolClass<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToOne</span><span class="token punctuation">,</span>targetProperty <span class="token operator">=</span> <span class="token string">&quot;studentId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">SchoolStudentAddress</span> schoolStudentAddress<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//学生地址表</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;school_student_address&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolStudentAddress</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> studentId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToOne</span><span class="token punctuation">,</span>selfProperty <span class="token operator">=</span> <span class="token string">&quot;studentId&quot;</span><span class="token punctuation">,</span>targetProperty <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">SchoolStudent</span> schoolStudent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//教师表</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;school_teacher&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolTeacher</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToMany</span>
            <span class="token punctuation">,</span> mappingClass <span class="token operator">=</span> <span class="token class-name">SchoolClassTeacher</span><span class="token punctuation">.</span><span class="token keyword">class</span>
            <span class="token punctuation">,</span> selfProperty <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span>
            <span class="token punctuation">,</span> selfMappingProperty <span class="token operator">=</span> <span class="token string">&quot;teacherId&quot;</span>
            <span class="token punctuation">,</span> targetProperty <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span>
            <span class="token punctuation">,</span> targetMappingProperty <span class="token operator">=</span> <span class="token string">&quot;classId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClass</span><span class="token punctuation">&gt;</span></span> schoolClasses<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//教师和班级的多对多关系表</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;school_class_teacher&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolClassTeacher</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> classId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> teacherId<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onetoone" tabindex="-1"><a class="header-anchor" href="#onetoone" aria-hidden="true">#</a> OneToOne</h2><p>学生和学生地址信息关系</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> stus <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`class_id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_student\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`student_id\`<span class="token punctuation">,</span>\`address\` <span class="token constant">FROM</span> \`school_student_address\` <span class="token constant">WHERE</span> \`student_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">[</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">1</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token class-name">SchoolStudentAddress</span><span class="token punctuation">(</span>id<span class="token operator">=</span>address1<span class="token punctuation">,</span> studentId<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> address<span class="token operator">=</span>地址<span class="token number">1</span><span class="token punctuation">,</span> schoolStudent<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class2<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">2</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token class-name">SchoolStudentAddress</span><span class="token punctuation">(</span>id<span class="token operator">=</span>address2<span class="token punctuation">,</span> studentId<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> address<span class="token operator">=</span>地址<span class="token number">2</span><span class="token punctuation">,</span> schoolStudent<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">3</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token class-name">SchoolStudentAddress</span><span class="token punctuation">(</span>id<span class="token operator">=</span>address3<span class="token punctuation">,</span> studentId<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> address<span class="token operator">=</span>地址<span class="token number">3</span><span class="token punctuation">,</span> schoolStudent<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onetomany" tabindex="-1"><a class="header-anchor" href="#onetomany" aria-hidden="true">#</a> OneToMany</h2><div class="hint-container tip"><p class="hint-container-title">说明!!!</p><blockquote><p>一对多无论是否存在多的一方最终都会填充集合,永远不会为null</p></blockquote></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClass</span><span class="token punctuation">&gt;</span></span> classes <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolStudents</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_class\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`class_id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_student\` <span class="token constant">WHERE</span> \`class_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">[</span><span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">1</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">1</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">3</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class2<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">2</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class2<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">2</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class3<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">3</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="manytoone" tabindex="-1"><a class="header-anchor" href="#manytoone" aria-hidden="true">#</a> ManyToOne</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> stus <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`class_id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_student\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_class\` <span class="token constant">WHERE</span> \`id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">[</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">1</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">1</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class2<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">2</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class2<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">2</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolStudent</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> classId<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>学生<span class="token number">3</span><span class="token punctuation">,</span> schoolClass<span class="token operator">=</span><span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">1</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> schoolStudentAddress<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多对多" tabindex="-1"><a class="header-anchor" href="#多对多" aria-hidden="true">#</a> 多对多</h2><p>班级和老师之间的关系</p><div class="hint-container tip"><p class="hint-container-title">说明!!!</p><blockquote><p>多对多无论是否存在多的一方最终都会填充集合,永远不会为null</p></blockquote></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClass</span><span class="token punctuation">&gt;</span></span> classes <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolTeachers</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_class\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`class_id\`<span class="token punctuation">,</span>\`teacher_id\` <span class="token constant">FROM</span> \`school_class_teacher\` <span class="token constant">WHERE</span> \`class_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_teacher\` <span class="token constant">WHERE</span> \`id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">teacher2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">teacher1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">[</span><span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class1<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">1</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">SchoolTeacher</span><span class="token punctuation">(</span>id<span class="token operator">=</span>teacher1<span class="token punctuation">,</span> name<span class="token operator">=</span>老师<span class="token number">1</span><span class="token punctuation">,</span> schoolClasses<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolTeacher</span><span class="token punctuation">(</span>id<span class="token operator">=</span>teacher2<span class="token punctuation">,</span> name<span class="token operator">=</span>老师<span class="token number">2</span><span class="token punctuation">,</span> schoolClasses<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class2<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">2</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">SchoolTeacher</span><span class="token punctuation">(</span>id<span class="token operator">=</span>teacher2<span class="token punctuation">,</span> name<span class="token operator">=</span>老师<span class="token number">2</span><span class="token punctuation">,</span> schoolClasses<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SchoolClass</span><span class="token punctuation">(</span>id<span class="token operator">=</span>class3<span class="token punctuation">,</span> name<span class="token operator">=</span>班级<span class="token number">3</span><span class="token punctuation">,</span> schoolStudents<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> schoolTeachers<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多次include" tabindex="-1"><a class="header-anchor" href="#多次include" aria-hidden="true">#</a> 多次include</h2><p>查询班级下面的所有老师和学生</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClass</span><span class="token punctuation">&gt;</span></span> classes <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolTeachers</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolStudents</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_class\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`class_id\`<span class="token punctuation">,</span>\`teacher_id\` <span class="token constant">FROM</span> \`school_class_teacher\` <span class="token constant">WHERE</span> \`class_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_teacher\` <span class="token constant">WHERE</span> \`id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">teacher2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">teacher1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`class_id\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`school_student\` <span class="token constant">WHERE</span> \`class_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多关联查询" tabindex="-1"><a class="header-anchor" href="#多关联查询" aria-hidden="true">#</a> 多关联查询</h2><h3 id="省市区" tabindex="-1"><a class="header-anchor" href="#省市区" aria-hidden="true">#</a> 省市区</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_province&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Province</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">,</span>targetProperty <span class="token operator">=</span> <span class="token string">&quot;provinceCode&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">City</span><span class="token punctuation">&gt;</span></span> cities<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_city&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">City</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> provinceCode<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">,</span>targetProperty <span class="token operator">=</span> <span class="token string">&quot;cityCode&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Area</span><span class="token punctuation">&gt;</span></span> areas<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_area&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Area</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> provinceCode<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> cityCode<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取对应的省份下的市区和区县</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Province</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token operator">::</span><span class="token function">getCities</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getAreas</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`code\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`t_province\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`code\`<span class="token punctuation">,</span>\`province_code\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`t_city\` <span class="token constant">WHERE</span> \`province_code\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">33</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">32</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">24</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`code\`<span class="token punctuation">,</span>\`province_code\`<span class="token punctuation">,</span>\`city_code\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`t_area\` <span class="token constant">WHERE</span> \`city_code\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3211</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3310</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3210</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3208</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3307</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3207</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3306</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3206</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3305</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3205</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3304</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3204</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3303</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3203</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3302</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3202</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3213</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3301</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3201</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3212</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3311</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3309</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3209</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3308</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">4</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">197</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关联子查询过滤</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Province</span><span class="token punctuation">&gt;</span></span> provinces <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token operator">::</span><span class="token function">getCities</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span><span class="token string">&quot;3306&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getAreas</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>y<span class="token operator">-&gt;</span>y<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Area</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span><span class="token string">&quot;330602&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`code\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`t_province\`
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`code\`<span class="token punctuation">,</span>\`province_code\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`t_city\` <span class="token constant">WHERE</span> \`province_code\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">AND</span> \`code\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">33</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">32</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3306</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`code\`<span class="token punctuation">,</span>\`province_code\`<span class="token punctuation">,</span>\`city_code\`<span class="token punctuation">,</span>\`name\` <span class="token constant">FROM</span> \`t_area\` <span class="token constant">WHERE</span> \`city_code\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">AND</span> \`code\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3306</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">330602</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token punctuation">[</span><span class="token class-name">Province</span><span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> name<span class="token operator">=</span>江苏省<span class="token punctuation">,</span> cities<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Province</span><span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">,</span> name<span class="token operator">=</span>浙江省<span class="token punctuation">,</span> cities<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">City</span><span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> provinceCode<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">,</span> name<span class="token operator">=</span>绍兴市<span class="token punctuation">,</span> areas<span class="token operator">=</span><span class="token punctuation">[</span><span class="token class-name">Area</span><span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token number">330602</span><span class="token punctuation">,</span> provinceCode<span class="token operator">=</span><span class="token number">33</span><span class="token punctuation">,</span> cityCode<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> name<span class="token operator">=</span>越城区<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关联查询vo返回自定义列" tabindex="-1"><a class="header-anchor" href="#关联查询vo返回自定义列" aria-hidden="true">#</a> 关联查询VO返回自定义列</h2><p>针对关联查询的返回结果如果需要支持vo对象返回,譬如学生和班级是一对多的关系,但是我查询学生的时候只希望联级查询班级的id、名称不希望查询出额外信息,那么可以通过vo的形式来返回自定义列的关联查询。</p><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>虽然<code>include</code>方法支持vo对象返回,但是需要满足返回对象必须包含navigate映射的属性,就是说navigate的<code>selfProperty</code>和<code>targetProperty</code>可以以不同的列返回,但是必须存在于返回结果中,因为关联查询采用的是<code>splitQuery</code></p></blockquote><table><thead><tr><th>方法</th><th>描述</th><th>说明</th></tr></thead><tbody><tr><td>columnInclude</td><td>如果映射属性是对象</td><td>支持最后一个参数为表达式,用来实现VO查询需要实现的列处理,如果不填写默认<code>columnAll</code></td></tr><tr><td>columnIncludeMany</td><td>如果映射属性是集合</td><td>支持最后一个参数为表达式,用来实现VO查询需要实现的列处理,如果不填写默认<code>columnAll</code></td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token comment">//一对一查询启用追踪并且对子查询逻辑删除禁用</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disableLogicDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//学生VO对象</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolStudentVO</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> classId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span><span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToOne</span><span class="token punctuation">)</span><span class="token comment">//VO对象使用只需要定义关联关系,其余信息不需要定义,定义了也会忽略</span>
    <span class="token keyword">private</span> <span class="token class-name">SchoolClassVO</span> schoolClass<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span><span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToOne</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">VO</span>对象使用只需要定义关联关系<span class="token punctuation">,</span>其余信息不需要定义<span class="token punctuation">,</span>定义了也会忽略
    <span class="token keyword">private</span> <span class="token class-name">SchoolStudentAddressVO</span> schoolStudentAddress<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//学生地址VO对象</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolStudentAddressVO</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> studentId<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToOne</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token constant">VO</span>对象使用只需要定义关联关系<span class="token punctuation">,</span>其余信息不需要定义<span class="token punctuation">,</span>定义了也会忽略
    <span class="token keyword">private</span> <span class="token class-name">SchoolStudentVO</span> schoolStudent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//班级</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolClassVO</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span><span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">&gt;</span></span> schoolStudents<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span><span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>ManyToMany</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolTeacherVO</span><span class="token punctuation">&gt;</span></span> schoolTeachers<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//教师</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolTeacherVO</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过VO返回实现自定义列,并且实现额外的处理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//查询学生表,并且额外查出对应的班级表</span>
<span class="token comment">//一对一</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o
                <span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">//columnInclude表示单个关联属性的映射,多个采用columnIncludeMany,关联查询结果将学生表的班级</span>
                <span class="token comment">//信息映射到VO对的班级信息上面</span>
                <span class="token punctuation">.</span><span class="token function">columnInclude</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">,</span><span class="token class-name">SchoolStudentVO</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`class_id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_student\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_class\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>


<span class="token comment">//一对一自定义列</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o
                                <span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token comment">//将学生表信息查询额外查询出班级表,并且班级表只查询id不查询其他信息</span>
                                <span class="token punctuation">.</span><span class="token function">columnInclude</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">,</span><span class="token class-name">SchoolStudentVO</span><span class="token operator">::</span><span class="token function">getSchoolClass</span><span class="token punctuation">,</span>s<span class="token operator">-&gt;</span>s<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassVO</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`class_id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_student\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">8</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\` <span class="token constant">FROM</span> \`school_class\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>


<span class="token comment">//一对一自定义sql</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disableLogicDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudentVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">columnInclude</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">,</span><span class="token class-name">SchoolStudentVO</span><span class="token operator">::</span><span class="token function">getSchoolStudentAddress</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`class_id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_student\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">8</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`student_id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`address\` <span class="token constant">FROM</span> \`school_student_address\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`student_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>


<span class="token comment">//一对多</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassVO</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolStudents</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">columnIncludeMany</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolStudents</span><span class="token punctuation">,</span><span class="token class-name">SchoolClassVO</span><span class="token operator">::</span><span class="token function">getSchoolStudents</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_class\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`class_id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_student\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`class_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>


<span class="token comment">//多对多</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassVO</span><span class="token punctuation">&gt;</span></span> list2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">include</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">many</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolTeachers</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">columnIncludeMany</span><span class="token punctuation">(</span><span class="token class-name">SchoolClass</span><span class="token operator">::</span><span class="token function">getSchoolTeachers</span><span class="token punctuation">,</span><span class="token class-name">SchoolClassVO</span><span class="token operator">::</span><span class="token function">getSchoolTeachers</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_class\` t
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">13</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`class_id\`<span class="token punctuation">,</span>\`teacher_id\` <span class="token constant">FROM</span> \`school_class_teacher\` <span class="token constant">WHERE</span> \`class_id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">class3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">class1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">7</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_teacher\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`id\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">teacher2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">teacher1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">8</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(t,[["render",c],["__file","relation.html.vue"]]);export{r as default};
