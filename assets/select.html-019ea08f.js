import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as u,o as k,c as r,b as n,a as o,w as a,d as s,e}from"./app-1fcdc754.js";const d={},m=e('<h1 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select</h1><p><code>easy-query</code>的<code>select</code>是用来终结当前表达式生成新的表达式的方式</p><h2 id="select后置风格" tabindex="-1"><a class="header-anchor" href="#select后置风格" aria-hidden="true">#</a> select后置风格</h2><p>和原生SQL不同，在<code>easy-query</code>提供的DSL中，<code>select</code>语句出现在<code>where</code>，<code>orderBy</code>，<code>groupBy</code>，<code>having</code>等之后,如果表达式调用了<code>select</code>那么这个sql就是确定了的如果再次调用<code>where</code>那么前面的表达式将被视为别名表</p><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2>',5),v=n("thead",null,[n("tr",null,[n("th",null,"方法"),n("th",null,"参数"),n("th",null,"返回"),n("th",null,"描述")])],-1),b=n("td",null,[n("code",null,"select(SqlExpression selectExpression)")],-1),f=n("td",null,"列选择器",-1),y=n("td",null,"this",-1),g=n("strong",null,"不会生成匿名表",-1),E=n("code",null,"Queryable",-1),h=n("td",null,[n("code",null,"select(Class<TR> resultClass)")],-1),w=n("td",null,"列选择器返回对象",-1),_=n("td",null,"this",-1),B=n("strong",null,"生成匿名表",-1),T=n("code",null,"Queryable",-1),O=n("code",null,"columnName",-1),q=n("code",null,"String->Integer",-1),x=n("td",null,[n("code",null,"select(Class<TR> resultClass, SqlExpression selectExpression)")],-1),I=n("td",null,"列选择器返回对象,列选择器",-1),V=n("td",null,"this",-1),C=n("strong",null,"生成匿名表",-1),j=n("code",null,"Queryable",-1),R=n("code",null,"columnName",-1),S=n("code",null,"String->Integer",-1),A=n("strong",null,"！！！该方法默认不查询任何列需要手动在第二个参数表达式指定！！！",-1),M=n("tr",null,[n("td",null,[n("strong",null,"lambda表达式树模式下"),s("："),n("code",null,"select(Class<TR> resultClass)")]),n("td",null,"列选择器返回对象"),n("td",null,"this"),n("td",null,[s("同上面的"),n("code",null,"select(Class<TR> resultClass)")])],-1),N=n("tr",null,[n("td",null,[n("strong",null,"lambda表达式树模式下"),s("："),n("code",null,"select()")]),n("td",null,"列选择器返回对象"),n("td",null,"this"),n("td",null,[s("等同于"),n("code",null,"select(SqlExpression selectExpression)"),s("下的"),n("code",null,"select(s -> s.columnAll())")])],-1),L=n("tr",null,[n("td",null,[n("strong",null,"lambda表达式树模式下"),s("："),n("code",null,"select(Func<T... ,R> expr)")]),n("td",null,"列选择器返回对象"),n("td",null,"this"),n("td",null,"接受一个lambda表达式为参数,根据在lambda表达式里声明的对象的setter或是声明的匿名对象的类成员字段声明，与lambda入参的getter，以此完成数据库字段与类字段的映射")],-1),Q=e(`<div class="hint-container tip"><p class="hint-container-title">说明!!!</p><blockquote><p>代理模式下<code>select</code>的第一个参数是<code>selector</code>选择器,第二个参数开始才是真正的表,生成匿名表表示<code>select * from table</code>如果后续有新的<code>where | order | group ....</code>会把这个条件当成匿名表来处理 <code>select * from (select * from table) t</code>每个<code>select</code>都是带<code>class</code>的都是将起变成匿名表</p></blockquote></div><h2 id="selector说明" tabindex="-1"><a class="header-anchor" href="#selector说明" aria-hidden="true">#</a> selector说明</h2><h3 id="按需返回vo对象" tabindex="-1"><a class="header-anchor" href="#按需返回vo对象" aria-hidden="true">#</a> 按需返回VO对象</h3><p>定义返回的VO</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogEntityVO1</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 评分
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 状态
     */</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> abc<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 排序
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> top<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意点及说明!!!</p><blockquote><p><code>EasyEntityQuery</code>的直接<code>select(vo.class)</code>和直接返回<code>select(new vo)</code>的区别在于您是否要对后续操作进行处理,简单理解为就是操作匿名表,如果不需要只需要返回结果那么可以直接使用<code>VO.class</code>不需要生成<code>proxy</code>,但是如果您需要在后续继续操作比如<code>join</code>其他表那么select需要返回对应的<code>Proxy</code>或者使用<code>MapTypeProxy</code></p></blockquote></div>`,6),P=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"//直接映射到BlogEntityVO1.class"),s(`
easyEntityQuery`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


`),n("span",{class:"token comment"},"//只查询id和name和title映射到logEntityVO1.class"),s(`
easyEntityQuery`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("s"),n("span",{class:"token operator"},"->"),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"name"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//查询所有字段到logEntityVO1.class等同于select(BlogEntityVO1.class),会自动select vo有的字段"),s(`
easyEntityQuery`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("s"),n("span",{class:"token operator"},"->"),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"allFields"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//查询所有字段除了id和title映射到logEntityVO1.class"),s(`
easyEntityQuery`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("s"),n("span",{class:"token operator"},"->"),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"allFieldsExclude"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//也可以对BlogEntityVO1添加@EntityProxy生成代理对象来处理"),s(`

easyEntityQuery`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token operator"},"->"),n("span",{class:"token punctuation"},"{"),s(`
             `),n("span",{class:"token class-name"},"BlogEntityVO1Proxy"),s(" result "),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogEntityVO1Proxy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
             result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"selectAll"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
             result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"selectIgnores"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
             reuslt`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"abc"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"title"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token comment"},"//title as status(因为abc的属性映射为status别名)"),s(`
             `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token comment"},"//直接映射到BlogEntityVO1.class"),s(`
`),n("span",{class:"token class-name"},"BlogEntityVO1"),s(" blogEntityVO1 "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//只查询id和name和title映射到logEntityVO1.class"),s(`
`),n("span",{class:"token class-name"},"BlogEntityVO1"),s(" blogEntityVO1 "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"column"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"column"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"column"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getTitle"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//查询所有字段到logEntityVO1.class等同于select(BlogEntityVO1.class),会自动select vo有的字段"),s(`
`),n("span",{class:"token class-name"},"BlogEntityVO1"),s(" blogEntityVO1 "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"columnAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


`),n("span",{class:"token comment"},"//查询所有字段除了id和title映射到logEntityVO1.class"),s(`
easyEntityQuery`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o"),n("span",{class:"token operator"},"->"),s("o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("s"),n("span",{class:"token operator"},"->"),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"columnAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"columnIgnore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"columnIgnore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getTitle"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"//直接映射到BlogEntityVO1.class"),s(`
elq`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//只查询id和title,映射到logEntityVO2.class"),s(`
elq`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("s "),n("span",{class:"token operator"},"->"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"BlogEntityVO2"),s(" vo2 "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogEntityVO2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            vo2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setId"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            vo2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setTitle"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getTitle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"return"),s(" vo2"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//只查询id和title,映射到匿名类"),s(`
elq`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("s "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TempResult"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"String"),s(" id "),n("span",{class:"token operator"},"="),s(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token class-name"},"String"),s(" tt "),n("span",{class:"token operator"},"="),s(" s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getTitle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=e(`<p>如果出现多表属性映射,可以将相识度高的先进行全列查询,然后将不需要的进行忽略</p><h3 id="按需快速join返回列" tabindex="-1"><a class="header-anchor" href="#按需快速join返回列" aria-hidden="true">#</a> 按需快速join返回列</h3><p>这边限制VO对象返回Topic的id其他都是Blog的属性</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogEntityVO2</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 希望返回Topic的id其他都是Blog的属性
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 标题
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 内容
     */</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>large <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 博客链接
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 点赞数
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 发布时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTime<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 评分
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 状态
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 排序
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> top<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createMyTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>



</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),H=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TopicTypeVO"),n("span",{class:"token punctuation"},">")]),s(" vo "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("b1"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Select"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"of"),n("span",{class:"token punctuation"},"("),s(`
                `),n("span",{class:"token comment"},"//查询表1全部列忽略id将createTime别名改成createMyTime"),s(`
                b1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"allFieldsExclude"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"createMyTime"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                `),n("span",{class:"token comment"},"//表2获取id"),s(`
                s2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


`),n("span",{class:"token comment"},"//entity query 模式"),s(`
`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TopicTypeVO"),n("span",{class:"token punctuation"},">")]),s(" vo "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("b1"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Select"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"of"),n("span",{class:"token punctuation"},"("),s(`
                b1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"content"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"createMyTime"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                s2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"address"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"idCard"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"TopicTypeVO"),n("span",{class:"token punctuation"},">")]),s(" vo "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("s2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("b1"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token class-name"},"BlogEntityVO2Proxy"),s(" result"),n("span",{class:"token operator"},"="),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogEntityVO2Proxy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"selectAll"),n("span",{class:"token punctuation"},"("),s("b1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"selectIgnores"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                result`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createMyTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set"),n("span",{class:"token punctuation"},"("),s("b1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token keyword"},"return"),s(" result"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("b1"),n("span",{class:"token punctuation"},","),s(" s2"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"Select"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"of"),n("span",{class:"token punctuation"},"("),s(`
                `),n("span",{class:"token comment"},"//查询表1全部列忽略id将createTime别名改成createMyTime"),s(`
                b1`),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"allFieldsExclude"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"createTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"createMyTime"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                `),n("span",{class:"token comment"},"//表2获取id"),s(`
                s2`),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"FETCHER"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token class-name"},"BlogEntityVO2"),s(" blogEntityVO1 "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},","),s("t1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),s("t"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("t1"),n("span",{class:"token punctuation"},","),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},","),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(" o"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"2"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"//直接先对第二张表进行全字段获取然后忽略掉id在对第二张表进行id获取"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntityVO2"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},","),s("t1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},"->"),s("t1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"columnAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"columnIgnore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"then"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"column"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"//.columnAs(Topic::getId,BlogEntityVO2::getId)//如果属性对应的columnName不一致需要as处理"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"firstOrNull"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=e('<h3 id="匿名表" tabindex="-1"><a class="header-anchor" href="#匿名表" aria-hidden="true">#</a> 匿名表</h3><p>表达式每次<code>select</code>将会生成一个匿名表如果需要后续操作那么可以对其进行再次操作</p><p>生成的sql语句为</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>\n<span class="token keyword">SELECT</span>\n    t2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>stars<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>title<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span>\n    <span class="token punctuation">(</span><span class="token keyword">SELECT</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>blogId<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>blogCount<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span>\n        <span class="token identifier"><span class="token punctuation">`</span>t_blog<span class="token punctuation">`</span></span> t \n    <span class="token keyword">WHERE</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>deleted<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token boolean">false</span> \n        <span class="token operator">AND</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>star<span class="token punctuation">`</span></span> <span class="token operator">&gt;</span> <span class="token number">1</span> \n    <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span> t1 \n<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span>\n    <span class="token identifier"><span class="token punctuation">`</span>t_topic<span class="token punctuation">`</span></span> t2 \n        <span class="token keyword">ON</span> t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>blogId<span class="token punctuation">`</span></span> <span class="token operator">=</span> t2<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> \n<span class="token keyword">WHERE</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>blogCount<span class="token punctuation">`</span></span> <span class="token operator">&lt;=</span> <span class="token number">123</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体表达式代码为如下</p>',5),W=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"//首先我们定义两个key用来后续操作"),s(`
`),n("span",{class:"token class-name"},"MapKey"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" blogId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"MapKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stringKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"blogId"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token class-name"},"MapKey"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" blogCount "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"MapKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"integerKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"blogCount"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

 `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},">")]),s(" list "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("b "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    b`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"star"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"gt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"//对其group by"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"groupBy"),n("span",{class:"token punctuation"},"("),s("b "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"GroupKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"TABLE1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"of"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"//生成中间对象并且变成匿名表(每次select都是生成匿名表,后续如果没有别的操作那么匿名表会被展开)"),s(`
                `),n("span",{class:"token comment"},"// select * from (select blogId,blogCount from xxx group by id) t"),s(`
                `),n("span",{class:"token comment"},"//如果select后续没有非终结操作那么会被展开为 select blogId,blogCount from xxx group by id"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("group "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"MapTypeProxy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("blogId"),n("span",{class:"token punctuation"},","),s(" group"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"key1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("blogCount"),n("span",{class:"token punctuation"},","),s(" group"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"intCount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"//对匿名表进行join"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    g`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("blogId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    g`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("blogCount"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"le"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"//再次生成匿名表"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" topic"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token comment"},"//后续无操作了所以会被展开"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

定义`),n("span",{class:"token class-name"},"MapKey"),s(`是为了后续可以继续操作如果不需要可以不定义key

`),n("span",{class:"token comment"},"//展开后代码为"),s(`


`),n("span",{class:"token class-name"},"MapKey"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" blogId "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"MapKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"stringKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"blogId"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"MapKey"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" blogCount "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"MapKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"integerKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"blogCount"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//匿名表"),s(`
`),n("span",{class:"token comment"},"// SELECT * FROM (SELECT"),s(`
`),n("span",{class:"token comment"},"//         t.`id` AS `blogId`,"),s(`
`),n("span",{class:"token comment"},"//         COUNT(*) AS `blogCount` "),s(`
`),n("span",{class:"token comment"},"//     FROM"),s(`
`),n("span",{class:"token comment"},"//         `t_blog` t "),s(`
`),n("span",{class:"token comment"},"//     WHERE"),s(`
`),n("span",{class:"token comment"},"//         t.`deleted` = false "),s(`
`),n("span",{class:"token comment"},"//         AND t.`star` > 1 "),s(`
`),n("span",{class:"token comment"},"//     GROUP BY"),s(`
`),n("span",{class:"token comment"},"//         t.`id`) t1"),s(`

        `),n("span",{class:"token class-name"},"EntityQueryable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"MapTypeProxy"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Map"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" groupAndCount "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("b "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    b`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"star"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"gt"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"groupBy"),n("span",{class:"token punctuation"},"("),s("b "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token class-name"},"GroupKeys"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"TABLE1"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"of"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("group "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"MapTypeProxy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("blogId"),n("span",{class:"token punctuation"},","),s(" group"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"key1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("blogCount"),n("span",{class:"token punctuation"},","),s(" group"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"intCount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//        easyEntityQuery.getRuntimeContext().getEntityMetadataManager().getEntityMetadata()"),s(`
        `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},">")]),s(" list "),n("span",{class:"token operator"},"="),s(` groupAndCount
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    g`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("blogId"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
                `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    g`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("blogCount"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"le"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" topic"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Y=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},">")]),s(" list "),n("span",{class:"token operator"},"="),s(" elq"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("b "),n("span",{class:"token operator"},"->"),s(" b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"//对其group by"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"groupBy"),n("span",{class:"token punctuation"},"("),s("b "),n("span",{class:"token operator"},"->"),s(" b"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"//生成中间对象并且变成匿名表(每次select都是生成匿名表,后续如果没有别的操作那么匿名表会被展开)"),s(`
        `),n("span",{class:"token comment"},"// select * from (select blogId,blogCount from xxx group by id) t"),s(`
        `),n("span",{class:"token comment"},"//如果select后续没有非终结操作那么会被展开为 select blogId,blogCount from xxx group by id"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),s("g "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TempResult"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"String"),s(" blogId "),n("span",{class:"token operator"},"="),s(" g"),n("span",{class:"token punctuation"},"."),s("key"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"long"),s(" blogCount "),n("span",{class:"token operator"},"="),s(" g"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"count"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"//对匿名表进行join"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"leftJoin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" g"),n("span",{class:"token punctuation"},"."),s("blogId "),n("span",{class:"token operator"},"=="),s(" topic"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" g"),n("span",{class:"token punctuation"},"."),s("blogCount "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"123"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"//再次生成匿名表"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"select"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("g"),n("span",{class:"token punctuation"},","),s(" topic"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"->"),s(" topic"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token comment"},"//后续无操作了所以会被展开"),s(`
        `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=e('<h3 id="匿名表案例2" tabindex="-1"><a class="header-anchor" href="#匿名表案例2" aria-hidden="true">#</a> 匿名表案例2</h3><p>对一张表进行开窗函数处理并且进行筛选</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>create_by<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>update_by<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>deleted<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>title<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>content<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>url<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>star<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>publish_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>order<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>is_top<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>top<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>num<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>num<span class="token punctuation">`</span></span> \n<span class="token keyword">FROM</span>\n    <span class="token punctuation">(</span><span class="token keyword">SELECT</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>create_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>update_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>create_by<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>update_by<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>deleted<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>title<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>content<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>url<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>star<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>publish_time<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>status<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>order<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>is_top<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>top<span class="token punctuation">`</span></span><span class="token punctuation">,</span>\n        ROW_NUMBER<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span><span class="token punctuation">(</span><span class="token keyword">PARTITION</span>  <span class="token keyword">BY</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>title<span class="token punctuation">`</span></span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>score<span class="token punctuation">`</span></span> <span class="token keyword">DESC</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">`</span>num<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span>\n        <span class="token identifier"><span class="token punctuation">`</span>t_blog<span class="token punctuation">`</span></span> t \n    <span class="token keyword">WHERE</span>\n        t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>deleted<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token boolean">false</span> \n        <span class="token operator">AND</span> t<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>star<span class="token punctuation">`</span></span> <span class="token operator">&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> t1 <span class="token comment">--生成匿名表</span>\n<span class="token keyword">WHERE</span>\n    t1<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>num<span class="token punctuation">`</span></span> <span class="token operator">&lt;</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//创建dto额外多一个num字段</span>\n<span class="token annotation punctuation">@Data</span>\n<span class="token annotation punctuation">@EntityProxy</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogPartitionEntityVO</span> <span class="token keyword">extends</span> <span class="token class-name">BlogEntity</span><span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogPartitionEntityVO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>b <span class="token operator">-&gt;</span> b<span class="token punctuation">.</span><span class="token function">star</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>b <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>\n                    <span class="token class-name">Expression</span> expression <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token class-name">BlogPartitionEntityVOProxy</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogPartitionEntityVOProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    r<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    r<span class="token punctuation">.</span><span class="token function">num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>\n                            expression<span class="token punctuation">.</span><span class="token function">sqlType</span><span class="token punctuation">(</span><span class="token string">&quot;ROW_NUMBER() OVER(PARTITION BY {0} ORDER BY {1} DESC)&quot;</span><span class="token punctuation">,</span> c <span class="token operator">-&gt;</span> c<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">score</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                    <span class="token punctuation">.</span><span class="token function">setPropertyType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n                    <span class="token keyword">return</span> r<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>b <span class="token operator">-&gt;</span> b<span class="token punctuation">.</span><span class="token function">num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tomap" tabindex="-1"><a class="header-anchor" href="#tomap" aria-hidden="true">#</a> toMap</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//查询所有并且将其他表字段查询出来</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUser</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> t2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s1<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">MapTypeProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectExpression</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntityVO2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token comment">//如果不进行忽略两个id都查询,但是默认会把后面的覆盖掉前面的</span>\n        <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">//相同的代码如果使用toMap将会抛出 IllegalStateException 异常:Duplicate key found: id</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',6);function z(X,Z){const p=u("font"),l=u("CodeTabs");return k(),r("div",null,[m,n("table",null,[v,n("tbody",null,[n("tr",null,[b,f,y,n("td",null,[o(p,{color:"red"},{default:a(()=>[g]),_:1}),s(",返回当前"),E,s("对象指定的列,用于按需查询")])]),n("tr",null,[h,w,_,n("td",null,[o(p,{color:"red"},{default:a(()=>[B]),_:1}),s(",返回当前"),T,s("对象属性映射所对应的列名和返回结果属性列名一样的列,即两者属性名可以不一致但是只要两者属性名都是映射为相同"),O,s("即可互相映射，如果返回结果属性类型不包容原属性类型，比如"),q,s(" 那么可能会出现转换失败,")])]),n("tr",null,[x,I,V,n("td",null,[o(p,{color:"red"},{default:a(()=>[C]),_:1}),s(",返回当前"),j,s("对象属性映射所对应的列名和返回结果属性列名一样的列,即两者属性名可以不一致但是只要两者属性名都是映射为相同"),R,s("即可互相映射，如果返回结果属性类型不包容原属性类型，比如"),S,s(" 那么可能会出现转换失败,区别就是可以自己手动指定列,"),o(p,{color:"red"},{default:a(()=>[A]),_:1})])]),M,N,L])]),Q,o(l,{id:"143",data:[{id:"对象模式"},{id:"lambda模式"},{id:"lambda表达式树模式"}]},{title0:a(({value:t,isActive:c})=>[s("对象模式")]),title1:a(({value:t,isActive:c})=>[s("lambda模式")]),title2:a(({value:t,isActive:c})=>[s("lambda表达式树模式")]),tab0:a(({value:t,isActive:c})=>[P]),tab1:a(({value:t,isActive:c})=>[F]),tab2:a(({value:t,isActive:c})=>[D]),_:1}),K,o(l,{id:"164",data:[{id:"对象模式"},{id:"lambda模式"}]},{title0:a(({value:t,isActive:c})=>[s("对象模式")]),title1:a(({value:t,isActive:c})=>[s("lambda模式")]),tab0:a(({value:t,isActive:c})=>[H]),tab1:a(({value:t,isActive:c})=>[J]),_:1}),U,o(l,{id:"188",data:[{id:"对象模式"},{id:"lambda表达式树模式"}]},{title0:a(({value:t,isActive:c})=>[s("对象模式")]),title1:a(({value:t,isActive:c})=>[s("lambda表达式树模式")]),tab0:a(({value:t,isActive:c})=>[W]),tab1:a(({value:t,isActive:c})=>[Y]),_:1}),G])}const sn=i(d,[["render",z],["__file","select.html.vue"]]);export{sn as default};
