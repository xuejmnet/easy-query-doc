import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as u,b as i,w as a,d as n,e as s,f as k}from"./app-96a10c60.js";const r={},d=n("h2",{id:"复合计算属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#复合计算属性","aria-hidden":"true"},"#"),s(" 复合计算属性")],-1),m=n("p",null,[s("通常我们会对用户的年龄使用一个字段来进行存储,但是大部分时候这个年龄属性应该是动态计算的而不是实时计算的,如果我们存储firstName和lastName那么用户的name字段也可以通过这种方式来实现计算,"),n("br"),s(" 总之复合计算属性是由当前对的一个或者多个以上的数据通过一定的函数进行组合来实现一个动态不存在数据库中的属性,并且改属性支持筛选排序筛选和分组等操作")],-1),v=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"t_user_extra"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EntityProxy"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserExtra"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ProxyEntityAvailable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"UserExtra"),s(),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"UserExtraProxy"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" firstName"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" lastName"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" birthday"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@InsertIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("sqlConversion "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"FullNameColumnValueSQLConverter"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" fullName"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@InsertIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("sqlConversion "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"UserAgeColumnValueSQLConverter"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token comment"},"//如果您不想默认查询这个字段可以设置autoSelect=false,需要时手动指定或者VO里面有也会自动映射"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Integer"),s(" age"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[s(`
`),n("span",{class:"token keyword"},"create"),s(),n("span",{class:"token keyword"},"table"),s(` t_user_extra
`),n("span",{class:"token punctuation"},"("),s(`
    id `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'主键ID'"),n("span",{class:"token keyword"},"primary"),s(),n("span",{class:"token keyword"},"key"),n("span",{class:"token punctuation"},","),s(`
    first_name `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'姓'"),n("span",{class:"token punctuation"},","),s(`
    last_name `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'名'"),n("span",{class:"token punctuation"},","),s(`
    birthday `),n("span",{class:"token keyword"},"datetime"),s("  "),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'生日'"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'用户额外信息表'"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=k(`<h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAgeColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isRealColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isMergeSubQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 当这个值被作为select的时候如何处理
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">runtimeContext</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> durationDay <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>fx<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeDurationEnum<span class="token punctuation">.</span>Days</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> sqlFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">numberCalc</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>durationDay<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">NumberCalcEnum</span><span class="token punctuation">.</span><span class="token constant">NUMBER_DEVIDE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> ageSQLFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">math</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>sqlFunction<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MathMethodEnum<span class="token punctuation">.</span>Ceiling</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> ageSQLFunction<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            ageSQLFunction<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 当这个值被用作非查询的值的时候如何处理不出现在select里面
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">runtimeContext</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> durationDay <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>fx<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeDurationEnum<span class="token punctuation">.</span>Days</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> sqlFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">numberCalc</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>durationDay<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">NumberCalcEnum</span><span class="token punctuation">.</span><span class="token constant">NUMBER_DEVIDE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> ageSQLFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">math</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>sqlFunction<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MathMethodEnum<span class="token punctuation">.</span>Ceiling</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> ageSQLFunction<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            ageSQLFunction<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 当前值作为比较值的时候比如where age=18 那么这个18应该怎么处理
     * 当前这个值作为存储值的时候比如insert table (age) values(18)那么这个值如何处理
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlParameter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">runtimeContext</span>
     * <span class="token keyword">@param</span> <span class="token parameter">isCompareValue</span> 当前值是用于比较还是存储
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span><span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FullNameColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> concat <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> concat<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            concat<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> concat <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> concat<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            concat<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span><span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserExtra</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`first_name\`<span class="token punctuation">,</span>
    \`last_name\`<span class="token punctuation">,</span>
    \`birthday\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`full_name\`<span class="token punctuation">,</span> <span class="token operator">--</span> 全名就是first<span class="token operator">+</span>last
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>\`birthday\`<span class="token punctuation">,</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`age\` <span class="token operator">--</span> 计算出出生日期到现在的天数除以<span class="token number">365</span>就是年向上取整就是虚岁
<span class="token constant">FROM</span>
    \`t_user_extra\` 
<span class="token class-name">WHERE</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%123%&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">IN</span> <span class="token punctuation">(</span>
        <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;2&#39;</span>
    <span class="token punctuation">)</span> 
    <span class="token class-name">AND</span> <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> \`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">12</span>


<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserExtra</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            u<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;悟&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`first_name\`<span class="token punctuation">,</span>
    \`last_name\`<span class="token punctuation">,</span>
    \`birthday\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`full_name\`<span class="token punctuation">,</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>\`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`age\` 
<span class="token constant">FROM</span>
    \`t_user_extra\` 
<span class="token constant">WHERE</span>
    \`id\` <span class="token operator">=</span> <span class="token char">&#39;test2&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%悟%&#39;</span> 
<span class="token constant">ORDER</span> <span class="token class-name">BY</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">ASC</span>




<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserExtra</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            u<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;悟&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            x<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            x<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token class-name">OrderByModeEnum</span><span class="token punctuation">.</span><span class="token constant">NULLS_LAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`first_name\`<span class="token punctuation">,</span>
    \`last_name\`<span class="token punctuation">,</span>
    \`birthday\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span> \`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`full_name\`<span class="token punctuation">,</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> \`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`age\` 
<span class="token constant">FROM</span>
    \`t_user_extra\` 
<span class="token constant">WHERE</span>
    \`id\` <span class="token operator">=</span> <span class="token char">&#39;test3&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%悟%&#39;</span> 
<span class="token constant">ORDER</span> <span class="token class-name">BY</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span> \`last_name\`<span class="token punctuation">)</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> \`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>
    <span class="token constant">CASE</span> 
        <span class="token class-name">WHEN</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>  \`last_name\`<span class="token punctuation">)</span> <span class="token constant">IS</span> <span class="token constant">NULL</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
        <span class="token constant">ELSE</span> <span class="token number">0</span> 
    <span class="token class-name">END</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span> \`last_name\`<span class="token punctuation">)</span> <span class="token constant">ASC</span>



<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Draft3</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                u<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;悟&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//创建group by 2.3.4之前使用GroupKeys.TABLE1_10.of</span>
            <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token class-name">GroupKeys</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>group <span class="token operator">-&gt;</span> <span class="token class-name">Select</span><span class="token punctuation">.</span><span class="token constant">DRAFT</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
                    group<span class="token punctuation">.</span><span class="token function">key1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    group<span class="token punctuation">.</span><span class="token function">key2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    group<span class="token punctuation">.</span><span class="token function">groupTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token class-name">SELECT</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`value1\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`value2\`<span class="token punctuation">,</span>
    <span class="token function">MAX</span><span class="token punctuation">(</span><span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`value3\` 
<span class="token constant">FROM</span>
    \`t_user_extra\` t 
<span class="token constant">WHERE</span>
    t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> <span class="token char">&#39;test3&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%悟%&#39;</span> 
<span class="token constant">GROUP</span> <span class="token class-name">BY</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入" tabindex="-1"><a class="header-anchor" href="#插入" aria-hidden="true">#</a> 插入</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserExtra</span> userExtra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span><span class="token string">&quot;孙&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token string">&quot;悟空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setBirthday</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
easyEntityQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>userExtra<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">INSERT</span> 
<span class="token constant">INTO</span>
    \`t_user_extra\`
    <span class="token punctuation">(</span>
        \`id\`<span class="token punctuation">,</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">,</span>\`birthday\`
    <span class="token punctuation">)</span> 
<span class="token constant">VALUES</span>
    <span class="token punctuation">(</span><span class="token char">&#39;test2&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;孙&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;悟空&#39;</span><span class="token punctuation">,</span>&#39;<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>&#39;<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function y(g,C){const e=c("CodeTabs");return l(),u("div",null,[d,m,i(e,{id:"6",data:[{id:"对象模式"},{id:"sql脚本"}]},{title0:a(({value:t,isActive:p})=>[s("对象模式")]),title1:a(({value:t,isActive:p})=>[s("sql脚本")]),tab0:a(({value:t,isActive:p})=>[v]),tab1:a(({value:t,isActive:p})=>[b]),_:1}),f])}const S=o(r,[["render",y],["__file","combine-prop.html.vue"]]);export{S as default};
