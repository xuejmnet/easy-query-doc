import{_ as l,W as i,X as u,$ as r,a1 as a,a2 as t,C as k,Y as s,Z as n}from"./framework-6199cc12.js";const d={},m=t('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><p><code>easy-query</code>的逻辑删除可以帮助用户在<code>select</code>的时候过滤逻辑删除字段，<code>update</code>的时候也可以，<code>delete</code>的时候也可以转换对应的<code>update</code>,并且系统提供了大量的默认逻辑删除策略,并且用户也可以自定义实现更多的逻辑删除</p>',2),v=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[s("span",{class:"token annotation punctuation"},"@Data"),n(`
`),s("span",{class:"token annotation punctuation"},"@Table"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"t_logic_del_topic"'),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"LogicDelTopic"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token annotation punctuation"},"@Column"),s("span",{class:"token punctuation"},"("),n("primaryKey "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},")"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" id"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"Integer"),n(" stars"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" title"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token annotation punctuation"},"@LogicDelete"),s("span",{class:"token punctuation"},"("),n("strategy "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token class-name"},"LogicDeleteStrategyEnum"),s("span",{class:"token punctuation"},"."),s("span",{class:"token constant"},"BOOLEAN"),s("span",{class:"token punctuation"},")"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"Boolean"),n(" deleted"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"LocalDateTime"),n(" createTime"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),b=s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token comment"},"-- 数据库表结构语句"),n(`
`),s("span",{class:"token keyword"},"create"),n(),s("span",{class:"token keyword"},"table"),n(` t_logic_del_topic
`),s("span",{class:"token punctuation"},"("),n(`
    id `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"32"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"not"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'主键ID'"),s("span",{class:"token keyword"},"primary"),n(),s("span",{class:"token keyword"},"key"),s("span",{class:"token punctuation"},","),n(`
    stars `),s("span",{class:"token keyword"},"int"),n(),s("span",{class:"token operator"},"not"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'点赞数'"),s("span",{class:"token punctuation"},","),n(`
    title `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"50"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'标题'"),s("span",{class:"token punctuation"},","),n(`
    deleted `),s("span",{class:"token keyword"},"tinyint"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),n("  "),s("span",{class:"token operator"},"not"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'是否删除'"),s("span",{class:"token punctuation"},","),n(`
    create_time `),s("span",{class:"token keyword"},"datetime"),n(),s("span",{class:"token operator"},"not"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'创建时间'"),n(`
`),s("span",{class:"token punctuation"},")"),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'逻辑删除主题表'"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),g=t('<h2 id="logicdelete" tabindex="-1"><a class="header-anchor" href="#logicdelete" aria-hidden="true">#</a> LogicDelete</h2><p>在对应的数据库实体上面添加注解,<code>LogicDelete</code>可以让整个实体以该字段作为逻辑删除字段,其中<code>strategy</code>表示为逻辑删除字段的枚举,除了框架默认提供的框架也支持用户自定义逻辑删除</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子" aria-hidden="true">#</a> 例子</h2><p>查询</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LogicDelTopic</span><span class="token punctuation">&gt;</span></span> logicDelTopics <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">LogicDelTopic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_logic_del_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">100</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按条件删除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">deletable</span><span class="token punctuation">(</span><span class="token class-name">LogicDelTopic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_logic_del_topic <span class="token constant">SET</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">11</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实体对象删除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">LogicDelTopic</span> logicDelTopic <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">LogicDelTopic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">whereId</span><span class="token punctuation">(</span><span class="token string">&quot;11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_logic_del_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">11</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">deletable</span><span class="token punctuation">(</span>logicDelTopic<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_logic_del_topic <span class="token constant">SET</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">11</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="strategy" tabindex="-1"><a class="header-anchor" href="#strategy" aria-hidden="true">#</a> strategy</h3><table><thead><tr><th>枚举</th><th>默认</th><th>描述</th></tr></thead><tbody><tr><td>CUSTOM</td><td>❌</td><td>用户自定义实现<code>EasyLogicDeleteStrategy</code>或者 <code>AbstractEasyLogicDeleteStrategy</code></td></tr><tr><td>BOOLEAN</td><td>✅</td><td>Boolean,boolean类型的属性true表示删除,false表示未被删除</td></tr><tr><td>DELETE_LONG_TIMESTAMP</td><td>❌</td><td>Long,long类型的属性,0表示未被删除,大于0表示被删除</td></tr><tr><td>LOCAL_DATE_TIME</td><td>❌</td><td>LocalDateTime.class null表示未被删除, not null表示被删除</td></tr><tr><td>LOCAL_DATE</td><td>❌</td><td>LocalDate.class null表示未被删除, not null表示被删除</td></tr></tbody></table>',11);function y(h,_){const e=k("CodeTabs");return i(),u("div",null,[m,r(e,{id:"6",data:[{title:"LogicDelTopic"},{title:"SQL"}]},{tab0:a(({title:o,value:p,isActive:c})=>[v]),tab1:a(({title:o,value:p,isActive:c})=>[b]),_:1}),g])}const w=l(d,[["render",y],["__file","logic-delete.html.vue"]]);export{w as default};
