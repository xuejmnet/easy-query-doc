import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as r,o as n}from"./app-DyhWZuEd.js";const o={};function s(i,e){return n(),a("div",null,e[0]||(e[0]=[r('<p><code>eq</code>&#39;s associated queries are one of <code>eq</code>&#39;s core features, used to facilitate users returning arbitrarily structured relational data. If you have finished reading the navigation properties chapter, then the current chapter is a supplement to <code>eq</code>&#39;s return results. <code>eq</code>&#39;s navigation properties can not only generate complex SQL but also fetch and return data in corresponding structures.</p><p>Supports relationship settings between any columns: primary key and non-primary key, primary key and primary key, non-primary key and non-primary key, multiple columns as well.</p><h2 id="structured-objects" tabindex="-1"><a class="header-anchor" href="#structured-objects"><span>Structured Objects</span></a></h2><p>Fetch and return to memory based on database entity navigation property configuration structure, and query at minimum cost, commonly used for internal business</p><h2 id="structured-dtos" tabindex="-1"><a class="header-anchor" href="#structured-dtos"><span>Structured DTOs</span></a></h2><p>Return DTOs with the same structure as database entity objects and support adding or removing additional fields on DTOs to achieve custom return of data structures</p><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><ul><li><ol><li><code>include/includes</code> are only used when returning database objects</li></ol></li><li><ol start="2"><li><code>fillOne/fillMany</code> can handle any programmatic nesting, the disadvantage is that the returned object must contain relationship keys, such as A-&gt;B, querying B must also query <code>A.Id</code> and <code>B.AId</code></li></ol></li><li><ol start="3"><li><code>selectAutoInclude</code> is the most powerful structured return, only needs entities to establish corresponding relationships and supports any structure special handling</li></ol></li></ul>',8)]))}const u=t(o,[["render",s]]),l=JSON.parse(`{"path":"/en/include/","title":"Associated Queries","lang":"en-US","frontmatter":{"title":"Associated Queries","description":"eq's associated queries are one of eq's core features, used to facilitate users returning arbitrarily structured relational data. If you have finished reading the navigation pro...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Associated Queries\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-26T17:39:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/en/include/"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Associated Queries"}],["meta",{"property":"og:description","content":"eq's associated queries are one of eq's core features, used to facilitate users returning arbitrarily structured relational data. If you have finished reading the navigation pro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-26T17:39:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T17:39:47.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/dromara/easy-query/easy-query-doc/include/"}]]},"git":{"createdTime":1761500387000,"updatedTime":1761500387000,"contributors":[{"name":"只是我","username":"","email":"alice@example.com","commits":1}]},"readingTime":{"minutes":0.68,"words":205},"filePathRelative":"en/include/README.md","autoDesc":true}`);export{u as comp,l as data};
