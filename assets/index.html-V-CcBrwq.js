import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,e as a,o as c}from"./app-DBmQRiHW.js";const n={};function i(d,e){return c(),o("div",null,e[0]||(e[0]=[a('<p><code>eq</code>的关联查询是<code>eq</code>的核心之一,用来方便用户返回任意结构的关系数据,如果你已经看完导航属性章节那么当前章节就是对<code>eq</code>返回结果的补充,<code>eq</code>的导航属性不但可以生成复杂的sql也能拉取返回对应结构的数据</p><p>支持任意列之间的关系设置 主键与非主键 主键与主键 非主键与非主键 多列之间亦可以</p><h2 id="结构化对象" tabindex="-1"><a class="header-anchor" href="#结构化对象"><span>结构化对象</span></a></h2><p>以数据库实体为对象进行导航属性配置的结构进行拉取返回到内存中,并且以最小代价进行查询,常用于业务内部</p><h2 id="结构化dto" tabindex="-1"><a class="header-anchor" href="#结构化dto"><span>结构化DTO</span></a></h2><p>以数据库实体对象为结构进行相同结构的dto返回并且支持在dto上进行额外的字段增减来实现数据结构的自定义返回</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li>1.<code>include/includes</code>仅在返回数据库对象时使用</li><li>2.<code>fillOne/fillMany</code>可以处理任意编程试嵌套,缺点是返回对象必须包含关系键比如A-&gt;B 查询B必须也查询<code>A.Id</code>和<code>B.AId</code></li><li>3.<code>selectAutoInclude</code>最强结构化返回,只需要实体建立对应的关系即可并且支持任意结构特殊化处理</li></ul>',8)]))}const l=t(n,[["render",i]]),s=JSON.parse('{"path":"/include/","title":"关联查询","lang":"zh-CN","frontmatter":{"title":"关联查询","description":"eq的关联查询是eq的核心之一,用来方便用户返回任意结构的关系数据,如果你已经看完导航属性章节那么当前章节就是对eq返回结果的补充,eq的导航属性不但可以生成复杂的sql也能拉取返回对应结构的数据 支持任意列之间的关系设置 主键与非主键 主键与主键 非主键与非主键 多列之间亦可以 结构化对象 以数据库实体为对象进行导航属性配置的结构进行拉取返回到内存中...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关联查询\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-11T15:10:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/include/"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"关联查询"}],["meta",{"property":"og:description","content":"eq的关联查询是eq的核心之一,用来方便用户返回任意结构的关系数据,如果你已经看完导航属性章节那么当前章节就是对eq返回结果的补充,eq的导航属性不但可以生成复杂的sql也能拉取返回对应结构的数据 支持任意列之间的关系设置 主键与非主键 主键与主键 非主键与非主键 多列之间亦可以 结构化对象 以数据库实体为对象进行导航属性配置的结构进行拉取返回到内存中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-11T15:10:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-11T15:10:17.000Z"}]]},"git":{"createdTime":1745029627000,"updatedTime":1746976217000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":2,"url":"https://github.com/xuejiaming"}]},"readingTime":{"minutes":1.11,"words":332},"filePathRelative":"include/README.md","autoDesc":true}');export{l as comp,s as data};
