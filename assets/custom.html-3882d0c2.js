import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,f as s}from"./app-c6c544f7.js";const t={},i=s(`<h1 id="自定义内容" tabindex="-1"><a class="header-anchor" href="#自定义内容" aria-hidden="true">#</a> 自定义内容</h1><p><code>eq</code>默认框架注解提供了如何在运行时读取比如表或者列的备注信息,是否可为null或者自定义数据库类型等,但是有时候大家希望通过自己已有的注解或者在生成式进行预先干预解析元信息</p><h2 id="migrationentityparser" tabindex="-1"><a class="header-anchor" href="#migrationentityparser" aria-hidden="true">#</a> MigrationEntityParser</h2><p><code>eq 2.5.7^</code>版本暴露该接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
        easyEntityQuery<span class="token punctuation">.</span><span class="token function">setMigrationParser</span><span class="token punctuation">(</span>xxxx<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上述方法可以让框架在解析时使用自定义的解析方法</p><h2 id="未完待续。。。。。" tabindex="-1"><a class="header-anchor" href="#未完待续。。。。。" aria-hidden="true">#</a> 未完待续。。。。。</h2>`,7),r=[i];function c(o,d){return e(),n("div",null,r)}const u=a(t,[["render",c],["__file","custom.html.vue"]]);export{u as default};
