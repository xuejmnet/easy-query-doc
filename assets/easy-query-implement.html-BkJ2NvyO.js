import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as n,d as s,a as t,e as a,o as r}from"./app-Db9EbxW4.js";const p={},h=["src"],d=["src"],c=["src"],k=["src"];function g(e,i){return r(),o("div",null,[i[0]||(i[0]=n('<h1 id="easyqueryimplement" tabindex="-1"><a class="header-anchor" href="#easyqueryimplement"><span>EasyQueryImplement</span></a></h1><h2 id="automatic-proxy-object-implementation" tabindex="-1"><a class="header-anchor" href="#automatic-proxy-object-implementation"><span>Automatic Proxy Object Implementation</span></a></h2><p><code>eq</code> uses Java&#39;s APT technology (KSP technology in Kotlin) to generate proxy objects for objects by generating source code at compile time. The objects that users operate on are proxy objects.</p><h2 id="generate-proxy-classes" tabindex="-1"><a class="header-anchor" href="#generate-proxy-classes"><span>Generate Proxy Classes</span></a></h2><p>The proxy class <code>SysUserProxy</code> associated with the entity class <code>SysUser</code> does not currently exist. Idea cannot recognize the proxy class and cannot compile it, but we can still trigger <code>eq</code>&#39;s APT tool to generate the proxy class by building the project. <code>eq</code>&#39;s APT will create corresponding proxy classes for all entity classes that use <code>@EntityProxy</code>. Proxy classes provide friendly hints and type checking for table aliases, column names, column types, etc. These proxy classes can help us better set condition queries and assignments.</p><p>After building the project, the proxy classes will be generated in the specified directory as follows:</p>',6)),s("img",{src:e.$withBase("/images/startup5.png")},null,8,h),i[1]||(i[1]=s("div",{class:"hint-container warning"},[s("p",{class:"hint-container-title"},"Note!!!"),s("blockquote",null,[s("p",null,[a("If EasyQueryImplement doesn't work, please check if the class has added "),s("code",null,"@EntityProxy")])])],-1)),s("img",{src:e.$withBase("/images/startup3.png")},null,8,d),i[2]||(i[2]=s("div",{class:"hint-container warning"},[s("p",{class:"hint-container-title"},"Note!!!"),t(" > Framework version 2.0.15+ does not need to implement the `proxyTableClass` method, and the idea-plugin plugin will not generate this method after 0.0.57 "),s("blockquote",null,[s("p",null,[a("If your project is multi-module, you only need to use "),s("code",null,"sql-processor"),a(" in the modules that need to use the @EntityProxy annotation")])])],-1)),t(' <img src="/startup1.png"> '),i[3]||(i[3]=s("p",null,"After building the project, if Idea still cannot recognize the proxy classes, you can mark the directory as a generated directory.",-1)),s("img",{src:e.$withBase("/images/startup2.png")},null,8,c),i[4]||(i[4]=s("div",{class:"hint-container warning"},[s("p",{class:"hint-container-title"},"Note!!!"),s("blockquote",null,[s("p",null,"If it still doesn't work, it's recommended to click the Maven refresh button on the right side of Idea to refresh")])],-1)),s("img",{src:e.$withBase("/images/startup4.png")},null,8,k),t(" After building the project and generating the proxy classes, you need to import the corresponding proxy class `UserProxy` in `User` "),i[5]||(i[5]=n(`<div class="hint-container caution"><p class="hint-container-title">Note!!!</p><p>If the proxy class is not generated, i.e., it prompts that the <code>Proxy</code> class does not exist</p><ul><li><p>Check if there are errors like javacTree, which may be caused by a low version of lombok. Upgrade it.</p></li><li><p>Check if the sql-processor package is imported (if there is no <code>annotationProcessorPaths</code> as shown below, it is recommended to import independently in each module that needs to generate proxies (in multi-module projects))</p></li><li><p>If you are using <code>gradle</code>, the import should be changed from <code>implement</code> to <code>annotationprocessor</code>, i.e., <code>annotationProcessor &quot;com.easy-query:sql-processor:\${easyQueryVersion}&quot;</code></p></li><li><p>Set Idea&#39;s annotation processor: Build, Execution, Deployment, Compiler, Annotation Processors, select Enable annotation processing and select Obtain processors from project classpath</p></li><li><p>If you already have <code>annotationProcessorPaths</code>, you can add <code>eq</code>&#39;s <code>apt</code> processing to it. If you haven&#39;t used it before, it&#39;s still recommended to import <code>sql-processor</code> separately in the modules that need apt.<br> With the following configuration, you don&#39;t need to import <code>sql-processor</code> separately in each individual <code>module</code>:</p></li></ul><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.apache.maven.plugins&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;maven-compiler-plugin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;3.8.1&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">annotationProcessorPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- Note the order. If it doesn&#39;t work, move eq to the first position --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            &lt;!-- lombok... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            &lt;!-- mapstruct... --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.easy-query&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;sql-processor&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;\${easy-query.version}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">annotationProcessorPaths</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,1)),t(' <img src="/startup6.png"> ')])}const u=l(p,[["render",g]]),B=JSON.parse(`{"path":"/en/plugin/easy-query-implement.html","title":"Quick Generate ProxyEntityAvailable","lang":"en-US","frontmatter":{"title":"Quick Generate ProxyEntityAvailable","order":10,"category":["plugin"],"description":"EasyQueryImplement Automatic Proxy Object Implementation eq uses Java's APT technology (KSP technology in Kotlin) to generate proxy objects for objects by generating source code...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quick Generate ProxyEntityAvailable\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-27T12:11:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/en/plugin/easy-query-implement.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Quick Generate ProxyEntityAvailable"}],["meta",{"property":"og:description","content":"EasyQueryImplement Automatic Proxy Object Implementation eq uses Java's APT technology (KSP technology in Kotlin) to generate proxy objects for objects by generating source code..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-27T12:11:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-27T12:11:30.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/dromara/easy-query/easy-query-doc/plugin/easy-query-implement.html"}]]},"git":{"createdTime":1761567090000,"updatedTime":1761567090000,"contributors":[{"name":"只是我","username":"","email":"alice@example.com","commits":1}]},"readingTime":{"minutes":1.74,"words":521},"filePathRelative":"en/plugin/easy-query-implement.md","autoDesc":true}`);export{u as comp,B as data};
