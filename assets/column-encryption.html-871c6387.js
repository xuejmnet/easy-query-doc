import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as k,c as d,a as s,b as n,d as o,w as a,e}from"./app-8df9ad00.js";const m={},v=s("h1",{id:"数据库列加密",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#数据库列加密","aria-hidden":"true"},"#"),n(" 数据库列加密")],-1),y=s("code",null,"easy-query",-1),b={href:"https://jaq-doc.alibaba.com/docs/doc.htm?treeId=1&articleId=106213&docType=1",target:"_blank",rel:"noopener noreferrer"},g=s("code",null,"easy-query",-1),_=e('<h2 id="encryptionstrategy" tabindex="-1"><a class="header-anchor" href="#encryptionstrategy" aria-hidden="true">#</a> EncryptionStrategy</h2><table><thead><tr><th>方法</th><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>encrypt</td><td>对象,属性,值</td><td>加密值,在插入修改查询的时候会被调用</td></tr><tr><td>decrypt</td><td>对象,属性,值</td><td>解密值,在查询的时候会被解密</td></tr></tbody></table><h2 id="encryption" tabindex="-1"><a class="header-anchor" href="#encryption" aria-hidden="true">#</a> Encryption</h2><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>strategy</td><td>无</td><td>加密策略实现类,使用具体那个加密策略来实现当前列的加密</td></tr><tr><td>supportQueryLike</td><td>false</td><td>是否支持模糊查询,默认不支持,默认支持等于匹配,区别在于使用like或者like相关查询的时候会将入参进行相同方式加密后匹配,需要加密算法支持模糊查询</td></tr></tbody></table><h2 id="demo数据" tabindex="-1"><a class="header-anchor" href="#demo数据" aria-hidden="true">#</a> demo数据</h2>',5),E=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[s("span",{class:"token annotation punctuation"},"@Data"),n(`
`),s("span",{class:"token annotation punctuation"},"@Table"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},'"t_sys_user_encryption"'),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"SysUserEncryption"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token annotation punctuation"},"@Column"),s("span",{class:"token punctuation"},"("),n("primaryKey "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token boolean"},"true"),s("span",{class:"token punctuation"},")"),n(`xia
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" id"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" name"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token annotation punctuation"},"@Encryption"),s("span",{class:"token punctuation"},"("),n("strategy "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token class-name"},"Base64EncryptionStrategy"),s("span",{class:"token punctuation"},"."),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" phoneNotSupportLike"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token annotation punctuation"},"@Encryption"),s("span",{class:"token punctuation"},"("),n("strategy "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token class-name"},"Base64EncryptionStrategy"),s("span",{class:"token punctuation"},"."),s("span",{class:"token keyword"},"class"),s("span",{class:"token punctuation"},")"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" addressNotSupportLike"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" phoneSupportLike"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"String"),n(" addressSupportLike"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),h=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[n(`
`),s("span",{class:"token doc-comment comment"},[n(`/**
 * create time 2023/4/4 11:38
 * 如果是spring项目可以通过@Component 否则就自行添加到EasyQueryConfiguration.applyEncryptionStrategy
 *
 * `),s("span",{class:"token keyword"},"@author"),n(` xuejiaming
 */`)]),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"Base64EncryptionStrategy"),n(),s("span",{class:"token keyword"},"implements"),n(),s("span",{class:"token class-name"},"EncryptionStrategy"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token annotation punctuation"},"@Override"),n(`
    `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"Object"),n(),s("span",{class:"token function"},"encrypt"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"Class"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token operator"},"?"),s("span",{class:"token punctuation"},">")]),n(" entityClass"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token class-name"},"String"),n(" propertyName"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token class-name"},"Object"),n(" plaintext"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"if"),s("span",{class:"token punctuation"},"("),n("plaintext"),s("span",{class:"token operator"},"=="),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{"),n(`
            `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token punctuation"},"}"),n(`
        `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token class-name"},"String"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"Base64Util"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"encode"),s("span",{class:"token punctuation"},"("),n("plaintext"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"toString"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"getBytes"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"StandardCharsets"),s("span",{class:"token punctuation"},"."),s("span",{class:"token constant"},"UTF_8"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),s("span",{class:"token class-name"},"StandardCharsets"),s("span",{class:"token punctuation"},"."),s("span",{class:"token constant"},"UTF_8"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`

    `),s("span",{class:"token annotation punctuation"},"@Override"),n(`
    `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"Object"),n(),s("span",{class:"token function"},"decrypt"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"Class"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token operator"},"?"),s("span",{class:"token punctuation"},">")]),n(" entityClass"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token class-name"},"String"),n(" propertyName"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token class-name"},"Object"),n(" ciphertext"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
        `),s("span",{class:"token keyword"},"if"),s("span",{class:"token punctuation"},"("),n("ciphertext"),s("span",{class:"token operator"},"=="),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"{"),n(`
            `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
        `),s("span",{class:"token punctuation"},"}"),n(`

        `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token class-name"},"String"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"Base64Util"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"decode"),s("span",{class:"token punctuation"},"("),n("ciphertext"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"toString"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"getBytes"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"StandardCharsets"),s("span",{class:"token punctuation"},"."),s("span",{class:"token constant"},"UTF_8"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),s("span",{class:"token class-name"},"StandardCharsets"),s("span",{class:"token punctuation"},"."),s("span",{class:"token constant"},"UTF_8"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),S=s("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[s("pre",{class:"language-sql"},[s("code",null,[s("span",{class:"token comment"},"-- 数据库表结构语句"),n(`
`),s("span",{class:"token keyword"},"create"),n(),s("span",{class:"token keyword"},"table"),n(` t_sys_user_encryption
`),s("span",{class:"token punctuation"},"("),n(`
    id `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"32"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"not"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'主键ID'"),s("span",{class:"token keyword"},"primary"),n(),s("span",{class:"token keyword"},"key"),s("span",{class:"token punctuation"},","),n(`
    name `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"32"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"not"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'名称'"),s("span",{class:"token punctuation"},","),n(`
    phone_not_support_like `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'不支持like的手机号'"),s("span",{class:"token punctuation"},","),n(`
    phone_support_like `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"200"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'支持like的手机号'"),s("span",{class:"token punctuation"},","),n(`
    address_not_support_like `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1024"),s("span",{class:"token punctuation"},")"),n("  "),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'支持like的地址'"),s("span",{class:"token punctuation"},","),n(`
    address_support_like `),s("span",{class:"token keyword"},"varchar"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1024"),s("span",{class:"token punctuation"},")"),n("  "),s("span",{class:"token boolean"},"null"),n(),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'不支持like的地址'"),n(`
`),s("span",{class:"token punctuation"},")"),s("span",{class:"token keyword"},"comment"),n(),s("span",{class:"token string"},"'用户字段加密表'"),s("span",{class:"token punctuation"},";"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),f=e('<h2 id="插入数据测试" tabindex="-1"><a class="header-anchor" href="#插入数据测试" aria-hidden="true">#</a> 插入数据测试</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserEncryption</span> sysUserEncryption <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysUserEncryption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;name1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setPhoneNotSupportLike</span><span class="token punctuation">(</span><span class="token string">&quot;12345678901&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setAddressNotSupportLike</span><span class="token punctuation">(</span><span class="token string">&quot;浙江省绍兴市越城区城市广场旁边2-102&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">long</span> l1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>l1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">.</span><span class="token function">getPhoneNotSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getPhoneNotSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">.</span><span class="token function">getAddressNotSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getAddressNotSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getPhoneNotSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;12345678901&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption3 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getPhoneNotSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;12345678901&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNull</span><span class="token punctuation">(</span>sysUserEncryption3<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token class-name">INTO</span> t_sys_user_encryption <span class="token punctuation">(</span>`id`<span class="token punctuation">,</span>`name`<span class="token punctuation">,</span>`phone_not_support_like`<span class="token punctuation">,</span>`address_not_support_like`<span class="token punctuation">,</span>`phone_support_like`<span class="token punctuation">,</span>`address_support_like`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> \n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">name1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">MTIzNDU2Nzg5MDE</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span>rWZ5rGf55yB57uN5YW05biC6LaK5Z<span class="token operator">+</span><span class="token class-name">O5Yy65Z</span><span class="token operator">+</span><span class="token class-name">O5biC5bm</span><span class="token operator">/</span><span class="token number">5</span>Zy65peB6L65Mi0xMDI<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`phone_not_support_like` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token class-name">MTIzNDU2Nzg5MDE</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`phone_not_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token operator">%</span><span class="token number">12345678901</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="加密实现类支持模糊搜索高性能" tabindex="-1"><a class="header-anchor" href="#加密实现类支持模糊搜索高性能" aria-hidden="true">#</a> 加密实现类支持模糊搜索高性能</h2>',3),w={href:"https://jaq-doc.alibaba.com/docs/doc.htm?treeId=1&articleId=106213&docType=1",target:"_blank",rel:"noopener noreferrer"},U=e('<p>这边采用阿里巴巴密文字段检索方案,来实现本次功能,实现手机地址的加密存储且高性能模糊搜索</p><h3 id="加密方式" tabindex="-1"><a class="header-anchor" href="#加密方式" aria-hidden="true">#</a> 加密方式</h3><p>AES/CBC/PKCS5Padding 加密长度,<code>非中文单个字符占一个长度</code>,<code>中文一个字符占两个长度</code>,<code>默认非中文4个长度为一组</code>,<code>中文两个为一组</code>,如果需要搜索默认需要至少4个非中文字符或者2个中文字符如下</p><table><thead><tr><th>算法/模式/填充</th><th>16 字节加密后数据长度</th><th>不满 16 字节加密后长度</th><th>本次采用</th></tr></thead><tbody><tr><td>AES/CBC/NoPadding</td><td>16</td><td>不支持</td><td>❌</td></tr><tr><td><strong>AES/CBC/PKCS5Padding</strong></td><td>32</td><td>16</td><td>✅</td></tr><tr><td>AES/CBC/ISO10126Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/CFB/NoPadding</td><td>16</td><td>原始数据长度</td><td>❌</td></tr><tr><td>AES/CFB/PKCS5Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/CFB/ISO10126Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/ECB/NoPadding</td><td>16</td><td>不支持</td><td>❌</td></tr><tr><td>AES/ECB/PKCS5Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/ECB/ISO10126Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/OFB/NoPadding</td><td>16</td><td>原始数据长度</td><td>❌</td></tr><tr><td>AES/OFB/PKCS5Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/OFB/ISO10126Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/PCBC/NoPadding</td><td>16</td><td>不支持</td><td>❌</td></tr><tr><td>AES/PCBC/PKCS5Padding</td><td>32</td><td>16</td><td>❌</td></tr><tr><td>AES/PCBC/ISO10126Padding</td><td>32</td><td>16</td><td>❌</td></tr></tbody></table><h3 id="实现加密策略" tabindex="-1"><a class="header-anchor" href="#实现加密策略" aria-hidden="true">#</a> 实现加密策略</h3><p><code>easy-query</code>很贴心的给各位提供了默认的加密策略抽象,您只需要将秘钥和偏移量进行填入即可<code>AbstractUnSupportEmojiAesBase64EncryptionStrategy</code>或<code>AbstractSupportEmojiAesBase64EncryptionStrategy</code>。</p>',6),q=e('<div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p><code>AbstractUnSupportEmojiAesBase64EncryptionStrategy</code>抽象类默认仅支持非emoji的列,比如中文数字英文特殊符号等,<code>AbstractSupportEmojiAesBase64EncryptionStrategy</code>支持emoji的处理,两者的区别就是相对的不支持<code>Emoji</code>的策略性能会稍微高一点点</p></blockquote></div><h3 id="abstractunsupportemojiaesbase64encryptionstrategy" tabindex="-1"><a class="header-anchor" href="#abstractunsupportemojiaesbase64encryptionstrategy" aria-hidden="true">#</a> AbstractUnSupportEmojiAesBase64EncryptionStrategy</h3><p>不支持emoji</p><h3 id="abstractsupportemojiaesbase64encryptionstrategy" tabindex="-1"><a class="header-anchor" href="#abstractsupportemojiaesbase64encryptionstrategy" aria-hidden="true">#</a> AbstractSupportEmojiAesBase64EncryptionStrategy</h3><table><thead><tr><th>方法</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>getIv</td><td>无</td><td>16位向量</td></tr><tr><td>getKey</td><td>无</td><td>16位秘钥</td></tr><tr><td>encryptWordMinLength</td><td>4</td><td>最小加密长度</td></tr><tr><td>chineseCharOccupancyLength</td><td>2</td><td>一个中文占用长度</td></tr><tr><td>throwIfDecryptFail</td><td>true</td><td>遇到错误是否抛出</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyEncryptionStrategy</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractSupportEmojiAesBase64EncryptionStrategy</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getIv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;A-16-Byte-String&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">&quot;1234567890abcdef&quot;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改原始的对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>\n<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_sys_user_encryption&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SysUserEncryption</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Encryption</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">Base64EncryptionStrategy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> phoneNotSupportLike<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Encryption</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">Base64EncryptionStrategy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> addressNotSupportLike<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Encryption</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">MyEncryptionStrategy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>supportQueryLike <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> phoneSupportLike<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@Encryption</span><span class="token punctuation">(</span>strategy <span class="token operator">=</span> <span class="token class-name">MyEncryptionStrategy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>supportQueryLike <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> addressSupportLike<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserEncryption</span> sysUserEncryption <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysUserEncryption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;name2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setPhoneSupportLike</span><span class="token punctuation">(</span><span class="token string">&quot;12345678901&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nsysUserEncryption<span class="token punctuation">.</span><span class="token function">setAddressSupportLike</span><span class="token punctuation">(</span><span class="token string">&quot;浙江省绍兴市越城区城市广场旁边2-102&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">long</span> l1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>l1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token class-name">INTO</span> t_sys_user_encryption <span class="token punctuation">(</span>`id`<span class="token punctuation">,</span>`name`<span class="token punctuation">,</span>`phone_not_support_like`<span class="token punctuation">,</span>`address_not_support_like`<span class="token punctuation">,</span>`phone_support_like`<span class="token punctuation">,</span>`address_support_like`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> \n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">name2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">PBNjuyKlEazZoRRnMUupJA</span><span class="token operator">==</span><span class="token class-name">IgrQqipSFtsBJal4l1uviA</span><span class="token operator">==</span>act0SMpmvTNWd<span class="token operator">/</span><span class="token operator">+</span>aBXnybA<span class="token operator">==</span>avtYLQlFEztwFOYNB0x<span class="token operator">+</span><span class="token class-name">Cw</span><span class="token operator">==</span><span class="token class-name">XORntDPVNDrdId</span><span class="token operator">+</span><span class="token class-name">JLsMH4w</span><span class="token operator">==</span><span class="token class-name">S</span><span class="token operator">+</span>w1G858r9lawlqhSbHw9A<span class="token operator">==</span><span class="token class-name">VRhLsnycy28X4io</span><span class="token operator">+</span>sRAScA<span class="token operator">==</span><span class="token class-name">XNGeRBsmiV4Jd</span><span class="token operator">+</span>iMjzyd6w<span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span>JxqmAe3vLE3As62ds8z<span class="token operator">/</span><span class="token class-name">Q</span><span class="token operator">==</span><span class="token class-name">RfK4efiC8TpWrlW8EYOE7Q</span><span class="token operator">==</span>xYgFo1HQhvsZb3aqqJEr0w<span class="token operator">==</span>taspTHZ7faxKgLu8WiR4xg<span class="token operator">==</span><span class="token number">3</span>K4XEON1qksj0l068srXLg<span class="token operator">==</span>kGziT8zvaq0Mr4mgC0o8ew<span class="token operator">==</span>o<span class="token operator">/</span><span class="token class-name">KgX28zI</span><span class="token operator">/</span>vzwYP6H<span class="token operator">+</span>yBPQ<span class="token operator">==</span>bIV0eBlAxjvAu53mCRCJKQ<span class="token operator">==</span><span class="token number">3</span>T589p9NTva5G7yy6Tw1zA<span class="token operator">==</span><span class="token class-name">CbmPqpgcbPXq9ZnKJ6eFOg</span><span class="token operator">==</span><span class="token number">7</span>TBMWW5dxwjhmnuxffO2BQ<span class="token operator">==</span><span class="token number">87</span>EZCkWnYFik<span class="token operator">+</span>lABuLm<span class="token operator">/</span><span class="token number">0</span>g<span class="token operator">==</span><span class="token class-name">SiaBG</span><span class="token operator">+</span>vnzNx<span class="token operator">/</span>p2<span class="token operator">/</span><span class="token number">7</span>VNtYmw<span class="token operator">==</span><span class="token class-name">R</span><span class="token operator">+</span><span class="token class-name">BfXClbpMfdtvtgNpb2Kg</span><span class="token operator">==</span><span class="token number">2</span>bm0wNpPthXLTTf3ePF8Ow<span class="token operator">==</span><span class="token operator">/</span><span class="token class-name">RAvJwP3bdCH88opBIxHNA</span><span class="token operator">==</span><span class="token class-name">YtwmFV6JyKHYTLkcp3Xxvw</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">.</span><span class="token function">getPhoneSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getPhoneSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption<span class="token punctuation">.</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getPhoneSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;12345678901&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span>sysUserEncryption1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sysUserEncryption2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`phone_support_like` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token class-name">PBNjuyKlEazZoRRnMUupJA</span><span class="token operator">==</span><span class="token class-name">IgrQqipSFtsBJal4l1uviA</span><span class="token operator">==</span>act0SMpmvTNWd<span class="token operator">/</span><span class="token operator">+</span>aBXnybA<span class="token operator">==</span>avtYLQlFEztwFOYNB0x<span class="token operator">+</span><span class="token class-name">Cw</span><span class="token operator">==</span><span class="token class-name">XORntDPVNDrdId</span><span class="token operator">+</span><span class="token class-name">JLsMH4w</span><span class="token operator">==</span><span class="token class-name">S</span><span class="token operator">+</span>w1G858r9lawlqhSbHw9A<span class="token operator">==</span><span class="token class-name">VRhLsnycy28X4io</span><span class="token operator">+</span>sRAScA<span class="token operator">==</span><span class="token class-name">XNGeRBsmiV4Jd</span><span class="token operator">+</span>iMjzyd6w<span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption3 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getPhoneSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;34567&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption3<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`phone_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token operator">%</span>act0SMpmvTNWd<span class="token operator">/</span><span class="token operator">+</span>aBXnybA<span class="token operator">==</span>avtYLQlFEztwFOYNB0x<span class="token operator">+</span><span class="token class-name">Cw</span><span class="token operator">==</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption4 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;2-102&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption4<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token operator">%</span><span class="token operator">/</span><span class="token class-name">RAvJwP3bdCH88opBIxHNA</span><span class="token operator">==</span><span class="token class-name">YtwmFV6JyKHYTLkcp3Xxvw</span><span class="token operator">==</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption5 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">likeMatchRight</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;2-102&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption5<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token operator">%</span><span class="token operator">/</span><span class="token class-name">RAvJwP3bdCH88opBIxHNA</span><span class="token operator">==</span><span class="token class-name">YtwmFV6JyKHYTLkcp3Xxvw</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption6 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">likeMatchLeft</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;浙江省绍兴市&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption6<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token number">5</span>JxqmAe3vLE3As62ds8z<span class="token operator">/</span><span class="token class-name">Q</span><span class="token operator">==</span><span class="token class-name">RfK4efiC8TpWrlW8EYOE7Q</span><span class="token operator">==</span>xYgFo1HQhvsZb3aqqJEr0w<span class="token operator">==</span>taspTHZ7faxKgLu8WiR4xg<span class="token operator">==</span><span class="token number">3</span>K4XEON1qksj0l068srXLg<span class="token operator">==</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption7 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;绍兴&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>sysUserEncryption7<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token operator">%</span>taspTHZ7faxKgLu8WiR4xg<span class="token operator">==</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token comment">//中文单字符不支持查询所以是空</span>\n<span class="token class-name">SysUserEncryption</span> sysUserEncryption8 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getAddressSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;绍&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNull</span><span class="token punctuation">(</span>sysUserEncryption8<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`name`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_not_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`phone_support_like`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">FROM</span> t_sys_user_encryption t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`address_support_like` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token operator">%</span><span class="token class-name">UXUfduoPhC3qV7yzGkaYHg</span><span class="token operator">==</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>sysUserEncryption7<span class="token punctuation">.</span><span class="token function">setPhoneSupportLike</span><span class="token punctuation">(</span><span class="token string">&quot;13232323321&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">long</span> l2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>sysUserEncryption7<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>l2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_sys_user_encryption <span class="token constant">SET</span> `name` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>`phone_not_support_like` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>`address_not_support_like` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>`phone_support_like` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>`address_support_like` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> `id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">name2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">7</span>OH9gTLq8hK4vflSizrRKg<span class="token operator">==</span>rsW<span class="token operator">+</span><span class="token class-name">JktKi</span><span class="token operator">+</span><span class="token number">3</span>iIq0Xm3vSSw<span class="token operator">==</span><span class="token operator">/</span><span class="token class-name">RYbVYX8k</span><span class="token operator">/</span>qGMprCZslddg<span class="token operator">==</span>rsW<span class="token operator">+</span><span class="token class-name">JktKi</span><span class="token operator">+</span><span class="token number">3</span>iIq0Xm3vSSw<span class="token operator">==</span><span class="token operator">/</span><span class="token class-name">RYbVYX8k</span><span class="token operator">/</span>qGMprCZslddg<span class="token operator">==</span><span class="token class-name">TncRPIKuqNopeX</span><span class="token operator">/</span><span class="token class-name">GJCgjGw</span><span class="token operator">==</span><span class="token class-name">UH8PuTSDSuiTj</span><span class="token operator">+</span>rLVsnjOA<span class="token operator">==</span><span class="token number">2</span>EppLfMm<span class="token operator">+</span><span class="token class-name">O7BMtPJ7xH7CA</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span>JxqmAe3vLE3As62ds8z<span class="token operator">/</span><span class="token class-name">Q</span><span class="token operator">==</span><span class="token class-name">RfK4efiC8TpWrlW8EYOE7Q</span><span class="token operator">==</span>xYgFo1HQhvsZb3aqqJEr0w<span class="token operator">==</span>taspTHZ7faxKgLu8WiR4xg<span class="token operator">==</span><span class="token number">3</span>K4XEON1qksj0l068srXLg<span class="token operator">==</span>kGziT8zvaq0Mr4mgC0o8ew<span class="token operator">==</span>o<span class="token operator">/</span><span class="token class-name">KgX28zI</span><span class="token operator">/</span>vzwYP6H<span class="token operator">+</span>yBPQ<span class="token operator">==</span>bIV0eBlAxjvAu53mCRCJKQ<span class="token operator">==</span><span class="token number">3</span>T589p9NTva5G7yy6Tw1zA<span class="token operator">==</span><span class="token class-name">CbmPqpgcbPXq9ZnKJ6eFOg</span><span class="token operator">==</span><span class="token number">7</span>TBMWW5dxwjhmnuxffO2BQ<span class="token operator">==</span><span class="token number">87</span>EZCkWnYFik<span class="token operator">+</span>lABuLm<span class="token operator">/</span><span class="token number">0</span>g<span class="token operator">==</span><span class="token class-name">SiaBG</span><span class="token operator">+</span>vnzNx<span class="token operator">/</span>p2<span class="token operator">/</span><span class="token number">7</span>VNtYmw<span class="token operator">==</span><span class="token class-name">R</span><span class="token operator">+</span><span class="token class-name">BfXClbpMfdtvtgNpb2Kg</span><span class="token operator">==</span><span class="token number">2</span>bm0wNpPthXLTTf3ePF8Ow<span class="token operator">==</span><span class="token operator">/</span><span class="token class-name">RAvJwP3bdCH88opBIxHNA</span><span class="token operator">==</span><span class="token class-name">YtwmFV6JyKHYTLkcp3Xxvw</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">long</span> l3 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getPhoneSupportLike</span><span class="token punctuation">,</span> <span class="token string">&quot;19876543210&quot;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SysUserEncryption</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>l2<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_sys_user_encryption <span class="token constant">SET</span> `phone_support_like` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> `id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token number">5</span>mvI8ru5KU2gEoqUhUCR7A<span class="token operator">==</span><span class="token class-name">MXfvDfZA1YdM7qws03g1ew</span><span class="token operator">==</span><span class="token number">82</span>zyfpam7R2nhH8QGEV2PA<span class="token operator">==</span><span class="token class-name">IRTc1Xc89aXhLz6g2EMWtw</span><span class="token operator">==</span><span class="token class-name">U</span><span class="token operator">+</span><span class="token class-name">T8I0LMIZE62zLYLQPcHw</span><span class="token operator">==</span>z21auLlv0TzO5sWM8E15Sg<span class="token operator">==</span>o601InWNlOLFRSPiuivKLA<span class="token operator">==</span><span class="token class-name">WlISXTG</span><span class="token operator">+</span><span class="token class-name">AJUzRY1SF31</span><span class="token operator">+</span><span class="token class-name">Eg</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然目前算法不一定是最优的空间也不一定是最有效的,但是这边也是提供了默认的希望大家可以pr相关思路算法等,<code>easy-query</code>目前可以做到高性能无感的列加密存储处理</p>',21);function A(L,N){const l=c("ExternalLinkIcon"),u=c("CodeTabs"),i=c("font");return k(),d("div",null,[v,s("p",null,[y,n("提供了建议的数据列加密功能,可以实现功能复杂的数据库列加密,并且可以支持模糊查询.实现方式具体请看"),s("a",b,[n("阿里巴巴密文字段检索方案"),o(l)]),n(" ，这边"),g,n("给出了一个默认的实现,并且支持所有数据库")]),_,o(u,{id:"93",data:[{id:"SysUserEncryption"},{id:"Base64EncryptionStrategy"},{id:"SQL"}]},{title0:a(({value:t,isActive:p})=>[n("SysUserEncryption")]),title1:a(({value:t,isActive:p})=>[n("Base64EncryptionStrategy")]),title2:a(({value:t,isActive:p})=>[n("SQL")]),tab0:a(({value:t,isActive:p})=>[E]),tab1:a(({value:t,isActive:p})=>[h]),tab2:a(({value:t,isActive:p})=>[S]),_:1}),f,s("p",null,[s("a",w,[n("阿里巴巴密文字段检索方案"),o(l)])]),U,o(i,{color:"red"},{default:a(()=>[n("这边提供的抽象秘钥和偏移量必须全是16位长度的字符串")]),_:1}),n("】"),q])}const I=r(m,[["render",A],["__file","column-encryption.html.vue"]]);export{I as default};
