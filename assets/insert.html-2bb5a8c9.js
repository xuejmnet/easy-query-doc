import{_ as i}from"./qrcode-1849df2b.js";import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as k,c as d,a as e,w as a,b as n,d as s,e as o}from"./app-bede0fff.js";const m={},v=o(`<h1 id="新增" tabindex="-1"><a class="header-anchor" href="#新增" aria-hidden="true">#</a> 新增</h1><p><code>EasyQuery</code>提供了单条插入和批量插入数据的方法,可以返回数据库执行插入后的受影响行数。</p><p>数据库建表脚本</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> t_topic
<span class="token punctuation">(</span>
    id <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;主键ID&#39;</span><span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    stars <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;点赞数&#39;</span><span class="token punctuation">,</span>
    title <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;标题&#39;</span><span class="token punctuation">,</span>
    create_time <span class="token keyword">datetime</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;创建时间&#39;</span>
<span class="token punctuation">)</span><span class="token keyword">comment</span> <span class="token string">&#39;主题表&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>java实体对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_topic&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EntityFileProxy</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Topic</span> <span class="token keyword">implements</span> <span class="token class-name">ProxyEntityAvailable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Topic</span> <span class="token punctuation">,</span> <span class="token class-name">TopicProxy</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> stars<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Topic</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Topic</span> topic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Topic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    topic<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    topic<span class="token punctuation">.</span><span class="token function">setStars</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    topic<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    topic<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    topics<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>topic<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-单条插入" tabindex="-1"><a class="header-anchor" href="#_1-单条插入" aria-hidden="true">#</a> 1.单条插入</h2>`,7),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"long"),s(" rows "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insertable"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"executeRows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//返回结果rows为1"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"long"),s(" rows "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insertable"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"executeRows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//返回结果rows为1"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=o('<div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code>插入sql：INSERT INTO t_topic <span class="token operator">(</span>`id`<span class="token punctuation">,</span>`stars`<span class="token punctuation">,</span>`title`<span class="token punctuation">,</span>`create_time`<span class="token operator">)</span> VALUES <span class="token operator">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token operator">)</span> \n<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Preparing<span class="token operator">:</span> INSERT INTO t_topic <span class="token operator">(</span>`id`<span class="token punctuation">,</span>`stars`<span class="token punctuation">,</span>`title`<span class="token punctuation">,</span>`create_time`<span class="token operator">)</span> VALUES <span class="token operator">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token operator">)</span> \n<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">0</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">0</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-16T</span><span class="token time number">21:34:13.287</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>\n<span class="token operator">&lt;</span><span class="token operator">=</span><span class="token operator">=</span> Total<span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果当前数据表为自增id那么会回填对应的数据到id主键里面使用<code>executeRows(true)</code></p><h2 id="_2-多条插入" tabindex="-1"><a class="header-anchor" href="#_2-多条插入" aria-hidden="true">#</a> 2.多条插入</h2><p>批量插入需要jdbc链接字符串开启<code>&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true</code>开启后性能将会大幅提升,并且默认需要使<code>InsertStrategy</code>用<code>ALL_COULMNS</code>策略,不然还是单条执行,当然可以使用batch或者到了插入批处理阈值也是可以的</p>',4),h=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"long"),s(" rows "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insertable"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"executeRows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//返回结果rows为10"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"long"),s(" rows "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insertable"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"executeRows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//返回结果rows为10"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=o(`<div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Preparing<span class="token operator">:</span> INSERT INTO t_topic <span class="token operator">(</span>\`id\`<span class="token punctuation">,</span>\`stars\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`create_time\`<span class="token operator">)</span> VALUES <span class="token operator">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token operator">)</span> 
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">0</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">0</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-16T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">1</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-17T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">2</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">2</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-18T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">3</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">3</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-19T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">4</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">4</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-20T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">5</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">5</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-21T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">6</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">106</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">6</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-22T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">7</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">107</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">7</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-23T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">8</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">8</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-24T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">9</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">109</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">9</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-25T</span><span class="token time number">21:38:22.114</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">&lt;</span><span class="token operator">=</span><span class="token operator">=</span> Total<span class="token operator">:</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-链式添加" tabindex="-1"><a class="header-anchor" href="#_3-链式添加" aria-hidden="true">#</a> 3.链式添加</h2>`,2),_=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"long"),s(" rows "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insertable"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"executeRows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//返回结果rows为2"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"long"),s(" rows "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insertable"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),s("topics"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"executeRows"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//返回结果rows为2"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=o(`<div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Preparing<span class="token operator">:</span> INSERT INTO t_topic <span class="token operator">(</span>\`id\`<span class="token punctuation">,</span>\`stars\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`create_time\`<span class="token operator">)</span> VALUES <span class="token operator">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token operator">)</span> 
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">0</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">0</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-16T</span><span class="token time number">21:42:12.542</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token number">1</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token operator">(</span>Integer<span class="token operator">)</span><span class="token punctuation">,</span>标题<span class="token number">1</span><span class="token operator">(</span>String<span class="token operator">)</span><span class="token punctuation">,</span><span class="token date number">2023-03-17T</span><span class="token time number">21:42:12.542</span><span class="token operator">(</span>LocalDateTime<span class="token operator">)</span>
<span class="token operator">&lt;</span><span class="token operator">=</span><span class="token operator">=</span> Total<span class="token operator">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-自增主键回填" tabindex="-1"><a class="header-anchor" href="#_4-自增主键回填" aria-hidden="true">#</a> 4.自增主键回填</h2><p>很多时候我们设置id自增那么需要在插入的时候回填对应的主键自增信息所以<code>easy-query</code>也提供了该功能,并且很方便的使用</p><ul><li><code>executeRows(true)</code> true表示需要回填主键</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_topic_auto&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EntityFileProxy</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicAuto</span> <span class="token keyword">implements</span> <span class="token class-name">ProxyEntityAvailable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicAuto</span> <span class="token punctuation">,</span> <span class="token class-name">TopicAutoProxy</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>generatedKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//设置主键为自增</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> stars<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>

<span class="token punctuation">}</span>


<span class="token class-name">TopicAuto</span> topicAuto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicAuto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicAuto<span class="token punctuation">.</span><span class="token function">setStars</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicAuto<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span> <span class="token operator">+</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicAuto<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNull</span><span class="token punctuation">(</span>topicAuto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//true表示需要回填主键</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>topicAuto<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>topicAuto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Preparing: <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>t_topic_auto<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>stars<span class="token punctuation">\`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>title<span class="token punctuation">\`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>?<span class="token punctuation">,</span>?<span class="token punctuation">,</span>?<span class="token punctuation">)</span>
<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters: <span class="token number">999</span><span class="token punctuation">(</span><span class="token keyword">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span>title999<span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">31</span>T16:<span class="token number">36</span>:<span class="token number">06.552</span><span class="token punctuation">(</span>LocalDateTime<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> Total: <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-策略新增" tabindex="-1"><a class="header-anchor" href="#_5-策略新增" aria-hidden="true">#</a> 5.策略新增</h2><p><code>insertStrategy</code>表示sql的执行策略,<code>insert</code>命令默认采用<code>SQLExecuteStrategyEnum.ONLY_NOT_NULL_COLUMNS</code>就是说默认生成的sql如果对象属性为null就不生成insert列。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryLargeColumnTestEntity</span> queryLargeColumnTestEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryLargeColumnTestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryLargeColumnTestEntity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>queryLargeColumnTestEntity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//默认not null列插入所以只会生成一列</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`query_large_column_test\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">)</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>


<span class="token class-name">QueryLargeColumnTestEntity</span> queryLargeColumnTestEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryLargeColumnTestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryLargeColumnTestEntity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>queryLargeColumnTestEntity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSQLStrategy</span><span class="token punctuation">(</span><span class="token class-name">SQLExecuteStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">ALL_COLUMNS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//所有列都插入</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`query_large_column_test\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`content\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>



<span class="token class-name">QueryLargeColumnTestEntity</span> queryLargeColumnTestEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryLargeColumnTestEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryLargeColumnTestEntity<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>queryLargeColumnTestEntity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSQLStrategy</span><span class="token punctuation">(</span><span class="token class-name">SQLExecuteStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">ONLY_NULL_COLUMNS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//只插入null列</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`query_large_column_test\` <span class="token punctuation">(</span>\`name\`<span class="token punctuation">,</span>\`content\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="map插入" tabindex="-1"><a class="header-anchor" href="#map插入" aria-hidden="true">#</a> Map插入</h2><p><code>easy-query</code>还支持<code>Map</code>结构的数据插入支持,其中<code>map</code>的<code>key</code>表示数据库对应的列名,并且不需要添加asTable来指定操作的数据库表名</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> stringObjectHashMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stringObjectHashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stringObjectHashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stringObjectHashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
stringObjectHashMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name2&quot;</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
easyQuery<span class="token punctuation">.</span><span class="token function">mapInsertable</span><span class="token punctuation">(</span>stringObjectHashMap<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">asTable</span><span class="token punctuation">(</span><span class="token string">&quot;sys_table&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setSQLStrategy</span><span class="token punctuation">(</span><span class="token class-name">SQLExecuteStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">ONLY_NOT_NULL_COLUMNS</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`sys_table\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`name\`<span class="token punctuation">,</span>\`name1\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重复插入策略" tabindex="-1"><a class="header-anchor" href="#重复插入策略" aria-hidden="true">#</a> 重复插入策略</h2>`,13),L=n("code",null,"conflictThen",-1),q=n("p",null,"如果在使用方法时遇到了问题，欢迎进群提问。",-1),x=n("div",{style:{"text-align":"center"}},[n("img",{src:i,alt:"群号: 170029046",class:"no-zoom",style:{width:"200px"}}),n("h4",{id:"easyquery官方qq群-170029046",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#easyquery官方qq群-170029046","aria-hidden":"true"},"#"),s(" EasyQuery官方QQ群: 170029046")])],-1);function E(I,A){const c=l("CodeTabs"),u=l("RouterLink");return k(),d("div",null,[v,e(c,{id:"17",data:[{id:"对象模式"},{id:"lambda模式"}]},{title0:a(({value:t,isActive:p})=>[s("对象模式")]),title1:a(({value:t,isActive:p})=>[s("lambda模式")]),tab0:a(({value:t,isActive:p})=>[b]),tab1:a(({value:t,isActive:p})=>[g]),_:1}),y,e(c,{id:"35",data:[{id:"对象模式"},{id:"lambda模式"}]},{title0:a(({value:t,isActive:p})=>[s("对象模式")]),title1:a(({value:t,isActive:p})=>[s("lambda模式")]),tab0:a(({value:t,isActive:p})=>[h]),tab1:a(({value:t,isActive:p})=>[w]),_:1}),T,e(c,{id:"47",data:[{id:"对象模式"},{id:"lambda模式"}]},{title0:a(({value:t,isActive:p})=>[s("对象模式")]),title1:a(({value:t,isActive:p})=>[s("lambda模式")]),tab0:a(({value:t,isActive:p})=>[_]),tab1:a(({value:t,isActive:p})=>[f]),_:1}),S,n("p",null,[s("Easy Query提供了"),L,s("方法,请参考"),e(u,{to:"/basic/insertOrUpdate.html"},{default:a(()=>[s("插入或更新")]),_:1}),s("章节。")]),q,x])}const Q=r(m,[["render",E],["__file","insert.html.vue"]]);export{Q as default};
