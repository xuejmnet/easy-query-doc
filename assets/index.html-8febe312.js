import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as n,c as s,a as e,b as a,d as c,e as d}from"./app-f6c1722f.js";const i={},h=e("h1",{id:"超级功能",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#超级功能","aria-hidden":"true"},"#"),a(" 超级功能")],-1),l=e("code",null,"easy-query",-1),u=e("br",null,null,-1),_={href:"https://github.com/dotnetcore/sharding-core",target:"_blank",rel:"noopener noreferrer"},f=d('<h4 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h4><ul><li><a href="/easy-query-doc/guide/super/sharding-table">《分表》</a> 数据库表进行分表处理</li><li><a href="/easy-query-doc/guide/super/sharding-datasource">《分库》</a> 数据库对象分库处理</li></ul><h3 id="案例源码" tabindex="-1"><a class="header-anchor" href="#案例源码" aria-hidden="true">#</a> 案例源码</h3><p>所有的超级功能的案例源码都在<a href="">easy-query-sample</a></p>',4);function p(m,x){const r=o("ExternalLinkIcon");return n(),s("div",null,[h,e("p",null,[l,a("的超级功能主要是分表分库和读写分离,作者有着多年的分库分表经验,并且在其他语言上也有一套相对完善的分表分库orm扩展"),u,a(" (sharding-core)["),e("a",_,[a("https://github.com/dotnetcore/sharding-core"),c(r)]),a("]")]),f])}const y=t(i,[["render",p],["__file","index.html.vue"]]);export{y as default};
