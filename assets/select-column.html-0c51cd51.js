import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-866857eb.js";const p={},e=t('<h1 id="自定义列输出" tabindex="-1"><a class="header-anchor" href="#自定义列输出" aria-hidden="true">#</a> 自定义列输出</h1><p><code>easy-query</code>的<code>select</code>目前支持两种方式返回自定义列，一个是自己手动进行<code>select</code>的<code>column</code>一个是加入返回对象，返回对象被解析的<code>columnName</code>和sql的返回列名一致才会</p><h2 id="java对象" tabindex="-1"><a class="header-anchor" href="#java对象" aria-hidden="true">#</a> java对象</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogEntityTest2</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 标题\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 内容\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 博客链接\n     */</span>\n    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span><span class="token string">&quot;my_url&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> url<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 点赞数\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 发布时间\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTime<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 评分\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 状态\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 排序\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 是否置顶\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 是否置顶\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> top<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="输出指定列" tabindex="-1"><a class="header-anchor" href="#输出指定列" aria-hidden="true">#</a> 输出指定列</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">&gt;</span></span> blogEntityTest2s <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">columnAs</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getUrl</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntityTest2</span><span class="token operator">::</span><span class="token function">getUrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`url` <span class="token constant">AS</span> `my_url` <span class="token constant">FROM</span> t_blog t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">100</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="相同属性不同列名不映射" tabindex="-1"><a class="header-anchor" href="#相同属性不同列名不映射" aria-hidden="true">#</a> 相同属性不同列名不映射</h2><p><code>BlogEntity</code>.<code>url</code>和<code>BlogEntityTest2</code>.<code>url</code>在<code>Bean</code>层面拥有一样的属性名称一样的属性类型,但是因为<code>BlogEntityTest2</code>.<code>url</code>映射到<code>my_url</code>列上所以无法自动映射</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">&gt;</span></span> blogEntityTest2s <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_blog t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">100</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全字段查询" tabindex="-1"><a class="header-anchor" href="#全字段查询" aria-hidden="true">#</a> 全字段查询</h2><p>全字段查询自动以<code>resultClass</code>为主映射<code>columnName</code>相同列</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">&gt;</span></span> blogEntityTest2s <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_blog t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">100</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="追加映射字段" tabindex="-1"><a class="header-anchor" href="#追加映射字段" aria-hidden="true">#</a> 追加映射字段</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">&gt;</span></span> blogEntityTest2s <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">columnAs</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getUrl</span><span class="token punctuation">,</span><span class="token class-name">BlogEntityTest2</span><span class="token operator">::</span><span class="token function">getUrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`url` <span class="token constant">AS</span> `my_url` <span class="token constant">FROM</span> t_blog t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">100</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="忽略查询字段" tabindex="-1"><a class="header-anchor" href="#忽略查询字段" aria-hidden="true">#</a> 忽略查询字段</h2><p>查询映射到对象<code>BlogEntityTest2</code>在原来的查询结果上忽略<code>BlogEntity</code>.<code>title</code>字段的查询映射,因为<code>columnAll</code>如果真是查询表所有字段但是映射到<code>BlogEntityTest2</code>后会丢失所以没有必要查询全字段,直接查询映射字段即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">&gt;</span></span> blogEntityTest2s <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntityTest2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">columnIgnore</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getTitle</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">columnAs</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getUrl</span><span class="token punctuation">,</span><span class="token class-name">BlogEntityTest2</span><span class="token operator">::</span><span class="token function">getUrl</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`url` <span class="token constant">AS</span> `my_url` <span class="token constant">FROM</span> t_blog t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">100</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',17),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","select-column.html.vue"]]);export{r as default};
