import{_ as n,W as s,X as a,a2 as t}from"./framework-6199cc12.js";const p={},o=t('<h1 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h1><p><code>EasyQuery</code>在java的静态语言特性下，参考众多C# ORM(efcore,freesql,sqlsugar...),和java ORM(mybatis-plus,beetlsql...)实现了支持单表多表，复杂，嵌套的sql表达式，并且拥有强类型语法提示，可以帮助不想写sql的用户，有洁癖的用户多一个选择.</p><h2 id="单表查询" tabindex="-1"><a class="header-anchor" href="#单表查询" aria-hidden="true">#</a> 单表查询</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//根据条件查询表中的第一条记录</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Topic</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n<span class="token comment">//根据条件查询表中的第一条记录</span>\n<span class="token class-name">Topic</span> topic <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span> \n\n<span class="token comment">//根据条件查询id为3的记录</span>\n<span class="token class-name">Topic</span> topic <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n<span class="token comment">//根据条件查询id为3的集合</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Topic</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o<span class="token operator">-&gt;</span>o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="多表" tabindex="-1"><a class="header-anchor" href="#多表" aria-hidden="true">#</a> 多表</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">Topic</span> topic <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token comment">//join 后面是双参数委托，参数顺序表示join表顺序，可以通过then函数切换</span>\n                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> t_blog t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> blogEntities <span class="token operator">=</span> easyQuery\n                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n                <span class="token comment">//join 后面是双参数委托，参数顺序表示join表顺序，可以通过then函数切换</span>\n                <span class="token punctuation">.</span><span class="token function">innerJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getTitle</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token comment">//join查询select必须要带对应的返回结果,可以是自定义dto也可以是实体对象,如果不带对象则返回t表主表数据</span>\n                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t1<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t1<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`create_time`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`update_time`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`create_by`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`update_by`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`url`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t1<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_topic t <span class="token constant">INNER</span> <span class="token constant">JOIN</span> t_blog t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t1<span class="token punctuation">.</span>`title` <span class="token constant">IS</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="嵌套多表" tabindex="-1"><a class="header-anchor" href="#嵌套多表" aria-hidden="true">#</a> 嵌套多表</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Queryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Topic</span><span class="token punctuation">&gt;</span></span> sql <span class="token operator">=</span> easyQuery\n        <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//SELECT t.`id`,t.`stars`,t.`title`,t.`create_time` FROM t_topic t WHERE t.`id` = ?</span>\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> topics <span class="token operator">=</span> easyQuery\n        <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span>a<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`url`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top` <span class="token constant">FROM</span> t_blog t <span class="token class-name">LEFT</span> <span class="token constant">JOIN</span> <span class="token punctuation">(</span><span class="token constant">SELECT</span> t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`stars`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time` <span class="token constant">FROM</span> t_topic t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">)</span> t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> t1<span class="token punctuation">.</span>`id` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>`id` <span class="token constant">IS</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">3</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><table><thead><tr><th>方法</th><th>参数</th><th>返回</th><th>描述</th></tr></thead><tbody><tr><td>toSql</td><td></td><td>string</td><td>返回当前表达式即将执行的sql语句</td></tr><tr><td>any</td><td></td><td>boolean</td><td>返回当前表达式是在数据库中是否存在匹配项,存在至少一条返回true,无法匹配任意一条在返回false</td></tr><tr><td>count</td><td></td><td>long</td><td>返回当前表达式在数据库中命中的条数有多少,没有匹配数返回0</td></tr><tr><td>firstOrNull</td><td></td><td>TEntity</td><td>返回当前表达式在数据库中命中的第一条,如果没命中就返回null</td></tr><tr><td>toList</td><td></td><td>List&lt;TEntity&gt;</td><td>返回当前表达式在数据库中命中的所有结果,如果没有结果则返回空集合</td></tr><tr><td>where</td><td>lambda</td><td>this</td><td>对当前表达式进行条件追加</td></tr><tr><td>limit</td><td>1.offset,2.rows</td><td>this</td><td>对当前表达式进行查询结果返回和偏移进行限制，offset表示跳过多少条，limit表示获取多少条</td></tr><tr><td>orderBy</td><td>lambda</td><td>this</td><td>对当前表达式进行查询结果进行排序</td></tr><tr><td>sumBigDecimalOrDefault</td><td>lambda,默认值</td><td>BigDecimal</td><td>用于对lambda列进行求和,返回结果BigDecimal防止结果溢出</td></tr><tr><td>sumOrDefault</td><td>lambda,默认值</td><td>列类型</td><td>用于对lambda列进行求和</td></tr><tr><td>maxOrDefault</td><td>lambda,默认值</td><td>列类型</td><td>用于对lambda列进行最大值查询</td></tr><tr><td>minOrDefault</td><td>lambda,默认值</td><td>列类型</td><td>用于对lambda列进行最小值查询</td></tr><tr><td>avgOrDefault</td><td>lambda,默认值</td><td>列类型</td><td>用于对lambda列进行平均值值查询</td></tr><tr><td>lenOrDefault</td><td>lambda,默认值</td><td>列类型</td><td>用于对lambda列进行长度查询</td></tr><tr><td>whereId</td><td>object 主键</td><td>this</td><td>添加单主键条件</td></tr><tr><td>whereObject</td><td>object 查询对象</td><td>this</td><td>添加对象查询条件</td></tr><tr><td>groupBy</td><td>lambda</td><td>this</td><td>查询分组</td></tr><tr><td>having</td><td>lambda</td><td>this</td><td>查询对分组结果进行筛选</td></tr><tr><td>orderByDynamic</td><td><code>EasyDynamicOrderByConfiguration</code></td><td>this</td><td>添加查询动态排序</td></tr><tr><td>distinct</td><td></td><td>this</td><td>对查询结果进行去重</td></tr><tr><td>toPageResult</td><td>long,long</td><td><code>PageResult</code></td><td>对结果进行先count，然后limit+toList查询结果并且封装成<code>PageResult</code>返回</td></tr><tr><td>leftJoin</td><td>lambda</td><td>this</td><td>左链接</td></tr><tr><td>rightJoin</td><td>lambda</td><td>this</td><td>右链接</td></tr><tr><td>innerJoin</td><td>lambda</td><td>this</td><td>内链接</td></tr><tr><td>disableLogicDelete</td><td></td><td>this</td><td>本次查询不启用逻辑删除</td></tr><tr><td>enableLogicDelete</td><td></td><td>this</td><td>本次查询启用逻辑删除</td></tr><tr><td>noInterceptor</td><td></td><td>this</td><td>本次查询不使用拦截器</td></tr><tr><td>useInterceptor</td><td></td><td>this</td><td>本次查询使用拦截器</td></tr><tr><td>asTracking</td><td></td><td>this</td><td>本次查询使用追踪，需要开启追踪后才有效</td></tr><tr><td>asNoTracking</td><td></td><td>this</td><td>本次查询不使用追踪,默认就是不使用追踪</td></tr></tbody></table>',10),c=[o];function e(l,u){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","index.html.vue"]]);export{k as default};
