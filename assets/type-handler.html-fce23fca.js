import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as s,f as e}from"./app-a2f011fb.js";const t={},p=e(`<h2 id="jdbctypehandlermanager" tabindex="-1"><a class="header-anchor" href="#jdbctypehandlermanager" aria-hidden="true">#</a> JdbcTypeHandlerManager</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>appendHandler</td><td>参数1:指定需要处理的类型,参数2:具体的处理<code>typeHandler</code>,参数3:是否需要替换掉原先的如果原先的存在的话</td></tr><tr><td>getHandler</td><td>根据类型获取对应的<code>typeHandler</code>处理器</td></tr><tr><td>getHandlerByHandlerClass</td><td>根据<code>TypeHandler</code>类型获取对应的<code>typeHandler</code>处理器</td></tr></tbody></table><h2 id="jdbctypehandler" tabindex="-1"><a class="header-anchor" href="#jdbctypehandler" aria-hidden="true">#</a> JdbcTypeHandler</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>getValue</td><td>获取对应的结果</td></tr><tr><td>setParameter</td><td>设置jdbc参数</td></tr></tbody></table><h2 id="如何添加" tabindex="-1"><a class="header-anchor" href="#如何添加" aria-hidden="true">#</a> 如何添加</h2><ul><li>首先创建自己的JdbcTypeHandler</li><li>启动时进行替换</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">JdbcTypeHandlerManager</span> jdbcTypeHandlerManager <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">getRuntimeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getJdbcTypeHandlerManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jdbcTypeHandlerManager<span class="token punctuation">.</span><span class="token function">appendHandler</span><span class="token punctuation">(</span><span class="token class-name">CustomPropertyType</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">CustomPropertyTypeHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="指定列添加" tabindex="-1"><a class="header-anchor" href="#指定列添加" aria-hidden="true">#</a> 指定列添加</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>typeHandler <span class="token operator">=</span> <span class="token class-name">CustomPropertyTypeHandler</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">CustomPropertyType</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),d=[p];function c(l,o){return n(),s("div",null,d)}const u=a(t,[["render",c],["__file","type-handler.html.vue"]]);export{u as default};
