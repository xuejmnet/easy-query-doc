import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-0f7410f5.js";const p={},e=t(`<h2 id="跨表计算属性" tabindex="-1"><a class="header-anchor" href="#跨表计算属性" aria-hidden="true">#</a> 跨表计算属性</h2><p>列如用户和证书属于一对多,当查询用户时需要返回用户的证书数那么可以通过跨表计算属性来实现,班级和班级所在的学生人数<br> 总之跨表计算属性是由当前对的一个或者多个以上的数据或者跨表数据通过一定的函数进行组合来实现一个动态不存在数据库中的属性,并且改属性支持筛选排序筛选和分组等操作</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;school_class&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token annotation punctuation">@EntityFileProxy</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolClassAggregateProp</span> <span class="token keyword">implements</span> <span class="token class-name">ProxyEntityAvailable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">,</span> <span class="token class-name">SchoolClassAggregatePropProxy</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//主键</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token comment">//一对多 一个班级多个学生</span>
    <span class="token annotation punctuation">@Navigate</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RelationTypeEnum<span class="token punctuation">.</span>OneToMany</span><span class="token punctuation">,</span> targetProperty <span class="token operator">=</span> <span class="token string">&quot;classId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> schoolStudents<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>sqlConversion <span class="token operator">=</span> <span class="token class-name">StudentSizeColumnValueSQLConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>autoSelect <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@InsertIgnore</span>
    <span class="token annotation punctuation">@UpdateIgnore</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> studentSize<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//学生数量复杂计算属性</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentSizeColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isRealColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isMergeSubQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLClientApiFactory</span> sqlClientApiFactory <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getSQLClientApiFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> queryable <span class="token operator">=</span> sqlClientApiFactory<span class="token punctuation">.</span><span class="token function">createQueryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> runtimeContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> studentSizeQuery <span class="token operator">=</span> queryable<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleEntitySQLTableOwner</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;classId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span>studentSizeQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLClientApiFactory</span> sqlClientApiFactory <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getSQLClientApiFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">&gt;</span></span> queryable <span class="token operator">=</span> sqlClientApiFactory<span class="token punctuation">.</span><span class="token function">createQueryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolStudent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> runtimeContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientQueryable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> studentSizeQuery <span class="token operator">=</span> queryable<span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleEntitySQLTableOwner</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;classId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span>studentSizeQuery<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//因为添加了autoSelect=false所以默认不查询聚合列</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_class\` t

<span class="token comment">//查询allFields任然不会查询必须要手动指定查询</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token constant">FETCHER</span><span class="token punctuation">.</span><span class="token function">allFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\` <span class="token constant">FROM</span> \`school_class\` t

<span class="token comment">//手动指定查询那么将会查询出来</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token constant">FETCHER</span><span class="token punctuation">.</span><span class="token function">allFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">studentSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\`<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token class-name">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`id\` <span class="token constant">FROM</span> \`school_student\` t2 <span class="token constant">WHERE</span> t2<span class="token punctuation">.</span>\`class_id\` <span class="token operator">=</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`student_size\` <span class="token constant">FROM</span> \`school_class\` t


<span class="token comment">//新建VO</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SchoolClassAggregatePropVO</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">//主键</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> studentSize<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassAggregatePropVO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregatePropVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`name\`<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token class-name">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`id\` <span class="token constant">FROM</span> \`school_student\` t2 <span class="token constant">WHERE</span> t2<span class="token punctuation">.</span>\`class_id\` <span class="token operator">=</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`student_size\` <span class="token constant">FROM</span> \`school_class\` t





<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SchoolClassAggregatePropVO</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregateProp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">studentSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">100L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
        <span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SchoolClassAggregatePropVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token operator">--</span> 第<span class="token number">1</span>条sql数据
<span class="token constant">SELECT</span>
    t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>
    t<span class="token punctuation">.</span>\`name\`<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token class-name">SELECT</span>
        <span class="token function">COUNT</span><span class="token punctuation">(</span>t2<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`id\` 
    <span class="token constant">FROM</span>
        \`school_student\` t2 
    <span class="token constant">WHERE</span>
        t2<span class="token punctuation">.</span>\`class_id\` <span class="token operator">=</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`student_size\` 
<span class="token constant">FROM</span>
    \`school_class\` t 
<span class="token constant">WHERE</span>
    <span class="token punctuation">(</span>
        <span class="token class-name">SELECT</span>
            <span class="token function">COUNT</span><span class="token punctuation">(</span>t4<span class="token punctuation">.</span>\`id\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`id\` 
        <span class="token constant">FROM</span>
            \`school_student\` t4 
        <span class="token constant">WHERE</span>
            t4<span class="token punctuation">.</span>\`class_id\` <span class="token operator">=</span> t<span class="token punctuation">.</span>\`id\`
    <span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","aggregate-prop.html.vue"]]);export{r as default};
