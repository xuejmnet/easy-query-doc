import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as s,a as e,o as n}from"./app-DvB_5WTW.js";const l={};function h(d,i){return n(),t("div",null,[i[0]||(i[0]=s(`<h1 id="注解说明" tabindex="-1"><a class="header-anchor" href="#注解说明"><span>注解说明</span></a></h1><h2 id="table" tabindex="-1"><a class="header-anchor" href="#table"><span>Table</span></a></h2><p>描述对象对应数据库表名,vo对象不需要,非数据库对象不需要</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>&quot;&quot;</td><td>数据库表名为空表示 nameConversion.convert(class.getSimpleName) 可以再运行时修改</td></tr><tr><td>schema</td><td>&quot;&quot;</td><td>数据库schema 可以在运行时修改,默认jdbc连接串的database</td></tr><tr><td>ignoreProperties</td><td>{}</td><td>需要忽略的属性,一般用于继承父类需要忽略父类的属性</td></tr><tr><td>shardingInitializer</td><td>UnShardingInitializer.class</td><td>分片初始化器,当且仅当对象是分片对象是用来初始化分片对象,也可以不添加后续手动添加</td></tr><tr><td>oldName</td><td>&quot;&quot;</td><td>旧的表名用来code-first进行表名迁移</td></tr><tr><td>comment</td><td>&quot;&quot;</td><td>自动生成表时的备注信息</td></tr><tr><td>keyword</td><td>true</td><td>表名是否添加关键字处理比如mysql的\`\`或者pgsql的&quot;&quot;或者sqlserver的[],false场景:duckdb读取excel进行查询</td></tr></tbody></table><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //.....</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="column" tabindex="-1"><a class="header-anchor" href="#column"><span>Column</span></a></h2><p>描述属性对应的列名</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>&quot;&quot;</td><td>对应数据库表的列名,默认空为nameConversion.convert(属性名)</td></tr><tr><td>primaryKey</td><td>false</td><td>表示是否是主键,如果是那么在update对象delete对象将会以这个字段为id</td></tr><tr><td>generatedKey</td><td>false</td><td>是否是自增列,如果是true,那么在<code>insertable().executeRows(true)</code>后获取自增id后将会填充到里面</td></tr><tr><td>conversion</td><td>DefaultValueConverter.class</td><td>内存计算属性,值转换器,默认表示不转换,可以自定义枚举或者json等</td></tr><tr><td>sqlConversion</td><td>DefaultColumnValueSQLConverter.class</td><td>db计算属性，值转换器,默认表示不转换,可以自定义复合列比如<code>fullName=Concat(firstName,lastName)</code>,如果vo、dto也有当前属性那么不需要标注该属性</td></tr><tr><td>generatedSQLColumnGenerator</td><td>DefaultGeneratedKeySQLColumnGenerator.class</td><td>数据库插入时使用的列生成器比如数据库函数<code>NEWID()</code>或其他自定义函数</td></tr><tr><td>complexPropType</td><td>DefaultComplexPropType.class</td><td>复杂类型用于json反序列化时处理</td></tr><tr><td>autoSelect</td><td>true</td><td>当前列是否需要自动查询,主要是用于直接toList时是否要返回当前列,false常用于数据库计算属性或者大字段列</td></tr><tr><td>typeHandler</td><td>UnKnownTypeHandler.class</td><td>当前列使用什么TypeHandler,未知类型特殊处理</td></tr><tr><td>primaryKeyGenerator</td><td>UnsupportPrimaryKeyGenerator.class</td><td>主键生成器用于插入时对象主键为null可以直接生成主键值</td></tr><tr><td>exist</td><td>true</td><td>表示当前字段是否存在于数据库中,false表示默认不查询也不对象插入和对象更新</td></tr><tr><td>nullable</td><td>true</td><td>表示当前字段映射的数据库列是否可为空,常用于code-first生成数据库ddl</td></tr><tr><td>dbType</td><td>&quot;&quot;</td><td>表示当前字段映射的数据库列指定类型</td></tr><tr><td>dbDefault</td><td>&quot;&quot;</td><td>表示当前字段映射的数据库列默认插入值</td></tr><tr><td>exist</td><td>true</td><td>表示当前字段是否存在于数据库中,false表示默认不查询也不插入更新</td></tr><tr><td>comment</td><td>&quot;&quot;</td><td>表示当前字段映射的数据库列的说明</td></tr><tr><td>length</td><td>-1</td><td>表示当前字段映射的数据库列的长度</td></tr><tr><td>scale</td><td>0</td><td>表示当前字段映射的数据库列的精度</td></tr><tr><td>sqlExpression</td><td>ColumnSQLExpression</td><td>表示简单的数据库计算属性</td></tr><tr><td>jdbcType</td><td>JDBCType.OTHER</td><td>映射当前字段具体对应数据库实际jdbc类型 pgsql的uuid和mysql的uuid会用到当前字段类型</td></tr></tbody></table>`,8)),e(" valueUpdateAtomicTrack | DefaultValueUpdateAtomicTrack.class | 原子更新,默认表示无原子更新 "),i[1]||(i[1]=s(`<div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;title1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="columnignore" tabindex="-1"><a class="header-anchor" href="#columnignore"><span>ColumnIgnore</span></a></h2><p>添加这个注解的属性将会被直接忽略映射到数据库</p><h2 id="insertignore" tabindex="-1"><a class="header-anchor" href="#insertignore"><span>InsertIgnore</span></a></h2><p>添加这个注解的属性将不会再插入时被赋值</p><h2 id="updateignore" tabindex="-1"><a class="header-anchor" href="#updateignore"><span>UpdateIgnore</span></a></h2><p>添加这个注解的属性将不会再更新时被更新除非手动指定,比如<code>创建时间</code>、<code>创建人</code>、<code>逻辑删除字段</code>,<code>large column</code>,如果当前字段标记<code>update ignore</code>那么如果是非track更新那么将会直接忽略,如果属性<code>updateSetInTrackDiff = true</code>那么在track下更新那么还是有效的</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>updateSetInTrackDiff</td><td>false</td><td>是否需要在追踪查询中加入update set</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p><code>large column</code>添加<code>UpdateIgnore</code>是为了保证大字段被查询出来后如果进行entity全字段更新那么因为<code>title</code>没有被查询所以更新的时候就会把null更新掉(默认更新策略就是全字段),所以这边采用更新忽略,如果需要可以用表达式忽略 [当然您也可以选择更新策略为非null更新]</p></blockquote></div><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">large</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //大字段字段不需要update时更新 防止全字段更新把原字段改为null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //创建时间字段不需要update时更新</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">LogicDelete</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> LogicDeleteStrategyEnum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BOOLEAN</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //逻辑删除字段不需要update时更新</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> deleted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="logicdelete" tabindex="-1"><a class="header-anchor" href="#logicdelete"><span>LogicDelete</span></a></h2><p>逻辑删除,表示当前字段对应到数据库是逻辑删除表示,select将会过滤,update也会过滤,delete数据将会被改写为update</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>BOOLEAN</td><td>逻辑删除策略,默认true表示删除,false表示不删除</td></tr><tr><td>strategyName</td><td>&quot;&quot;</td><td>当逻辑删除为自定义逻辑删除时</td></tr></tbody></table><ul><li>BOOLEAN false表示未被删除</li><li>DELETE_LONG_TIMESTAMP 0表示未被删除</li><li>LOCAL_DATE_TIME null表示未被删除</li><li>LOCAL_DATE null表示未被删除</li><li>CUSTOM 用户自定义</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Topic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">large</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //大字段字段不需要update时更新 防止全字段更新把原字段改为null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //创建时间字段不需要update时更新</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">LogicDelete</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">strategy</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> LogicDeleteStrategyEnum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">BOOLEAN</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">UpdateIgnore</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //逻辑删除字段不需要update时更新</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> deleted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="version" tabindex="-1"><a class="header-anchor" href="#version"><span>Version</span></a></h2><p>乐观锁也就是版本号</p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>value</td><td>-</td><td>自行定义版本号策略</td></tr></tbody></table><h3 id="默认乐观锁版本号策略" tabindex="-1"><a class="header-anchor" href="#默认乐观锁版本号策略"><span>默认乐观锁版本号策略</span></a></h3><ul><li>VersionIntStrategy</li><li>VersionLongStrategy</li><li>VersionTimestampStrategy (不推荐)</li><li>VersionUUIDStrategy</li></ul><h4 id="versionintstrategy" tabindex="-1"><a class="header-anchor" href="#versionintstrategy"><span>VersionIntStrategy</span></a></h4><p>//这边使用的是Version=2也可以使用version+1但是其实是一样的因为where后面限定了version=1</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="versionlongstrategy" tabindex="-1"><a class="header-anchor" href="#versionlongstrategy"><span>VersionLongStrategy</span></a></h4><p>//这边使用的是Version=2也可以使用version+1但是其实是一样的因为where后面限定了version=1</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="versionuuidstrategy" tabindex="-1"><a class="header-anchor" href="#versionuuidstrategy"><span>VersionUUIDStrategy</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">update</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> table</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> set</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxxxxxasd </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxx </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">and</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xxxxasdasd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="encryption" tabindex="-1"><a class="header-anchor" href="#encryption"><span>Encryption</span></a></h2><p>列加密,支持自定义数据加密存储,并且支持在数据库层面进行like搜索处理,拥有非常高的性能,并不是利用数据库加解密函数</p><h3 id="encryptionstrategy" tabindex="-1"><a class="header-anchor" href="#encryptionstrategy"><span>EncryptionStrategy</span></a></h3><p>用来处理如何加密解密数据策略,可以自定义实现</p><p>默认实现有一个aes+base64的<code>AbstractAesBase64EncryptionStrategy</code>抽象类,用户需要返回16位的向量和秘钥</p><h3 id="supportquerylike" tabindex="-1"><a class="header-anchor" href="#supportquerylike"><span>supportQueryLike</span></a></h3><p>用来表示是否需要支持like搜索,如果true那么就会在入参参数中对其进行分段加密</p><h2 id="navigate" tabindex="-1"><a class="header-anchor" href="#navigate"><span>Navigate</span></a></h2><p>导航属性 用在数据库对象和返回结果上面用于处理一对一，一对多，多对一，多对多</p><h2 id="shardingdatasourcekey" tabindex="-1"><a class="header-anchor" href="#shardingdatasourcekey"><span>ShardingDataSourceKey</span></a></h2><p>用来标识当前对象的数据库分库键是哪个</p><h2 id="shardingextradatasourcekey" tabindex="-1"><a class="header-anchor" href="#shardingextradatasourcekey"><span>ShardingExtraDataSourceKey</span></a></h2><p>用来标识当前对象是数据库分库额外分库键是哪个</p><h2 id="shardingtablekey" tabindex="-1"><a class="header-anchor" href="#shardingtablekey"><span>ShardingTableKey</span></a></h2><p>用来标识当前对象的数据库分表键是哪个</p><h2 id="shardingextratablekey" tabindex="-1"><a class="header-anchor" href="#shardingextratablekey"><span>ShardingExtraTableKey</span></a></h2><p>用来标识当前对象的数据库分表额外键是哪个</p><h2 id="easywherecondition" tabindex="-1"><a class="header-anchor" href="#easywherecondition"><span>EasyWhereCondition</span></a></h2><p>默认的动态条件对象查询条件,可以自行替换自定义注解来实现动态条件</p><h2 id="easyquerytrack" tabindex="-1"><a class="header-anchor" href="#easyquerytrack"><span>EasyQueryTrack</span></a></h2><p>默认的追踪上下文注解也可以自定义,用于方法之上</p><h2 id="entityproxy" tabindex="-1"><a class="header-anchor" href="#entityproxy"><span>EntityProxy</span></a></h2><p>生成代理对象,添加到实体和dto之上用来自动生成apt代理类,生成的文件存在于target目录下,clean后需要重新build</p><h2 id="entityfileproxy" tabindex="-1"><a class="header-anchor" href="#entityfileproxy"><span>EntityFileProxy</span></a></h2><p>同<code>EntityProxy</code>但是生成的文件存在源码中</p><h2 id="proxyproperty" tabindex="-1"><a class="header-anchor" href="#proxyproperty"><span>ProxyProperty</span></a></h2><p>用来防止生成的apt属性和系统自带的重复,可以再属性上定义别名</p>`,55))])}const k=a(l,[["render",h]]),o=JSON.parse('{"path":"/framework/annotation.html","title":"注解说明","lang":"zh-CN","frontmatter":{"title":"注解说明","order":30,"description":"注解说明 Table 描述对象对应数据库表名,vo对象不需要,非数据库对象不需要 Column 描述属性对应的列名 ColumnIgnore 添加这个注解的属性将会被直接忽略映射到数据库 InsertIgnore 添加这个注解的属性将不会再插入时被赋值 UpdateIgnore 添加这个注解的属性将不会再更新时被更新除非手动指定,比如创建时间、创建人、...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注解说明\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-23T14:13:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/framework/annotation.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"注解说明"}],["meta",{"property":"og:description","content":"注解说明 Table 描述对象对应数据库表名,vo对象不需要,非数据库对象不需要 Column 描述属性对应的列名 ColumnIgnore 添加这个注解的属性将会被直接忽略映射到数据库 InsertIgnore 添加这个注解的属性将不会再插入时被赋值 UpdateIgnore 添加这个注解的属性将不会再更新时被更新除非手动指定,比如创建时间、创建人、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-10-23T14:13:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-23T14:13:27.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://github.com/dromara/easy-query/easy-query-doc/en/framework/annotation.html"}]]},"git":{"createdTime":1690555054000,"updatedTime":1761228807000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":14,"url":"https://github.com/xuejiaming"},{"name":"Hoysing","username":"Hoysing","email":"3479272726@qq.com","commits":1,"url":"https://github.com/Hoysing"}]},"readingTime":{"minutes":6.44,"words":1933},"filePathRelative":"framework/annotation.md","autoDesc":true}');export{k as comp,o as data};
