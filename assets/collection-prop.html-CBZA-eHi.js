import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as e}from"./app-Db9EbxW4.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="java-object-database-value-conversion" tabindex="-1"><a class="header-anchor" href="#java-object-database-value-conversion"><span>Java Object Database Value Conversion</span></a></h1><p><code>easy-query</code> provides database value object conversion functionality by default, which can implement database object property enum conversion or object string to json object conversion</p><p><strong>Note:</strong> If you need to support differential updates, you need to override <code>hashcode</code> and <code>equals</code>, except for <code>Enum</code></p><p>Two solutions are provided here</p><ul><li>If you want the database object to be consistent with the database type, but still want to use enum conversion or other property conversions</li><li>The database object property itself is an enum or object</li></ul><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h2><table><thead><tr><th>Interface</th><th>Function</th></tr></thead><tbody><tr><td>ValueConverter</td><td>Interface to convert database and object values mutually</td></tr><tr><td>&lt;TProperty&gt;</td><td>Object property type</td></tr><tr><td>&lt;TProvider&gt;</td><td>Java type corresponding to the database</td></tr></tbody></table><table><thead><tr><th>Method</th><th>Function</th></tr></thead><tbody><tr><td>serialize</td><td>Convert entity object to database value</td></tr><tr><td>deserialize</td><td>Convert database value to object value</td></tr></tbody></table><h2 id="spring-boot" tabindex="-1"><a class="header-anchor" href="#spring-boot"><span>Spring Boot</span></a></h2><p>Inject the corresponding <code>ValueConverter</code> with <code>@Component</code></p><h2 id="console" tabindex="-1"><a class="header-anchor" href="#console"><span>Console</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">QueryRuntimeContext</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> runtimeContext </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> easyQuery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getRuntimeContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">QueryConfiguration</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> configuration </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> runtimeContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getQueryConfiguration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">applyValueConverter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> JsonConverter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="collection-type-json-support" tabindex="-1"><a class="header-anchor" href="#collection-type-json-support"><span>Collection Type JSON Support</span></a></h2><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="java" style="--vp-collapsed-lines:30;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Table</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;t_topic_type_array&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">ToString</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TopicTypeArrayJson</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">primaryKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> stars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">conversion</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> JsonConverter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TopicTypeJsonValue</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Column</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">conversion</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> JsonConverter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> complexPropType</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> TopicTypeTitle2ComplexType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TopicTypeJsonValue</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> title2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Integer</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> topicType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> LocalDateTime</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> createTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//Implement interface ComplexPropType to return the corresponding complex type</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TopicTypeTitle2ComplexType</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TypeReference</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">List</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TopicTypeJsonValue</span><span style="--shiki-light:#C18401;--shiki-dark:#ABB2BF;">&gt;&gt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ComplexPropType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Override</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Type</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> complexType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">If</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> you don</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;t want to use \`TopicTypeTitle2ComplexType\` to define an extra class, you can define it directly on the json object</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@Data</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@EqualsAndHashCode</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">public class TopicTypeJsonValue implements ComplexPropType {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private String name;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private Integer age;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    @Override</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    public Type complexType() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        return myType(new TypeReference&lt;List&lt;TopicTypeJsonValue&gt;&gt;() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        });</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private &lt;T&gt; Type myType(TypeReference&lt;T&gt; typeReference) {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        return typeReference.getType();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Then the entity object is defined as</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@Data</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@Table(&quot;t_topic_type_array&quot;)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">@ToString</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">public class TopicTypeArrayJson {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    @Column(primaryKey = true)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private String id;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private Integer stars;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    @Column(conversion = JsonConverter.class)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private TopicTypeJsonValue title;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    @Column(conversion = JsonConverter.class, complexPropType = TopicTypeJsonValue.class)//Change to TopicTypeJsonValue.class</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private List&lt;TopicTypeJsonValue&gt; title2;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private Integer topicType;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    private LocalDateTime createTime;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">TopicTypeArrayJson topicType1 = new TopicTypeArrayJson();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicType1.setId(id);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicType1.setStars(123);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">TopicTypeJsonValue topicTypeJsonValue = new TopicTypeJsonValue();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicTypeJsonValue.setName(&quot;123&quot;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicTypeJsonValue.setAge(456);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicType1.setTitle(topicTypeJsonValue);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ArrayList&lt;TopicTypeJsonValue&gt; topicTypeJsonValues = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    TopicTypeJsonValue topicTypeJsonValue1 = new TopicTypeJsonValue();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    topicTypeJsonValue1.setName(&quot;1234&quot;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    topicTypeJsonValue1.setAge(4565);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    topicTypeJsonValues.add(topicTypeJsonValue1);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    TopicTypeJsonValue topicTypeJsonValue1 = new TopicTypeJsonValue();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    topicTypeJsonValue1.setName(&quot;12345&quot;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    topicTypeJsonValue1.setAge(45655);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    topicTypeJsonValues.add(topicTypeJsonValue1);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicType1.setTitle2(topicTypeJsonValues);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicType1.setTopicType(TopicTypeEnum.CLASSER.getCode());</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">topicType1.setCreateTime(LocalDateTime.now());</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">long l = easyQuery.insertable(topicType1).executeRows();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">==&gt; Preparing: INSERT INTO \`t_topic_type_array\` (\`id\`,\`stars\`,\`title\`,\`title2\`,\`topic_type\`,\`create_time\`) VALUES (?,?,?,?,?,?)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">==&gt; Parameters: 1231(String),123(Integer),{&quot;age&quot;:456,&quot;name&quot;:&quot;123&quot;}(String),[{&quot;age&quot;:4565,&quot;name&quot;:&quot;1234&quot;},{&quot;age&quot;:45655,&quot;name&quot;:&quot;12345&quot;}](String),9(Integer),2023-10-04T22:37:32.049(LocalDateTime)</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&lt;== Total: 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,14)]))}const k=i(l,[["render",t]]),d=JSON.parse('{"path":"/en/prop/collection-prop.html","title":"Collection Properties","lang":"en-US","frontmatter":{"title":"Collection Properties","order":2,"category":["memory"],"description":"Java Object Database Value Conversion easy-query provides database value object conversion functionality by default, which can implement database object property enum conversion...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Collection Properties\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-27T12:11:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/en/prop/collection-prop.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Collection Properties"}],["meta",{"property":"og:description","content":"Java Object Database Value Conversion easy-query provides database value object conversion functionality by default, which can implement database object property enum conversion..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-27T12:11:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-27T12:11:30.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/dromara/easy-query/easy-query-doc/prop/collection-prop.html"}]]},"git":{"createdTime":1713232886000,"updatedTime":1761567090000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":2,"url":"https://github.com/xuejiaming"},{"name":"Hoysing","username":"Hoysing","email":"3479272726@qq.com","commits":1,"url":"https://github.com/Hoysing"},{"name":"只是我","username":"","email":"alice@example.com","commits":1}]},"readingTime":{"minutes":1.38,"words":413},"filePathRelative":"en/prop/collection-prop.md","autoDesc":true}');export{k as comp,d as data};
