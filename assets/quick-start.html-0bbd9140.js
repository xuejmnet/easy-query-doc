import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as u,c as k,b as n,d as s,e as o,w as a,f as r}from"./app-ed7606e1.js";const d={},m=n("h1",{id:"快速进入",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#快速进入","aria-hidden":"true"},"#"),s(" 快速进入")],-1),v=n("p",null,"创建实体对象",-1),b={href:"https://github.com/xuejmnet/easy-query-samples",target:"_blank",rel:"noopener noreferrer"},y=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"t_company"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EntityProxy"),s(`
`),n("span",{class:"token annotation punctuation"},"@FieldNameConstants"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Company"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ProxyEntityAvailable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Company"),s(),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"CompanyProxy"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token doc-comment comment"},`/**
     * 企业id
     */`),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token doc-comment comment"},`/**
     * 企业名称
     */`),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" name"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token doc-comment comment"},`/**
     * 企业创建时间
     */`),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" createTime"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token doc-comment comment"},`/**
     * 注册资金
     */`),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(" registerMoney"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token doc-comment comment"},`/**
     * 企业拥有的用户
     */`),s(`
    `),n("span",{class:"token annotation punctuation"},"@Navigate"),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},[s("RelationTypeEnum"),n("span",{class:"token punctuation"},"."),s("OneToMany")]),n("span",{class:"token punctuation"},","),s(`
            selfProperty `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},[s("Company"),n("span",{class:"token punctuation"},"."),s("Fields")]),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
            targetProperty `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},[s("SysUser"),n("span",{class:"token punctuation"},"."),s("Fields")]),n("span",{class:"token punctuation"},"."),s("companyId"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"SysUser"),n("span",{class:"token punctuation"},">")]),s(" users"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"t_user"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EntityProxy"),s(`
`),n("span",{class:"token annotation punctuation"},"@FieldNameConstants"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"SysUser"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ProxyEntityAvailable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"SysUser"),s(),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"SysUserProxy"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token doc-comment comment"},`/**
     * 用户id
     */`),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token doc-comment comment"},`/**
     * 用户姓名
     */`),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" name"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token doc-comment comment"},`/**
     * 用户出生日期
     */`),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" birthday"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token doc-comment comment"},`/**
     * 用户所属企业id
     */`),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" companyId"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token doc-comment comment"},`/**
     * 用户所属企业
     */`),s(`
    `),n("span",{class:"token annotation punctuation"},"@Navigate"),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},[s("RelationTypeEnum"),n("span",{class:"token punctuation"},"."),s("ManyToOne")]),n("span",{class:"token punctuation"},","),s(`
            selfProperty `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},[s("SysUser"),n("span",{class:"token punctuation"},"."),s("Fields")]),n("span",{class:"token punctuation"},"."),s("companyId"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
            targetProperty `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},[s("Company"),n("span",{class:"token punctuation"},"."),s("Fields")]),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Company"),s(" company"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=r(`<h2 id="生成数据库表" tabindex="-1"><a class="header-anchor" href="#生成数据库表" aria-hidden="true">#</a> 生成数据库表</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>console</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>api<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">DefaultEasyEntityQuery</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>api<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">EasyEntityQuery</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>console<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Company</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>console<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">SysUser</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>console<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">CompanyNameAndUserNameVO</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>console<span class="token punctuation">.</span>vo<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span></span><span class="token class-name">CompanyNameAndUserNameVOProxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>api<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">EasyQueryClient</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>api<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span></span><span class="token class-name">EasyPageResult</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>api<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">CodeFirstCommand</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>basic<span class="token punctuation">.</span>api<span class="token punctuation">.</span>database<span class="token punctuation">.</span></span><span class="token class-name">DatabaseCodeFirst</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bootstrapper<span class="token punctuation">.</span></span><span class="token class-name">EasyQueryBootstrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>draft<span class="token punctuation">.</span></span><span class="token class-name">Draft2</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Select</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">MySQLDatabaseConfiguration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>zaxxer<span class="token punctuation">.</span>hikari<span class="token punctuation">.</span></span><span class="token class-name">HikariDataSource</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DataSource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">EasyEntityQuery</span> entityQuery<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">useStdOutLogging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">EasyQueryClient</span> client <span class="token operator">=</span> <span class="token class-name">EasyQueryBootstrapper</span><span class="token punctuation">.</span><span class="token function">defaultBuilderConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setDefaultDataSource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">optionConfigure</span><span class="token punctuation">(</span>op <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">//进行一系列可以选择的配置</span>
                    <span class="token comment">//op.setPrintSql(true);</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">useDatabaseConfigure</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MySQLDatabaseConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        entityQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEasyEntityQuery</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">DatabaseCodeFirst</span> databaseCodeFirst <span class="token operator">=</span> entityQuery<span class="token punctuation">.</span><span class="token function">getDatabaseCodeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//如果不存在数据库则创建</span>
        databaseCodeFirst<span class="token punctuation">.</span><span class="token function">createDatabaseIfNotExists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//自动同步数据库表</span>
        <span class="token class-name">CodeFirstCommand</span> codeFirstExecutable <span class="token operator">=</span> databaseCodeFirst<span class="token punctuation">.</span><span class="token function">syncTableCommand</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">Company</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">SysUser</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//执行命令</span>
        codeFirstExecutable<span class="token punctuation">.</span><span class="token function">executeWithTransaction</span><span class="token punctuation">(</span>arg <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
            arg<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 初始化数据源
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">DataSource</span> <span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">HikariDataSource</span> dataSource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HikariDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setJdbcUrl</span><span class="token punctuation">(</span><span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/eq_db?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dataSource<span class="token punctuation">.</span><span class="token function">setMaximumPoolSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> dataSource<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码后输出sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">check</span> db <span class="token keyword">sql</span>:<span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span>schemata <span class="token keyword">where</span> schema_name<span class="token operator">=</span><span class="token string">&#39;eq_db&#39;</span>
<span class="token keyword">create</span> db <span class="token keyword">sql</span>:<span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>eq_db<span class="token punctuation">\`</span></span> <span class="token keyword">default</span> <span class="token keyword">charset</span> utf8mb4 <span class="token keyword">COLLATE</span> utf8mb4_general_ci<span class="token punctuation">;</span>

<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Preparing: 
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>t_company<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span> 
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span> <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>register_money<span class="token punctuation">\`</span></span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span> 
 <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">Engine</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">\`</span>t_user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span> 
<span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>birthday<span class="token punctuation">\`</span></span> <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span>
<span class="token identifier"><span class="token punctuation">\`</span>company_id<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token boolean">NULL</span> <span class="token punctuation">,</span> 
 <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">Engine</span><span class="token operator">=</span><span class="token keyword">InnoDB</span><span class="token punctuation">;</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> Total: <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自动创建数据库和表</p>`,5);function f(S,E){const c=e("ExternalLinkIcon"),l=e("Tabs");return u(),k("div",null,[m,v,n("p",null,[s("本章源代码在git上如果需要请自行获取"),n("a",b,[s("点我获取"),o(c)])]),o(l,{id:"9",data:[{id:"Company"},{id:"SysUser"}]},{title0:a(({value:t,isActive:p})=>[s("Company")]),title1:a(({value:t,isActive:p})=>[s("SysUser")]),tab0:a(({value:t,isActive:p})=>[y]),tab1:a(({value:t,isActive:p})=>[w]),_:1}),g])}const q=i(d,[["render",f],["__file","quick-start.html.vue"]]);export{q as default};
