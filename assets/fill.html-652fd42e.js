import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-26a8647d.js";const p={},e=t(`<p><code>easy-query</code>提供了注解配置以外的自定义填充数据,主要是针对配置外的方法,具体api为<code>fillOne</code>、<code>fillMany</code>,可以再查询时自定义关联属性(各自一个),并且支持直接<code>select vo</code></p><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>暂时不支持<code>proxy</code>模式</p></blockquote></div><h2 id="api说明" tabindex="-1"><a class="header-anchor" href="#api说明" aria-hidden="true">#</a> api说明</h2><p>默认fill查询结果不消费null也就是produce里面不会消费null值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Queryable</span><span class="token generics"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span> <span class="token function">fillOne</span><span class="token punctuation">(</span><span class="token class-name">SQLFuncExpression1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SQLFillSelector</span><span class="token punctuation">,</span> <span class="token class-name">Queryable</span><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fillSetterExpression<span class="token punctuation">,</span> <span class="token class-name">Property</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetProperty<span class="token punctuation">,</span> <span class="token class-name">Property</span><span class="token generics"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> selfProperty<span class="token punctuation">,</span> <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">,</span> <span class="token class-name">TREntity</span><span class="token punctuation">&gt;</span></span> produce<span class="token punctuation">)</span>


<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Queryable</span><span class="token generics"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">&gt;</span></span> <span class="token function">fillMany</span><span class="token punctuation">(</span><span class="token class-name">SQLFuncExpression1</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SQLFillSelector</span><span class="token punctuation">,</span> <span class="token class-name">Queryable</span><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fillSetterExpression<span class="token punctuation">,</span> <span class="token class-name">Property</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> targetProperty<span class="token punctuation">,</span><span class="token class-name">Property</span><span class="token generics"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> selfProperty<span class="token punctuation">,</span>  <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span>T1<span class="token punctuation">,</span> <span class="token class-name">Collection</span><span class="token punctuation">&lt;</span><span class="token class-name">TREntity</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> produce<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>参数</th><th>描述</th><th>场景</th></tr></thead><tbody><tr><td>condition</td><td>是否需要执行当前方法</td><td>动态fill填充数据</td></tr><tr><td>fillSetterExpression</td><td>填充数据如何查询</td><td>自定义填充数据</td></tr><tr><td>targetProperty</td><td>目标表就是fill返回的表的属性</td><td>用于关联</td></tr><tr><td>selfProperty</td><td>当前主表的属性</td><td>用于关联</td></tr><tr><td>produce</td><td>如何填充</td><td>自定义填充数据</td></tr><tr><td>consumeNull</td><td>当关联结果为null是否也会调用produce</td><td>过滤null或者不过滤</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Province</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">fillMany</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>y <span class="token operator">-&gt;</span> y<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> <span class="token string">&quot;3306&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">,</span> <span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getProvinceCode</span>
                <span class="token punctuation">,</span> <span class="token class-name">Province</span><span class="token operator">::</span><span class="token function">getCode</span>
                <span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    x<span class="token punctuation">.</span><span class="token function">setCities</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">City</span><span class="token punctuation">&gt;</span></span> list1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">fillOne</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Province</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> <span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getProvinceCode</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                x<span class="token punctuation">.</span><span class="token function">setProvince</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vo转换</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token class-name">EasyPageResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Province</span><span class="token punctuation">&gt;</span></span> pageResult1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Province</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">fillMany</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">consumeNull</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>y <span class="token operator">-&gt;</span> y<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">City</span><span class="token operator">::</span><span class="token function">getCode</span><span class="token punctuation">,</span> <span class="token string">&quot;3306&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">CityVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token comment">//填充数据转成CityVO,</span>
                        <span class="token punctuation">,</span> <span class="token class-name">CityVO</span><span class="token operator">::</span><span class="token function">getProvinceCode</span>
                        <span class="token punctuation">,</span> <span class="token class-name">Province</span><span class="token operator">::</span><span class="token function">getCode</span>
                        <span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">EasyCollectionUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">CityVO</span> first <span class="token operator">=</span> <span class="token class-name">EasyCollectionUtil</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取第一条city并且赋值</span>
                                x<span class="token punctuation">.</span><span class="token function">setFirstCityName</span><span class="token punctuation">(</span>first<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toPageResult</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),c=[e];function o(l,u){return s(),a("div",null,c)}const r=n(p,[["render",o],["__file","fill.html.vue"]]);export{r as default};
