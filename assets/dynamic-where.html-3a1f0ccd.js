import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as u,c as i,a as k,w as a,e as o,d as s,b as n}from"./app-e4979cef.js";const r={},d=o(`<h1 id="动态条件" tabindex="-1"><a class="header-anchor" href="#动态条件" aria-hidden="true">#</a> 动态条件</h1><p>通过springboot上传json对象实现条件查询,目前有两种解决方案,一个是动态条件来构建where,一个是通过object对象来实现动态查询</p><h2 id="默认配置项" tabindex="-1"><a class="header-anchor" href="#默认配置项" aria-hidden="true">#</a> 默认配置项</h2><table><thead><tr><th>模式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>动态条件</td><td>可以实现任意复杂条件构建</td><td>对于大部分业务场景过于复杂</td></tr><tr><td>对象查询</td><td>可以快速实现基于dto的条件查询</td><td>条件仅支持and,且属性名需要一致,不一致需要手动映射为一致</td></tr></tbody></table><h2 id="查询对象" tabindex="-1"><a class="header-anchor" href="#查询对象" aria-hidden="true">#</a> 查询对象</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogQuery1Request</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 标题
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 内容
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 点赞数
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 发布时间
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeBegin<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeEnd<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 评分
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 状态
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 排序
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusNotList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态条件-1" tabindex="-1"><a class="header-anchor" href="#动态条件-1" aria-hidden="true">#</a> 动态条件</h2>`,7),m=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token class-name"},"BlogQuery1Request"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogQuery1Request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"valueOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"标题"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(" easyEntityQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
        
            `),n("span",{class:"token comment"},"//当query.getContext不为空是添加查询条件 content like query.getContext"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"content"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"like"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyStringUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotBlank"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"//当query.getOrder不为null是添加查询条件 content = query.getContext"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"order"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin <= publishTime <= publishTimeEnd"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"publishTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeClosed"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"//添加in条件"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"status"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"in"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyCollectionUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotEmpty"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Preparing"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"SELECT"),s(" `id`"),n("span",{class:"token punctuation"},","),s("`create_time`"),n("span",{class:"token punctuation"},","),s("`update_time`"),n("span",{class:"token punctuation"},","),s("`create_by`"),n("span",{class:"token punctuation"},","),s("`update_by`"),n("span",{class:"token punctuation"},","),s("`deleted`"),n("span",{class:"token punctuation"},","),s("`title`"),n("span",{class:"token punctuation"},","),s("`content`"),n("span",{class:"token punctuation"},","),s("`url`"),n("span",{class:"token punctuation"},","),s("`star`"),n("span",{class:"token punctuation"},","),s("`publish_time`"),n("span",{class:"token punctuation"},","),s("`score`"),n("span",{class:"token punctuation"},","),s("`status`"),n("span",{class:"token punctuation"},","),s("`order`"),n("span",{class:"token punctuation"},","),s("`is_top`"),n("span",{class:"token punctuation"},","),s("`top` "),n("span",{class:"token constant"},"FROM"),s(" `t_blog` "),n("span",{class:"token constant"},"WHERE"),s(" `deleted` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `content` "),n("span",{class:"token constant"},"LIKE"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `order` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `status` "),n("span",{class:"token constant"},"IN"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Parameters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"%"),s("标题"),n("span",{class:"token operator"},"%"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Time"),s(),n("span",{class:"token class-name"},"Elapsed"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"5"),n("span",{class:"token punctuation"},"("),s("ms"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Total"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`



`),n("span",{class:"token class-name"},"BlogQuery1Request"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogQuery1Request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"标题"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
        
            `),n("span",{class:"token comment"},"//当query.getContext不为空是添加查询条件 content like query.getContext"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"content"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"like"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyStringUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotBlank"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"//当query.getOrder不为null是添加查询条件 content = query.getContext"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"order"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token comment"},"//不生效"),s(`
            `),n("span",{class:"token comment"},"//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin <= publishTime <= publishTimeEnd"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"publishTime"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeClosed"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token comment"},"//添加in条件"),s(`
            o`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"status"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"in"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyCollectionUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotEmpty"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Preparing"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"SELECT"),s(" `id`"),n("span",{class:"token punctuation"},","),s("`create_time`"),n("span",{class:"token punctuation"},","),s("`update_time`"),n("span",{class:"token punctuation"},","),s("`create_by`"),n("span",{class:"token punctuation"},","),s("`update_by`"),n("span",{class:"token punctuation"},","),s("`deleted`"),n("span",{class:"token punctuation"},","),s("`title`"),n("span",{class:"token punctuation"},","),s("`content`"),n("span",{class:"token punctuation"},","),s("`url`"),n("span",{class:"token punctuation"},","),s("`star`"),n("span",{class:"token punctuation"},","),s("`publish_time`"),n("span",{class:"token punctuation"},","),s("`score`"),n("span",{class:"token punctuation"},","),s("`status`"),n("span",{class:"token punctuation"},","),s("`order`"),n("span",{class:"token punctuation"},","),s("`is_top`"),n("span",{class:"token punctuation"},","),s("`top` "),n("span",{class:"token constant"},"FROM"),s(" `t_blog` "),n("span",{class:"token constant"},"WHERE"),s(" `deleted` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `content` "),n("span",{class:"token constant"},"LIKE"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `status` "),n("span",{class:"token constant"},"IN"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Parameters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"%"),s("标题"),n("span",{class:"token operator"},"%"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Time"),s(),n("span",{class:"token class-name"},"Elapsed"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"5"),n("span",{class:"token punctuation"},"("),s("ms"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Total"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token class-name"},"BlogQuery1Request"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogQuery1Request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"valueOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"标题"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(` o
            `),n("span",{class:"token comment"},"//当query.getContext不为空是添加查询条件 content like query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"like"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyStringUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotBlank"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//当query.getOrder不为null是添加查询条件 content = query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin <= publishTime <= publishTimeEnd"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeClosed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getPublishTime"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//添加in条件"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"in"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyCollectionUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotEmpty"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getStatus"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Preparing"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"SELECT"),s(" `id`"),n("span",{class:"token punctuation"},","),s("`create_time`"),n("span",{class:"token punctuation"},","),s("`update_time`"),n("span",{class:"token punctuation"},","),s("`create_by`"),n("span",{class:"token punctuation"},","),s("`update_by`"),n("span",{class:"token punctuation"},","),s("`deleted`"),n("span",{class:"token punctuation"},","),s("`title`"),n("span",{class:"token punctuation"},","),s("`content`"),n("span",{class:"token punctuation"},","),s("`url`"),n("span",{class:"token punctuation"},","),s("`star`"),n("span",{class:"token punctuation"},","),s("`publish_time`"),n("span",{class:"token punctuation"},","),s("`score`"),n("span",{class:"token punctuation"},","),s("`status`"),n("span",{class:"token punctuation"},","),s("`order`"),n("span",{class:"token punctuation"},","),s("`is_top`"),n("span",{class:"token punctuation"},","),s("`top` "),n("span",{class:"token constant"},"FROM"),s(" `t_blog` "),n("span",{class:"token constant"},"WHERE"),s(" `deleted` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `content` "),n("span",{class:"token constant"},"LIKE"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `order` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `status` "),n("span",{class:"token constant"},"IN"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Parameters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"%"),s("标题"),n("span",{class:"token operator"},"%"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Time"),s(),n("span",{class:"token class-name"},"Elapsed"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"5"),n("span",{class:"token punctuation"},"("),s("ms"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Total"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`



`),n("span",{class:"token class-name"},"BlogQuery1Request"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogQuery1Request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"标题"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(" easyQuery"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(` o
            `),n("span",{class:"token comment"},"//当query.getContext不为空是添加查询条件 content like query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"like"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyStringUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotBlank"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//当query.getOrder不为null是添加查询条件 content = query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token comment"},"//不生效"),s(`
            `),n("span",{class:"token comment"},"//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin <= publishTime <= publishTimeEnd"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeClosed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getPublishTime"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//添加in条件"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"in"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyCollectionUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotEmpty"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token operator"},"::"),n("span",{class:"token function"},"getStatus"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Preparing"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"SELECT"),s(" `id`"),n("span",{class:"token punctuation"},","),s("`create_time`"),n("span",{class:"token punctuation"},","),s("`update_time`"),n("span",{class:"token punctuation"},","),s("`create_by`"),n("span",{class:"token punctuation"},","),s("`update_by`"),n("span",{class:"token punctuation"},","),s("`deleted`"),n("span",{class:"token punctuation"},","),s("`title`"),n("span",{class:"token punctuation"},","),s("`content`"),n("span",{class:"token punctuation"},","),s("`url`"),n("span",{class:"token punctuation"},","),s("`star`"),n("span",{class:"token punctuation"},","),s("`publish_time`"),n("span",{class:"token punctuation"},","),s("`score`"),n("span",{class:"token punctuation"},","),s("`status`"),n("span",{class:"token punctuation"},","),s("`order`"),n("span",{class:"token punctuation"},","),s("`is_top`"),n("span",{class:"token punctuation"},","),s("`top` "),n("span",{class:"token constant"},"FROM"),s(" `t_blog` "),n("span",{class:"token constant"},"WHERE"),s(" `deleted` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `content` "),n("span",{class:"token constant"},"LIKE"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `status` "),n("span",{class:"token constant"},"IN"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Parameters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"%"),s("标题"),n("span",{class:"token operator"},"%"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Time"),s(),n("span",{class:"token class-name"},"Elapsed"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"5"),n("span",{class:"token punctuation"},"("),s("ms"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Total"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token class-name"},"BlogQuery1Request"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogQuery1Request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"valueOf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"标题"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(" easyQueryClient"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(` o
            `),n("span",{class:"token comment"},"//当query.getContext不为空是添加查询条件 content like query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"like"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyStringUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotBlank"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//当query.getOrder不为null是添加查询条件 content = query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"order"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin <= publishTime <= publishTimeEnd"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeClosed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"publishTime"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//添加in条件"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"in"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyCollectionUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotEmpty"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"status"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Preparing"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"SELECT"),s(" `id`"),n("span",{class:"token punctuation"},","),s("`create_time`"),n("span",{class:"token punctuation"},","),s("`update_time`"),n("span",{class:"token punctuation"},","),s("`create_by`"),n("span",{class:"token punctuation"},","),s("`update_by`"),n("span",{class:"token punctuation"},","),s("`deleted`"),n("span",{class:"token punctuation"},","),s("`title`"),n("span",{class:"token punctuation"},","),s("`content`"),n("span",{class:"token punctuation"},","),s("`url`"),n("span",{class:"token punctuation"},","),s("`star`"),n("span",{class:"token punctuation"},","),s("`publish_time`"),n("span",{class:"token punctuation"},","),s("`score`"),n("span",{class:"token punctuation"},","),s("`status`"),n("span",{class:"token punctuation"},","),s("`order`"),n("span",{class:"token punctuation"},","),s("`is_top`"),n("span",{class:"token punctuation"},","),s("`top` "),n("span",{class:"token constant"},"FROM"),s(" `t_blog` "),n("span",{class:"token constant"},"WHERE"),s(" `deleted` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `content` "),n("span",{class:"token constant"},"LIKE"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `order` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `status` "),n("span",{class:"token constant"},"IN"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Parameters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"%"),s("标题"),n("span",{class:"token operator"},"%"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Time"),s(),n("span",{class:"token class-name"},"Elapsed"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"5"),n("span",{class:"token punctuation"},"("),s("ms"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Total"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`



`),n("span",{class:"token class-name"},"BlogQuery1Request"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BlogQuery1Request"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"标题"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},">")]),s(" result "),n("span",{class:"token operator"},"="),s(" easyQueryClient"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"queryable"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BlogEntity"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"where"),n("span",{class:"token punctuation"},"("),s("o "),n("span",{class:"token operator"},"->"),s(` o
            `),n("span",{class:"token comment"},"//当query.getContext不为空是添加查询条件 content like query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"like"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyStringUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotBlank"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"content"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//当query.getOrder不为null是添加查询条件 content = query.getContext"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"eq"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"order"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getOrder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token comment"},"//不生效"),s(`
            `),n("span",{class:"token comment"},"//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin <= publishTime <= publishTimeEnd"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeClosed"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"publishTime"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeBegin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getPublishTimeEnd"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token comment"},"//添加in条件"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"in"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"EasyCollectionUtil"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isNotEmpty"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"status"'),n("span",{class:"token punctuation"},","),s(" query"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getStatusList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Preparing"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"SELECT"),s(" `id`"),n("span",{class:"token punctuation"},","),s("`create_time`"),n("span",{class:"token punctuation"},","),s("`update_time`"),n("span",{class:"token punctuation"},","),s("`create_by`"),n("span",{class:"token punctuation"},","),s("`update_by`"),n("span",{class:"token punctuation"},","),s("`deleted`"),n("span",{class:"token punctuation"},","),s("`title`"),n("span",{class:"token punctuation"},","),s("`content`"),n("span",{class:"token punctuation"},","),s("`url`"),n("span",{class:"token punctuation"},","),s("`star`"),n("span",{class:"token punctuation"},","),s("`publish_time`"),n("span",{class:"token punctuation"},","),s("`score`"),n("span",{class:"token punctuation"},","),s("`status`"),n("span",{class:"token punctuation"},","),s("`order`"),n("span",{class:"token punctuation"},","),s("`is_top`"),n("span",{class:"token punctuation"},","),s("`top` "),n("span",{class:"token constant"},"FROM"),s(" `t_blog` "),n("span",{class:"token constant"},"WHERE"),s(" `deleted` "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `content` "),n("span",{class:"token constant"},"LIKE"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},">="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `publish_time` "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token constant"},"AND"),s(" `status` "),n("span",{class:"token constant"},"IN"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"?"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"=="),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"Parameters"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Boolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token operator"},"%"),s("标题"),n("span",{class:"token operator"},"%"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"2023"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"07"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"14"),n("span",{class:"token constant"},"T22"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"05"),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"24."),n("span",{class:"token function"},"971"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"1"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token function"},"2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Time"),s(),n("span",{class:"token class-name"},"Elapsed"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"5"),n("span",{class:"token punctuation"},"("),s("ms"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token operator"},"<="),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Total"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=o(`<h2 id="条件接受" tabindex="-1"><a class="header-anchor" href="#条件接受" aria-hidden="true">#</a> 条件接受</h2><p><code>1.4.31^</code>以上版本支持<code>ValueFilter</code> 条件接收器,<code>Queryable</code>默认行为<code>AnyValueFilter.DEFAULT</code>所有的条件都接受,框架提供了一个可选<code>NotNullOrEmptyValueFilter.DEFAULT</code>当传入的条件参数值非null且字符串的情况下非空那么才会增加到条件里面,仅where条件生效。并且只有左侧是属性而非属性函数时才会生效如果左侧为函数那么将不会生效</p><p>用户也可以自定义实现接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ValueFilter</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">String</span> property<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnyValueFilter</span> <span class="token keyword">implements</span> <span class="token class-name">ValueFilter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ValueFilter</span> <span class="token constant">DEFAULT</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">AnyValueFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">AnyValueFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">String</span> property<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NotNullOrEmptyValueFilter</span> <span class="token keyword">implements</span> <span class="token class-name">ValueFilter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ValueFilter</span> <span class="token constant">DEFAULT</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">NotNullOrEmptyValueFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">String</span> property<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">EasyStringUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">BlogQuery1Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery1Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filterConfigure</span><span class="token punctuation">(</span><span class="token class-name">NotNullOrEmptyValueFilter</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token comment">//设置非null字符串非空 后续的where才会添加到条件中</span>
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        
            <span class="token comment">//当query.getContext不为空是添加查询条件 content like query.getContext</span>
            o<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//当query.getOrder不为null是添加查询条件 content = query.getContext</span>
            o<span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin &lt;= publishTime &lt;= publishTimeEnd</span>
            o<span class="token punctuation">.</span><span class="token function">publishTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPublishTimeBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//添加in条件</span>
            o<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getStatusList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">,</span>\`update_time\`<span class="token punctuation">,</span>\`create_by\`<span class="token punctuation">,</span>\`update_by\`<span class="token punctuation">,</span>\`deleted\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`content\`<span class="token punctuation">,</span>\`url\`<span class="token punctuation">,</span>\`star\`<span class="token punctuation">,</span>\`publish_time\`<span class="token punctuation">,</span>\`score\`<span class="token punctuation">,</span>\`status\`<span class="token punctuation">,</span>\`order\`<span class="token punctuation">,</span>\`is_top\`<span class="token punctuation">,</span>\`top\` <span class="token constant">FROM</span> \`t_blog\` <span class="token constant">WHERE</span> \`deleted\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`content\` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`order\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&gt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`status\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">5</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>



<span class="token class-name">BlogQuery1Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery1Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filterConfigure</span><span class="token punctuation">(</span><span class="token class-name">NotNullOrEmptyValueFilter</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token comment">//设置非null字符串非空 后续的where才会添加到条件中</span>
    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        
            <span class="token comment">//当query.getContext不为空是添加查询条件 content like query.getContext</span>
            o<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//当query.getOrder不为null是添加查询条件 content = query.getContext</span>
            o<span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//不生效</span>
            <span class="token comment">//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin &lt;= publishTime &lt;= publishTimeEnd</span>
            o<span class="token punctuation">.</span><span class="token function">publishTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getPublishTimeBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//添加in条件</span>
            o<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getStatusList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">,</span>\`update_time\`<span class="token punctuation">,</span>\`create_by\`<span class="token punctuation">,</span>\`update_by\`<span class="token punctuation">,</span>\`deleted\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`content\`<span class="token punctuation">,</span>\`url\`<span class="token punctuation">,</span>\`star\`<span class="token punctuation">,</span>\`publish_time\`<span class="token punctuation">,</span>\`score\`<span class="token punctuation">,</span>\`status\`<span class="token punctuation">,</span>\`order\`<span class="token punctuation">,</span>\`is_top\`<span class="token punctuation">,</span>\`top\` <span class="token constant">FROM</span> \`t_blog\` <span class="token constant">WHERE</span> \`deleted\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`content\` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&gt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`status\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">5</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token class-name">String</span> toSql <span class="token operator">=</span> easyQuery
                <span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span>t1<span class="token punctuation">,</span> t2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t2<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">,</span> t3<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t3<span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filterConfigure</span><span class="token punctuation">(</span><span class="token class-name">NotNullOrEmptyValueFilter</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token comment">//设置非null字符串非空 后续的where才会添加到条件中</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//.filterConfigure(AnyValueFilter.DEFAULT)//恢复如果后面没有自定义where那么不需要恢复</span>
                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// SELECT t.\`id\`,t.\`stars\`,t.\`title\`,t.\`create_time\` FROM \`t_topic\` t </span>
<span class="token comment">// LEFT JOIN \`t_blog\` t1 ON t1.\`deleted\` = ? AND t.\`id\` = t1.\`id\` </span>
<span class="token comment">// LEFT JOIN \`t_blog\` t2 ON t2.\`deleted\` = ? AND t.\`id\` = t2.\`id\` </span>
<span class="token comment">// LEFT JOIN \`t_blog\` t3 ON t3.\`deleted\` = ? AND t.\`id\` = t3.\`id\` </span>
<span class="token comment">// LIMIT 2 OFFSET 1</span>
   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>条件拦截,加入我的where条件大部分都符合极个别不符合可以通过提前返回不符的来保证剩余的都可以进行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> id<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> userName<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> nickname<span class="token operator">=</span><span class="token string">&quot;BBB&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">Boolean</span> leftEnable<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>


    <span class="token class-name">String</span> sql <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">DefTable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">DefTableLeft1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">DefTable</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">DefTableLeft1</span><span class="token operator">::</span><span class="token function">getDefId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filterConfigure</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> p<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token comment">//分别是table，property，value</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//无论.eq(DefTable::getId, id) 这个方法属性为id的比较是啥结果都会添加到条件里面</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token class-name">NotNullOrEmptyValueFilter</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> p<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t
                    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">DefTable</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token comment">//虽然id为空但是还是加入到了sql中</span>
                    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">DefTable</span><span class="token operator">::</span><span class="token function">getUserName</span><span class="token punctuation">,</span> userName<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">DefTable</span><span class="token operator">::</span><span class="token function">getNickname</span><span class="token punctuation">,</span> nickname<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">DefTableLeft1</span><span class="token operator">::</span><span class="token function">getEnable</span><span class="token punctuation">,</span> leftEnable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// SELECT t.id,t.user_name,t.nickname,t.enable,t.score,t.mobile,t.avatar,t.number,t.status,t.created,t.options FROM t_def_table t </span>
<span class="token comment">// LEFT JOIN t_def_table_left1 t1 ON t.id = t1.def_id </span>
<span class="token comment">// WHERE t.id = ? AND t.nickname = ? AND t1.enable = ?</span>
       
   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意点及说明!!!</p><blockquote><p>必须写到对应的<code>where</code>前面后续的<code>where</code>才会生效，用户可以自定义,比如满足的条件是优先满足<code>eq、ge、gt</code>等的第一个boolean条件,后续才会判断<code>valueFilter</code>，如果有多个<code>where</code>部分where需要自定义那么可以采用<code>filterConfigure(NotNullOrEmptyValueFilter.DEFAULT)</code>来恢复到所有参数都接受,一般用于查询时可以少写很多判断</p></blockquote></div><h2 id="属性一对一查询" tabindex="-1"><a class="header-anchor" href="#属性一对一查询" aria-hidden="true">#</a> 属性一对一查询</h2><p>object的一个属性对应数据库查询的一列</p><p><code>@EasyWhereCondition</code></p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>strict</td><td>true</td><td>严格模式,如果属性没有映射到对象上报错,如果表<code>tableIndex</code>不在当前上下文中也报错</td></tr><tr><td>tableIndex</td><td>0</td><td>当前条件用于查询哪张表</td></tr><tr><td>allowEmptyStrings</td><td>false</td><td>是否允许空字符串,如果允许表示空也会加入到表达式内而不是忽略</td></tr><tr><td>propName</td><td>&quot;&quot;</td><td>当前属性映射到数据库对象的属性名称,为空表示使用当前属性名</td></tr><tr><td>type</td><td>LIKE</td><td>当前属性和数据库对象属性以哪种表达式构建条件</td></tr><tr><td>mode</td><td>SINGLE</td><td><code>SINGLE</code>:表示当前属性是一对一数据库列,<code>MULTI_OR</code>:表示当前值对多个数据库列并且用or来连接</td></tr><tr><td>propNames</td><td>[]</td><td>当前属性映射到哪两个属性列</td></tr><tr><td>tablesIndex</td><td>[]</td><td>可以和propNames长度不一样,不一样的代表0主表</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>属性默认是支持like,可以通过指定条件,如果查询属性与数据库对象属性不一致可以通过<code>propName</code>改写</p></blockquote></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogQuery2Request</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 标题
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 内容
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 点赞数
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 发布时间
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">RANGE_LEFT_CLOSED</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeBegin<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">RANGE_RIGHT_CLOSED</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeEnd<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 评分
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">GREATER_THAN_EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 状态
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">LESS_THAN_EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 排序
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">GREATER_THAN</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">NOT_EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * statusList没有对应的属性名称所以需要改写为映射到status
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">IN</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * statusNotList没有对应的属性名称所以需要改写为映射到status
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">NOT_IN</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusNotList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态查询条件1" tabindex="-1"><a class="header-anchor" href="#动态查询条件1" aria-hidden="true">#</a> 动态查询条件1</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
 <span class="token class-name">BlogQuery2Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery2Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> queryable <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereObject</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">,</span>\`update_time\`<span class="token punctuation">,</span>\`create_by\`<span class="token punctuation">,</span>\`update_by\`<span class="token punctuation">,</span>\`deleted\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`content\`<span class="token punctuation">,</span>\`url\`<span class="token punctuation">,</span>\`star\`<span class="token punctuation">,</span>\`publish_time\`<span class="token punctuation">,</span>\`score\`<span class="token punctuation">,</span>\`status\`<span class="token punctuation">,</span>\`order\`<span class="token punctuation">,</span>\`is_top\`<span class="token punctuation">,</span>\`top\` <span class="token constant">FROM</span> \`t_blog\` <span class="token constant">WHERE</span> \`deleted\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`content\` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&gt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`order\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`status\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">47.</span><span class="token function">865</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">47.</span><span class="token function">865</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">4</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>



<span class="token class-name">BlogQuery2Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery2Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> queryable <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereObject</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">,</span>\`update_time\`<span class="token punctuation">,</span>\`create_by\`<span class="token punctuation">,</span>\`update_by\`<span class="token punctuation">,</span>\`deleted\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`content\`<span class="token punctuation">,</span>\`url\`<span class="token punctuation">,</span>\`star\`<span class="token punctuation">,</span>\`publish_time\`<span class="token punctuation">,</span>\`score\`<span class="token punctuation">,</span>\`status\`<span class="token punctuation">,</span>\`order\`<span class="token punctuation">,</span>\`is_top\`<span class="token punctuation">,</span>\`top\` <span class="token constant">FROM</span> \`t_blog\` <span class="token constant">WHERE</span> \`deleted\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`content\` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`publish_time\` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`status\` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">47.</span><span class="token function">880</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性一对多查询" tabindex="-1"><a class="header-anchor" href="#属性一对多查询" aria-hidden="true">#</a> 属性一对多查询</h2><p>object的一个属性对应数据库查询的多列</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogQueryRequest</span> <span class="token keyword">implements</span> <span class="token class-name">ObjectSort</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 标题
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 标题
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>mode <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Mode</span><span class="token punctuation">.</span><span class="token constant">MULTI_OR</span><span class="token punctuation">,</span>propNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title2<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 标题
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>mode <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Mode</span><span class="token punctuation">.</span><span class="token constant">MULTI_OR</span><span class="token punctuation">,</span>propNames <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title3<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 内容
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>propName <span class="token operator">=</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 点赞数
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 发布时间
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">RANGE_LEFT_CLOSED</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeBegin<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">RANGE_RIGHT_CLOSED</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeEnd<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 评分
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">GREATER_THAN_EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 状态
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">LESS_THAN_EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 排序
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">GREATER_THAN</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 是否置顶
     */</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">NOT_EQUAL</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">IN</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">NOT_IN</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusNotList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> orders<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">ObjectSortBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> order <span class="token operator">:</span> orders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            builder<span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>order<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token class-name">BlogQueryRequest</span> blogQueryRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQueryRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setTitle2</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setTitle3</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setStar</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setScore</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">setIsTop</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">getOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
blogQueryRequest<span class="token punctuation">.</span><span class="token function">getOrders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;score&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> sql <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereObject</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> blogQueryRequest<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">orderByObject</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> blogQueryRequest<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toSQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT \`id\`,\`create_time\`,\`update_time\`,\`create_by\`,\`update_by\`,\`deleted\`,\`title\`,\`content\`,\`url\`,\`star\`,\`publish_time\`,\`score\`,\`status\`,\`order\`,\`is_top\`,\`top\` FROM \`t_blog\` WHERE \`deleted\` = ? AND \`title\` LIKE ? AND (\`title\` LIKE ? OR \`content\` LIKE ?) AND (\`id\` = ? OR \`content\` = ?) AND \`url\` LIKE ? AND \`star\` = ? AND \`publish_time\` &gt;= ? AND \`publish_time\` &lt;= ? AND \`score\` &gt;= ? AND \`status\` &lt;= ? AND \`order\` &gt; ? AND \`is_top\` &lt;&gt; ? ORDER BY \`status\` ASC,\`score\` ASC&quot;</span><span class="token punctuation">,</span> sql<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态条件多表join" tabindex="-1"><a class="header-anchor" href="#动态条件多表join" aria-hidden="true">#</a> 动态条件多表join</h2><p>通过修改<code>@EasyWhereCondition</code>的<code>tableIndex</code>或者<code>tablesIndex</code>(区别就是属性是否是对应多个属性)来指定当前属性对应的join的哪张表</p><table><thead><tr><th>类型</th><th>构建条件</th></tr></thead><tbody><tr><td>String</td><td>不为null且不为空</td></tr><tr><td>Integer</td><td>不为null</td></tr><tr><td>Short</td><td>不为null</td></tr><tr><td>Double</td><td>不为null</td></tr><tr><td>Float</td><td>不为null</td></tr><tr><td>BigDecimal</td><td>不为null</td></tr><tr><td>LocalDateTime</td><td>不为null</td></tr><tr><td>List</td><td>不为null且不为空</td></tr><tr><td>Array</td><td>不为null且不为空</td></tr></tbody></table><h2 id="替换whereobject实现" tabindex="-1"><a class="header-anchor" href="#替换whereobject实现" aria-hidden="true">#</a> 替换whereObject实现</h2><p><code>easy-query</code>默认采用接口模式实现<code>whereObject</code>用户可以自行替换框架行为,甚至<code>@EasyWhereCondition</code>也可以自己实现</p><h3 id="如何替换框架行为" tabindex="-1"><a class="header-anchor" href="#如何替换框架行为" aria-hidden="true">#</a> 如何替换框架行为</h3><p><a href="/easy-query-doc/guide/config/replace-configure">《替换框架行为❗️❗️❗️》</a></p><h3 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h3><p><code>WhereObjectQueryExecutor</code> 默认实现 <code>DefaultWhereObjectQueryExecutor</code></p><p>您可以自行实现这个并且使用自己的注解来配合使用</p><h2 id="相关搜索" tabindex="-1"><a class="header-anchor" href="#相关搜索" aria-hidden="true">#</a> 相关搜索</h2><p><code>注解查询</code> <code>动态查询</code> <code>dto查询</code> <code>json查询</code> <code>对象查询</code> <code>form查询</code> <code>表单查询</code></p>`,32);function g(f,h){const p=l("CodeTabs");return u(),i("div",null,[d,k(p,{id:"55",data:[{id:"对象模式"},{id:"lambda模式"},{id:"属性模式"}]},{title0:a(({value:t,isActive:e})=>[s("对象模式")]),title1:a(({value:t,isActive:e})=>[s("lambda模式")]),title2:a(({value:t,isActive:e})=>[s("属性模式")]),tab0:a(({value:t,isActive:e})=>[m]),tab1:a(({value:t,isActive:e})=>[v]),tab2:a(({value:t,isActive:e})=>[b]),_:1}),y])}const T=c(r,[["render",g],["__file","dynamic-where.html.vue"]]);export{T as default};
