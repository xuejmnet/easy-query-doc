import{_ as e}from"./qrcode-1849df2b.js";import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as u,c as l,b as n,d as s,a as t,w as p,e as i}from"./app-b23805ba.js";const k={},r=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),d=i(`<h2 id="插入对象" tabindex="-1"><a class="header-anchor" href="#插入对象" aria-hidden="true">#</a> 插入对象</h2><p>Easy Query提供了<code>insertable</code>方法，支持插入单条数据和多条数据,支持批量插入。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">User</span> newUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newUser<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;新用户&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newUser<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//插入单条数据</span>
        <span class="token keyword">long</span> rows <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>newUser<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>newUser<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">User</span> copyUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        copyUser<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;新用户&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        copyUser<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>newUser<span class="token punctuation">,</span> copyUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//插入多条数据</span>
        rows <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">User</span> user <span class="token operator">:</span> users<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//批量插入多条数据</span>
        easyEntityQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">batch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">User</span> user <span class="token operator">:</span> users<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">注意</p><p>调用<code>insertable</code>方法只是获取操作对象，必须再调用<code>executeRows</code>方法再是最终完成插入操作。</p></div><p>批量插入多条数据时需要配置jdbc连接参数，即<code>rewriteBatchedStatements=true</code>，配置参数后性能将会大幅提升。<br> 调用<code>batch</code>方法返回的受影响的行数未必是正确的，因此不建议使用此返回结果，id回填是没问题的。</p><p>调用完<code>insertable</code>方法后可以再链式调用<code>insert</code>方法继续插入数据。</p><h2 id="插入策略" tabindex="-1"><a class="header-anchor" href="#插入策略" aria-hidden="true">#</a> 插入策略</h2><p>Easy Query默认采用<code>SQLExecuteStrategyEnum.ONLY_NOT_NULL_COLUMNS</code>策略进行插入，也就是默认只插入有值的列，可以使用<code>setSQLStrategy</code>方法设置执行策略，设置<code>SQLExecuteStrategyEnum.ALL_COLUMNS</code>可以插入全部列。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertAllColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;新用户&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        user<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> rows <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSQLStrategy</span><span class="token punctuation">(</span><span class="token class-name">SQLExecuteStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">ALL_COLUMNS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertNotNull</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="插入map" tabindex="-1"><a class="header-anchor" href="#插入map" aria-hidden="true">#</a> 插入Map</h2><p>Easy Query也支持插入<code>Map</code>对象，注意，key是列名，不是实体类的属性名，同时，不支持主键回填。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsertMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> userMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;小明&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;create_time&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;enabled&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> rows <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">mapInsertable</span><span class="token punctuation">(</span>userMap<span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">asTable</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertTrue</span><span class="token punctuation">(</span>rows <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Assertions</span><span class="token punctuation">.</span><span class="token function">assertNull</span><span class="token punctuation">(</span>userMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重复插入策略" tabindex="-1"><a class="header-anchor" href="#重复插入策略" aria-hidden="true">#</a> 重复插入策略</h2>`,13),m=n("code",null,"onDuplicateKeyIgnore",-1),v=n("code",null,"onDuplicateKeyUpdate",-1),b=n("code",null,"onConflictDoNothing",-1),y=n("code",null,"onConflictDoUpdate",-1),f=n("br",null,null,-1),h=n("p",null,"如果在使用旧版本的过时方法时遇到了问题，欢迎进群提问。",-1),g=n("div",{style:{"text-align":"center"}},[n("img",{src:e,alt:"群号: 170029046",class:"no-zoom",style:{width:"200px"}}),n("h4",{id:"easyquery官方qq群-170029046",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#easyquery官方qq群-170029046","aria-hidden":"true"},"#"),s(" EasyQuery官方QQ群: 170029046")])],-1);function w(_,U){const a=c("RouterLink");return u(),l("div",null,[r,n("p",null,[s("本章节的环境配置请参考"),t(a,{to:"/startup/quick-start.html#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87"},{default:p(()=>[s("环境准备")]),_:1}),s("章节")]),d,n("p",null,[s("Easy Query提供了只支持MySQL的"),m,s("，"),v,s("方法，只支持PostgreSQL的"),b,s("，"),y,s("方法，"),f,s(" 这些方法都是用于设置重复插入策略的，它们已经过时了，新的Easy Query版本中请参考"),t(a,{to:"/guide/basic/insertOrUpdate.html"},{default:p(()=>[s("插入或更新")]),_:1}),s("章节。")]),h,g])}const N=o(k,[["render",w],["__file","insert.html.vue"]]);export{N as default};
