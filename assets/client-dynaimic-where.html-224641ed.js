import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2afc9f03.js";const p={},e=t('<h1 id="客户端动态条件" tabindex="-1"><a class="header-anchor" href="#客户端动态条件" aria-hidden="true">#</a> 客户端动态条件</h1><p>通过springboot上传json对象实现条件查询,目前有两种解决方案,一个是动态条件来构建where,一个是通过object对象来实现动态查询</p><h2 id="默认配置项" tabindex="-1"><a class="header-anchor" href="#默认配置项" aria-hidden="true">#</a> 默认配置项</h2><table><thead><tr><th>模式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>动态条件</td><td>可以实现任意复杂条件构建</td><td>对于大部分业务场景过于复杂</td></tr><tr><td>对象查询</td><td>可以快速实现基于dto的条件查询</td><td>条件仅支持and,且属性名需要一致,不一致需要手动映射为一致</td></tr></tbody></table><h2 id="查询对象" tabindex="-1"><a class="header-anchor" href="#查询对象" aria-hidden="true">#</a> 查询对象</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogQuery1Request</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 标题\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 内容\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 点赞数\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 发布时间\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeBegin<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeEnd<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 评分\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 状态\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 排序\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 是否置顶\n     */</span>\n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusNotList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态条件" tabindex="-1"><a class="header-anchor" href="#动态条件" aria-hidden="true">#</a> 动态条件</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token class-name">BlogQuery1Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery1Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o\n            <span class="token comment">//当query.getContext不为空是添加查询条件 content like query.getContext</span>\n            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">EasyStringUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getContent</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token comment">//当query.getOrder不为null是添加查询条件 content = query.getContext</span>\n            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getOrder</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token comment">//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin &lt;= publishTime &lt;= publishTimeEnd</span>\n            <span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getPublishTime</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token comment">//添加in条件</span>\n            <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">EasyCollectionUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getStatusList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getStatusList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> `id`<span class="token punctuation">,</span>`create_time`<span class="token punctuation">,</span>`update_time`<span class="token punctuation">,</span>`create_by`<span class="token punctuation">,</span>`update_by`<span class="token punctuation">,</span>`deleted`<span class="token punctuation">,</span>`title`<span class="token punctuation">,</span>`content`<span class="token punctuation">,</span>`url`<span class="token punctuation">,</span>`star`<span class="token punctuation">,</span>`publish_time`<span class="token punctuation">,</span>`score`<span class="token punctuation">,</span>`status`<span class="token punctuation">,</span>`order`<span class="token punctuation">,</span>`is_top`<span class="token punctuation">,</span>`top` <span class="token constant">FROM</span> `t_blog` <span class="token constant">WHERE</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `content` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> `order` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&gt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `status` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">5</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>\n\n\n\n<span class="token class-name">BlogQuery1Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery1Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o\n            <span class="token comment">//当query.getContext不为空是添加查询条件 content like query.getContext</span>\n            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">EasyStringUtil</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getContent</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token comment">//当query.getOrder不为null是添加查询条件 content = query.getContext</span>\n            <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getOrder</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//不生效</span>\n            <span class="token comment">//当query.getPublishTimeBegin()不为null添加左闭区间,右侧同理 publishTimeBegin &lt;= publishTime &lt;= publishTimeEnd</span>\n            <span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getPublishTime</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeBegin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getPublishTimeEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token comment">//添加in条件</span>\n            <span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">EasyCollectionUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>query<span class="token punctuation">.</span><span class="token function">getStatusList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BlogEntity</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> query<span class="token punctuation">.</span><span class="token function">getStatusList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> `id`<span class="token punctuation">,</span>`create_time`<span class="token punctuation">,</span>`update_time`<span class="token punctuation">,</span>`create_by`<span class="token punctuation">,</span>`update_by`<span class="token punctuation">,</span>`deleted`<span class="token punctuation">,</span>`title`<span class="token punctuation">,</span>`content`<span class="token punctuation">,</span>`url`<span class="token punctuation">,</span>`star`<span class="token punctuation">,</span>`publish_time`<span class="token punctuation">,</span>`score`<span class="token punctuation">,</span>`status`<span class="token punctuation">,</span>`order`<span class="token punctuation">,</span>`is_top`<span class="token punctuation">,</span>`top` <span class="token constant">FROM</span> `t_blog` <span class="token constant">WHERE</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `content` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&gt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `status` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">24.</span><span class="token function">971</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">5</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询对象-1" tabindex="-1"><a class="header-anchor" href="#查询对象-1" aria-hidden="true">#</a> 查询对象</h2><p><code>@EasyWhereCondition</code></p><table><thead><tr><th>属性</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>strict</td><td>true</td><td>严格模式,如果属性没有映射到对象上报错,如果表<code>tableIndex</code>不在当前上下文中也报错</td></tr><tr><td>tableIndex</td><td>0</td><td>当前条件用于查询哪张表</td></tr><tr><td>allowEmptyStrings</td><td>false</td><td>是否允许空字符串,如果允许表示空也会加入到表达式内而不是忽略</td></tr><tr><td>propName</td><td>&quot;&quot;</td><td>当前属性映射到数据库对象的属性名称,为空表示使用当前属性名</td></tr><tr><td>type</td><td>LIKE</td><td>当前属性和数据库对象属性以哪种表达式构建条件</td></tr></tbody></table><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>属性默认是支持like,可以通过指定条件,如果查询属性与数据库对象属性不一致可以通过<code>propName</code>改写</p></blockquote></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n<span class="token annotation punctuation">@Data</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlogQuery2Request</span> <span class="token punctuation">{</span>\n\n    <span class="token doc-comment comment">/**\n     * 标题\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 内容\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 点赞数\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">EQUAL</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> star<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 发布时间\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">RANGE_LEFT_CLOSED</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeBegin<span class="token punctuation">;</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">RANGE_RIGHT_CLOSED</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;publishTime&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> publishTimeEnd<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 评分\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">GREATER_THAN_EQUAL</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> score<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 状态\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">LESS_THAN_EQUAL</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> status<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 排序\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">GREATER_THAN</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> order<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * 是否置顶\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">NOT_EQUAL</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isTop<span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * statusList没有对应的属性名称所以需要改写为映射到status\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">IN</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token doc-comment comment">/**\n     * statusNotList没有对应的属性名称所以需要改写为映射到status\n     */</span>\n    <span class="token annotation punctuation">@EasyWhereCondition</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">EasyWhereCondition<span class="token punctuation">.</span>Condition</span><span class="token punctuation">.</span><span class="token constant">NOT_IN</span><span class="token punctuation">,</span>propName <span class="token operator">=</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> statusNotList<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态查询条件" tabindex="-1"><a class="header-anchor" href="#动态查询条件" aria-hidden="true">#</a> 动态查询条件</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>\n <span class="token class-name">BlogQuery2Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery2Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeBegin</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> queryable <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">whereObject</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> `id`<span class="token punctuation">,</span>`create_time`<span class="token punctuation">,</span>`update_time`<span class="token punctuation">,</span>`create_by`<span class="token punctuation">,</span>`update_by`<span class="token punctuation">,</span>`deleted`<span class="token punctuation">,</span>`title`<span class="token punctuation">,</span>`content`<span class="token punctuation">,</span>`url`<span class="token punctuation">,</span>`star`<span class="token punctuation">,</span>`publish_time`<span class="token punctuation">,</span>`score`<span class="token punctuation">,</span>`status`<span class="token punctuation">,</span>`order`<span class="token punctuation">,</span>`is_top`<span class="token punctuation">,</span>`top` <span class="token constant">FROM</span> `t_blog` <span class="token constant">WHERE</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `content` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&gt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `order` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `status` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">47.</span><span class="token function">865</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">47.</span><span class="token function">865</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">4</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>\n\n\n\n<span class="token class-name">BlogQuery2Request</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlogQuery2Request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;标题&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setPublishTimeEnd</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nquery<span class="token punctuation">.</span><span class="token function">setStatusList</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BlogEntity</span><span class="token punctuation">&gt;</span></span> queryable <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">BlogEntity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">whereObject</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> `id`<span class="token punctuation">,</span>`create_time`<span class="token punctuation">,</span>`update_time`<span class="token punctuation">,</span>`create_by`<span class="token punctuation">,</span>`update_by`<span class="token punctuation">,</span>`deleted`<span class="token punctuation">,</span>`title`<span class="token punctuation">,</span>`content`<span class="token punctuation">,</span>`url`<span class="token punctuation">,</span>`star`<span class="token punctuation">,</span>`publish_time`<span class="token punctuation">,</span>`score`<span class="token punctuation">,</span>`status`<span class="token punctuation">,</span>`order`<span class="token punctuation">,</span>`is_top`<span class="token punctuation">,</span>`top` <span class="token constant">FROM</span> `t_blog` <span class="token constant">WHERE</span> `deleted` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `content` <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> `publish_time` <span class="token operator">&lt;=</span> <span class="token operator">?</span> <span class="token constant">AND</span> `status` <span class="token constant">IN</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>\n<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">%</span>标题<span class="token operator">%</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">14</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">37</span><span class="token operator">:</span><span class="token number">47.</span><span class="token function">880</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>\n<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>类型</th><th>构建条件</th></tr></thead><tbody><tr><td>String</td><td>不为null且不为空</td></tr><tr><td>Integer</td><td>不为null</td></tr><tr><td>Short</td><td>不为null</td></tr><tr><td>Double</td><td>不为null</td></tr><tr><td>Float</td><td>不为null</td></tr><tr><td>BigDecimal</td><td>不为null</td></tr><tr><td>LocalDateTime</td><td>不为null</td></tr><tr><td>List</td><td>不为null且不为空</td></tr><tr><td>Array</td><td>不为null且不为空</td></tr></tbody></table>',16),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","client-dynaimic-where.html.vue"]]);export{r as default};
