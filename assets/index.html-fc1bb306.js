import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as e,e as o}from"./app-f5408521.js";const c={},t=o("<p>如果您是<code>c#</code>转过来的开发，如果您不想使用复杂恶心的xml来编写sql,如果您是一个有追求的喜欢强类型的技术开发,如果您是一个刚入行java的新人，那么easy-query将是非常适合您的一个框架，没有<code>mybatis</code>的繁琐,可以快速的编写crud代码和复杂代码。</p><ul><li>软删除</li><li>枚举和数据库映射</li><li>自动赋值创建人创建时间,修改人修改时间</li><li>软删除记录删除时间,删除人</li><li>慢sql监听拦截</li><li>数据库列的加密和加密后的模糊查询企业级解决方案</li><li>分库分表，读写分离</li><li>VO对象直接返回</li><li>数据库对象模型关联查询：一对多、一对一、多对多、多对一</li><li>直白的dsl查询语法</li><li>智能的差异识别更新</li><li>自带分页方法和无依赖分页链式返回</li><li>Embeddable、ValueObject对象</li><li>业务权限拦截器,我能查看我下面的所有组,组长可以查询所有组员的数据,组员查看自己的数据</li><li>原生sql片段使用,方便开发人员使用数据库特有的函数或者方言</li><li>java函数数据库封装支持各个数据库</li><li>group感知,在众多orm中极少数orm才会支持的group感知</li><li>无任何依赖的框架,不会有任何冲突</li><li>dsl多表查询支持join、in、exists等子查询</li></ul>",2),s=[t];function r(a,d){return i(),e("div",null,s)}const m=l(c,[["render",r],["__file","index.html.vue"]]);export{m as default};
