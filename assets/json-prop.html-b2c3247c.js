import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-a3605fd8.js";const p={},e=t(`<h1 id="java对象数据库值转换" tabindex="-1"><a class="header-anchor" href="#java对象数据库值转换" aria-hidden="true">#</a> Java对象数据库值转换</h1><p><code>easy-query</code>默认提供了数据库值对象转换功能,可以实现数据库对象属性枚举转换的功能或者对象string转json对象的功能</p><p><strong>注意:</strong> 如果需要支持差异更新需要实现重写<code>hashcode</code>和<code>equals</code> <code>Enum</code>除外</p><p>这边提供两种解决方案</p><ul><li>如果你希望数据库对象和数据库类型一致,但是还希望用枚举转换的或者其他属性转换的</li><li>数据库对象属性本身就是枚举或者对象的</li></ul><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> api</h2><table><thead><tr><th>接口</th><th>功能</th></tr></thead><tbody><tr><td>ValueConverter</td><td>将数据库和对象值进行互相转换的接口</td></tr><tr><td>&lt;TProperty&gt;</td><td>对象属性类型</td></tr><tr><td>&lt;TProvider&gt;</td><td>数据库对应的java类型</td></tr></tbody></table><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td>serialize</td><td>将实体对象转成数据库值</td></tr><tr><td>deserialize</td><td>将数据库的值转成对象值</td></tr></tbody></table><h2 id="springboot" tabindex="-1"><a class="header-anchor" href="#springboot" aria-hidden="true">#</a> springboot</h2><p><code>@Component</code>将对应的<code>ValueConverter</code>注入即可</p><h2 id="控制台" tabindex="-1"><a class="header-anchor" href="#控制台" aria-hidden="true">#</a> 控制台</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryRuntimeContext</span> runtimeContext <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">getRuntimeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">QueryConfiguration</span> configuration <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getQueryConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
configuration<span class="token punctuation">.</span><span class="token function">applyValueConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JsonConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//为自己实现的转换器</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="json对象" tabindex="-1"><a class="header-anchor" href="#json对象" aria-hidden="true">#</a> json对象</h2><div class="hint-container warning"><p class="hint-container-title">注意</p><blockquote><p>因为update会使用track追踪模式更新所以这边json对象必须要重写<code>equals</code>和<code>hashcode</code></p></blockquote></div><p>首先我们引入fastjson2</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.26<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ValueConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>o<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token class-name">JSONWriter<span class="token punctuation">.</span>Feature<span class="token punctuation">.</span>WriteMapNullValue</span><span class="token punctuation">,</span> <span class="token class-name">JSONWriter<span class="token punctuation">.</span>Feature<span class="token punctuation">.</span>WriteNullListAsEmpty</span><span class="token punctuation">,</span> <span class="token class-name">JSONWriter<span class="token punctuation">.</span>Feature<span class="token punctuation">.</span>WriteNullStringAsEmpty</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">deserialize</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">EasyStringUtil</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//采用复杂类型支持对象json和array集合</span>
        <span class="token class-name">ComplexPropType</span> complexType <span class="token operator">=</span> columnMetadata<span class="token punctuation">.</span><span class="token function">getComplexPropType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> complexType<span class="token punctuation">.</span><span class="token function">complexType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_topic_type&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicTypeJson</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> stars<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>conversion <span class="token operator">=</span> <span class="token class-name">JsonConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">TopicTypeJsonValue</span> title<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> topicType<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicTypeJsonValue</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token class-name">TopicTypeJson</span> topicType1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicTypeJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicType1<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;1231&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicType1<span class="token punctuation">.</span><span class="token function">setStars</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">TopicTypeJsonValue</span> topicTypeJsonValue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicTypeJsonValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicTypeJsonValue<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicTypeJsonValue<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicType1<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>topicTypeJsonValue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//直接插入对象实体</span>
topicType1<span class="token punctuation">.</span><span class="token function">setTopicType</span><span class="token punctuation">(</span><span class="token class-name">TopicTypeEnum</span><span class="token punctuation">.</span><span class="token constant">CLASSER</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicType1<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>topicType1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`t_topic_type\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`stars\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`topic_type\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1231</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">456</span><span class="token punctuation">,</span><span class="token string">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">9</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">23</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">18.</span><span class="token function">698</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>



<span class="token class-name">TopicTypeJson</span> topicTypeVO <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">TopicTypeJson</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;1231&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>topicTypeVO<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`stars\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`title\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`topic_type\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_time\` <span class="token constant">FROM</span> \`t_topic_type\` t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1231</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">2</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token class-name">TopicTypeJson</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1231</span><span class="token punctuation">,</span> stars<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token class-name">TopicTypeJsonValue</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">,</span> topicType<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span> createTime<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">23</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就实现了对应的值类型转换和枚举的转换</p>`,18),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","json-prop.html.vue"]]);export{r as default};
