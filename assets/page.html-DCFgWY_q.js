import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as a,a as n,o as r}from"./app-DvB_5WTW.js";const c={};function i(m,e){return r(),o("div",null,[e[0]||(e[0]=a("<p><code>eq</code>的toPageResult提供了3个参数其中第三个参数如果你传入大于等于0的参数表示你告知了框架本次查询的total有多少个,那么框架就不会去查询<code>count</code>而是直接使用<code>toList</code>将结果条数<code>pageSize</code>以<code>limit+toList</code>的方式返回</p><p>配合前端不进行跳页即可优化分页+count的情况下性能低下,可以固定使用<code>Integer.MAX_VALUE</code></p>",2)),n(` ## mysql
mysql下大数据表的并行手动拆分可行性

比如查询有一个条件是2020年到2024年是否可以拆分成4年然后4条sql进行并行查询将结果聚合呢？splitCountBy进行设置的可行性???设置splitColumn比如时间然后再count前查询条件结果是max和min额外一次查询来加快count的可行性？？ `)])}const l=t(c,[["render",i]]),u=JSON.parse('{"path":"/performance/page.html","title":"分页查询count慢","lang":"zh-CN","frontmatter":{"title":"分页查询count慢","order":60,"description":"eq的toPageResult提供了3个参数其中第三个参数如果你传入大于等于0的参数表示你告知了框架本次查询的total有多少个,那么框架就不会去查询count而是直接使用toList将结果条数pageSize以limit+toList的方式返回 配合前端不进行跳页即可优化分页+count的情况下性能低下,可以固定使用Integer.MAX_VALUE","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分页查询count慢\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-11T15:10:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/performance/page.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"分页查询count慢"}],["meta",{"property":"og:description","content":"eq的toPageResult提供了3个参数其中第三个参数如果你传入大于等于0的参数表示你告知了框架本次查询的total有多少个,那么框架就不会去查询count而是直接使用toList将结果条数pageSize以limit+toList的方式返回 配合前端不进行跳页即可优化分页+count的情况下性能低下,可以固定使用Integer.MAX_VALUE"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-11T15:10:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-11T15:10:17.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://github.com/dromara/easy-query/easy-query-doc/en/performance/page.html"}]]},"git":{"createdTime":1746976217000,"updatedTime":1746976217000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":1,"url":"https://github.com/xuejiaming"}]},"readingTime":{"minutes":0.74,"words":223},"filePathRelative":"performance/page.md","autoDesc":true}');export{l as comp,u as data};
