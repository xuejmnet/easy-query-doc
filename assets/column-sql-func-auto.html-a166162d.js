import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as k,c as r,a as o,w as a,b as n,d as s,e as c}from"./app-68d9679c.js";const d={},m=c(`<p><code>easy-query</code>提供了数据库函数列值转换,可以完美的实现java对象和数据库列的函数互相交换,比如数据库函数<code>加密、解密</code>、<code>base64 编码、解码</code>等数据库函数对</p><h2 id="mysql加密解密" tabindex="-1"><a class="header-anchor" href="#mysql加密解密" aria-hidden="true">#</a> mysql加密解密</h2><p><a href="/easy-query-doc/guide/adv/column-encryption">《数据库列加密》</a> 上一篇文章我们讲解了如何使用java代码来实现数据库列的加密解密,接下来我将使用数据库函数来实现</p><p>AES_DECRYPT(from_base64(<code>receiver_mobile</code>)</p><table><thead><tr><th>方法</th><th>默认值</th></tr></thead><tbody><tr><td>to_base64(AES_ENCRYPT(&#39;手机号值&#39;),&#39;秘钥&#39;)</td><td>将数据进行aes加密,然后进行base64编码</td></tr><tr><td>AES_DECRYPT(from_base64(&#39;手机号列&#39;),&#39;秘钥&#39;)</td><td>将数据进行base64解码,然后进行aes进行解密</td></tr></tbody></table><h2 id="columnvaluesqlconverter" tabindex="-1"><a class="header-anchor" href="#columnvaluesqlconverter" aria-hidden="true">#</a> ColumnValueSQLConverter</h2><div class="hint-container tip"><p class="hint-container-title">说明!!!</p><blockquote><p>支持join和下多表的自动识别表别名而无需自行处理别名</p></blockquote></div><table><thead><tr><th>方法</th><th>作用域</th><th>说明</th></tr></thead><tbody><tr><td>selectColumnConvert</td><td>仅作用到select投影上面</td><td>用于做数据库列到java对象字段的函数处理比如 [AES_DECRYPT(from_base64(<code>phone</code>),&#39;秘钥&#39;)]</td></tr><tr><td>propertyColumnConvert</td><td>当前列被当做片段时如何使用</td><td>非select查询时被作为片段如何使用默认就是使用当前列</td></tr><tr><td>valueConvert</td><td>仅作用到insert,update set值,where条件值</td><td>用于做java对象字段到数据库列的函数处理比如 [AES_DECRYPT(from_base64(&#39;手机号列&#39;),&#39;秘钥&#39;)]</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>xuejiaming
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * select查询
     *
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     */</span>
    <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span><span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>c<span class="token operator">-&gt;</span>c<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSQLTableOwner</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">,</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getPropertyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * insert update entity
     * update set
     * where
     *
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlParameter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">isCompareValue</span> 当前值是用于比较还是存储
     */</span>
    <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token annotation punctuation">@NotNull</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token comment">//@Component 如果是springboot的话</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySQLAesEncryptColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 数据加密秘钥
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SECRET</span><span class="token operator">=</span><span class="token string">&quot;1234567890123456&quot;</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        Dialect dialect = runtimeContext.getQueryConfiguration().getDialect();</span>
            sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;AES_DECRYPT(from_base64({0}),{1})&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                context
                        <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getPropertyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//采用变量是因为可能出现join附带别名所以需要变量</span>
                        <span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">SECRET</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//.constValue(dialect.getQuoteName(columnMetadata.getName()));//如果这边也是用变量就会导致join下不是别名而是带具体表的列比如:t.\`phone\`</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>c<span class="token operator">-&gt;</span>c<span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSQLTableOwner</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">,</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getPropertyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span><span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;to_base64(AES_ENCRYPT({0},{1}))&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">SECRET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">//非springboot或者多数据源之类的可以通过获取对应的QueryConfiguration进行添加</span>
<span class="token comment">//QueryRuntimeContext runtimeContext = easyQuery.getRuntimeContext();</span>
<span class="token comment">//QueryConfiguration configuration = runtimeContext.getQueryConfiguration();</span>
<span class="token comment">//configuration.applyColumnValueSQLConverter(new MySQLAesEncryptColumnValueSQLConverter());</span>



<span class="token comment">//java对象</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_sys_user_sql_encryption&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SysUserSQLEncryption</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>sqlConversion <span class="token operator">=</span> <span class="token class-name">MySQLAesEncryptColumnValueSQLConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token comment">//添加这个列为加密列</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> idCard<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="新增数据" tabindex="-1"><a class="header-anchor" href="#新增数据" aria-hidden="true">#</a> 新增数据</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span><span class="token string">&quot;13232456789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setIdCard</span><span class="token punctuation">(</span><span class="token string">&quot;12345678&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;xxxxxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//插入语句采用手机号加密</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`t_sys_user_sql_encryption\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`username\`<span class="token punctuation">,</span>\`phone\`<span class="token punctuation">,</span>\`id_card\`<span class="token punctuation">,</span>\`address\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">13232456789</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345678</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xxxxxxx</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">10</span><span class="token constant">T14</span><span class="token operator">:</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">32.</span><span class="token function">109</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h2><p>单表</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> sysUserSQLEncryption <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//查询语句采用手机号列解密</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`username\`<span class="token punctuation">,</span><span class="token function">AES_DECRYPT</span><span class="token punctuation">(</span><span class="token function">from_base64</span><span class="token punctuation">(</span>\`phone\`<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`phone\`<span class="token punctuation">,</span>\`id_card\`<span class="token punctuation">,</span>\`address\`<span class="token punctuation">,</span>\`create_time\` <span class="token constant">FROM</span> \`t_sys_user_sql_encryption\` <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">4</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">12345</span><span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> phone<span class="token operator">=</span><span class="token number">13232456789</span><span class="token punctuation">,</span> idCard<span class="token operator">=</span><span class="token number">12345678</span><span class="token punctuation">,</span> address<span class="token operator">=</span>xxxxxxx<span class="token punctuation">,</span> createTime<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">10</span><span class="token constant">T14</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> sysUserSQLEncryption <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sysUserSQLEncryption<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span><span class="token string">&quot;111123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>sysUserSQLEncryption<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> \`t_sys_user_sql_encryption\` <span class="token constant">SET</span> \`username\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`phone\` <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\`id_card\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`address\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`create_time\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">username</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">111123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345678</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xxxxxxx</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">10</span><span class="token constant">T14</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token function">12</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="按列更新" tabindex="-1"><a class="header-anchor" href="#按列更新" aria-hidden="true">#</a> 按列更新</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">long</span> l1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token operator">::</span><span class="token function">getPhone</span><span class="token punctuation">,</span> <span class="token string">&quot;1111234&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> \`t_sys_user_sql_encryption\` <span class="token constant">SET</span> \`phone\` <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1111234</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多表join查询</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> sysUserSQLEncryption1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">SysUserSQLEncryption</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token operator">::</span><span class="token function">getPhone</span><span class="token punctuation">,</span> <span class="token string">&quot;1111234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//注意这边列会自动带上具体的表名而不是简单的拼接所以在join条件下也无需关心别名</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`username\`<span class="token punctuation">,</span><span class="token function">AES_DECRYPT</span><span class="token punctuation">(</span><span class="token function">from_base64</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`phone\`<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`phone\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`id_card\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`address\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_time\` <span class="token constant">FROM</span> \`t_sys_user_sql_encryption\` t <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> \`t_topic\` t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> t1<span class="token punctuation">.</span>\`id\` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`phone\` <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1111234</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>如果采用加密对进行处理那么默认是不支持like函数的,因为为了高性能默认easy-query采用的是对表达式条件值进行加密匹配而不是数据库列解密匹配,如果需要支持解密可以采用上一篇文章的加密方式,可以实现高性能的加密列like</p></blockquote></div><h2 id="计算属性" tabindex="-1"><a class="header-anchor" href="#计算属性" aria-hidden="true">#</a> 计算属性</h2><p>通常我们会对用户的年龄使用一个字段来进行存储,但是大部分时候这个年龄属性应该是动态计算的而不是实时计算的,如果我们存储firstName和lastName那么用户的name字段也可以通过这种方式来实现计算</p>`,25),v=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[s(`
`),n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"t_user_extra"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EntityProxy"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserExtra"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"ProxyEntityAvailable"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"UserExtra"),s(),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"UserExtraProxy"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" firstName"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" lastName"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" birthday"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@InsertIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("sqlConversion "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"FullNameColumnValueSQLConverter"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("realColumn "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" fullName"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@InsertIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("sqlConversion "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"UserAgeColumnValueSQLConverter"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s("realColumn "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Integer"),s(" age"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[s(`
`),n("span",{class:"token keyword"},"create"),s(),n("span",{class:"token keyword"},"table"),s(` t_user_extra
`),n("span",{class:"token punctuation"},"("),s(`
    id `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'主键ID'"),n("span",{class:"token keyword"},"primary"),s(),n("span",{class:"token keyword"},"key"),n("span",{class:"token punctuation"},","),s(`
    first_name `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'姓'"),n("span",{class:"token punctuation"},","),s(`
    last_name `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'名'"),n("span",{class:"token punctuation"},","),s(`
    birthday `),n("span",{class:"token keyword"},"datetime"),s("  "),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'生日'"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'用户额外信息表'"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),f=c(`<h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAgeColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 当这个值被作为select的时候如何处理
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">runtimeContext</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> durationDay <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>fx<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeDurationEnum<span class="token punctuation">.</span>Days</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> sqlFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">numberCalc</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>durationDay<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">NumberCalcEnum</span><span class="token punctuation">.</span><span class="token constant">NUMBER_DEVIDE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> ageSQLFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">math</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>sqlFunction<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MathMethodEnum<span class="token punctuation">.</span>Ceiling</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> ageSQLFunction<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>

        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            ageSQLFunction<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 当这个值被用作非查询的值的时候如何处理不出现在select里面
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">runtimeContext</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> durationDay <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">duration</span><span class="token punctuation">(</span>x<span class="token operator">-&gt;</span>x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>fx<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">DateTimeDurationEnum<span class="token punctuation">.</span>Days</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> sqlFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">numberCalc</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>durationDay<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">NumberCalcEnum</span><span class="token punctuation">.</span><span class="token constant">NUMBER_DEVIDE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> ageSQLFunction <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">math</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">sqlFunc</span><span class="token punctuation">(</span>sqlFunction<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MathMethodEnum<span class="token punctuation">.</span>Ceiling</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> ageSQLFunction<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            ageSQLFunction<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 当前值作为比较值的时候比如where age=18 那么这个18应该怎么处理
     * 当前这个值作为存储值的时候比如insert table (age) values(18)那么这个值如何处理
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlParameter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">runtimeContext</span>
     * <span class="token keyword">@param</span> <span class="token parameter">isCompareValue</span> 当前值是用于比较还是存储
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span><span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FullNameColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> concat <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> concat<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            concat<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            context<span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">propertyColumnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SQLFunc</span> fx <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">fx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SQLFunction</span> concat <span class="token operator">=</span> fx<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;firstName&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lastName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sqlSegment <span class="token operator">=</span> concat<span class="token punctuation">.</span><span class="token function">sqlSegment</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span>sqlSegment<span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            concat<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getSQLNativeChainExpressionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">,</span><span class="token keyword">boolean</span> isCompareValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;{0}&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询" tabindex="-1"><a class="header-anchor" href="#查询" aria-hidden="true">#</a> 查询</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserExtra</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`first_name\`<span class="token punctuation">,</span>
    \`last_name\`<span class="token punctuation">,</span>
    \`birthday\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`full_name\`<span class="token punctuation">,</span> <span class="token operator">--</span> 全名就是first<span class="token operator">+</span>last
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>\`birthday\`<span class="token punctuation">,</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`age\` <span class="token operator">--</span> 计算出出生日期到现在的天数除以<span class="token number">365</span>就是年向上取整就是虚岁
<span class="token constant">FROM</span>
    \`t_user_extra\` 
<span class="token class-name">WHERE</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%123%&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">IN</span> <span class="token punctuation">(</span>
        <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;2&#39;</span>
    <span class="token punctuation">)</span> 
    <span class="token class-name">AND</span> <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> \`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">12</span>


<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserExtra</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            u<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;悟&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`first_name\`<span class="token punctuation">,</span>
    \`last_name\`<span class="token punctuation">,</span>
    \`birthday\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`full_name\`<span class="token punctuation">,</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span>\`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`age\` 
<span class="token constant">FROM</span>
    \`t_user_extra\` 
<span class="token constant">WHERE</span>
    \`id\` <span class="token operator">=</span> <span class="token char">&#39;test2&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%悟%&#39;</span> 
<span class="token constant">ORDER</span> <span class="token class-name">BY</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">ASC</span>




<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserExtra</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            u<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;悟&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orderBy</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            x<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            x<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token class-name">OrderByModeEnum</span><span class="token punctuation">.</span><span class="token constant">NULLS_LAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token constant">SELECT</span>
    \`id\`<span class="token punctuation">,</span>
    \`first_name\`<span class="token punctuation">,</span>
    \`last_name\`<span class="token punctuation">,</span>
    \`birthday\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span> \`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`full_name\`<span class="token punctuation">,</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> \`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`age\` 
<span class="token constant">FROM</span>
    \`t_user_extra\` 
<span class="token constant">WHERE</span>
    \`id\` <span class="token operator">=</span> <span class="token char">&#39;test3&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%悟%&#39;</span> 
<span class="token constant">ORDER</span> <span class="token class-name">BY</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span> \`last_name\`<span class="token punctuation">)</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> \`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>
    <span class="token constant">CASE</span> 
        <span class="token class-name">WHEN</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span>  \`last_name\`<span class="token punctuation">)</span> <span class="token constant">IS</span> <span class="token constant">NULL</span> <span class="token constant">THEN</span> <span class="token number">1</span> 
        <span class="token constant">ELSE</span> <span class="token number">0</span> 
    <span class="token class-name">END</span> <span class="token constant">ASC</span><span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>\`first_name\`<span class="token punctuation">,</span> \`last_name\`<span class="token punctuation">)</span> <span class="token constant">ASC</span>



<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Draft3</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> easyEntityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">UserExtra</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                u<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;悟&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span> <span class="token class-name">GroupKeys</span><span class="token punctuation">.</span><span class="token constant">TABLE1</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>group <span class="token operator">-&gt;</span> <span class="token class-name">Select</span><span class="token punctuation">.</span><span class="token constant">DRAFT</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
                    group<span class="token punctuation">.</span><span class="token function">key1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    group<span class="token punctuation">.</span><span class="token function">key2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    group<span class="token punctuation">.</span><span class="token function">groupTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token class-name">SELECT</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`value1\`<span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">AS</span> \`value2\`<span class="token punctuation">,</span>
    <span class="token function">MAX</span><span class="token punctuation">(</span><span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`value3\` 
<span class="token constant">FROM</span>
    \`t_user_extra\` t 
<span class="token constant">WHERE</span>
    t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> <span class="token char">&#39;test3&#39;</span> 
    <span class="token class-name">AND</span> <span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span> <span class="token constant">LIKE</span> <span class="token char">&#39;%悟%&#39;</span> 
<span class="token constant">GROUP</span> <span class="token class-name">BY</span>
    <span class="token function">CEILING</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">timestampdiff</span><span class="token punctuation">(</span><span class="token constant">DAY</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`birthday\`<span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">CONCAT</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`first_name\`<span class="token punctuation">,</span> t<span class="token punctuation">.</span>\`last_name\`<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入" tabindex="-1"><a class="header-anchor" href="#插入" aria-hidden="true">#</a> 插入</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">UserExtra</span> userExtra <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span><span class="token string">&quot;孙&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setLastName</span><span class="token punctuation">(</span><span class="token string">&quot;悟空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userExtra<span class="token punctuation">.</span><span class="token function">setBirthday</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
easyEntityQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>userExtra<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">INSERT</span> 
<span class="token constant">INTO</span>
    \`t_user_extra\`
    <span class="token punctuation">(</span>
        \`id\`<span class="token punctuation">,</span>\`first_name\`<span class="token punctuation">,</span>\`last_name\`<span class="token punctuation">,</span>\`birthday\`
    <span class="token punctuation">)</span> 
<span class="token constant">VALUES</span>
    <span class="token punctuation">(</span><span class="token char">&#39;test2&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;孙&#39;</span><span class="token punctuation">,</span><span class="token char">&#39;悟空&#39;</span><span class="token punctuation">,</span>&#39;<span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span><span class="token operator">:</span><span class="token number">00</span>&#39;<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="复杂子查询" tabindex="-1"><a class="header-anchor" href="#复杂子查询" aria-hidden="true">#</a> 复杂子查询</h2><p>因为有时候我们需要统计我们的子表数量可能会有对应的主表数量的聚合查询和最大值查询也可以通过这个来实现</p><h2 id="相关博客" tabindex="-1"><a class="header-anchor" href="#相关博客" aria-hidden="true">#</a> 相关博客</h2>`,9),y={href:"https://www.cnblogs.com/xuejiaming/p/17619102.html",target:"_blank",rel:"noopener noreferrer"};function g(C,S){const l=e("CodeTabs"),u=e("ExternalLinkIcon");return k(),r("div",null,[m,o(l,{id:"143",data:[{id:"对象模式"},{id:"sql脚本"}]},{title0:a(({value:t,isActive:p})=>[s("对象模式")]),title1:a(({value:t,isActive:p})=>[s("sql脚本")]),tab0:a(({value:t,isActive:p})=>[v]),tab1:a(({value:t,isActive:p})=>[b]),_:1}),f,n("ul",null,[n("li",null,[n("a",y,[s("《数据库列加密解密脱敏》"),o(u)])])])])}const q=i(d,[["render",g],["__file","column-sql-func-auto.html.vue"]]);export{q as default};
