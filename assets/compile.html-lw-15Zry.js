import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as n,d as t,e as o,o as p}from"./app-Vxibd5ov.js";const l={},m=["src"];function c(a,e){return p(),i("div",null,[e[2]||(e[2]=n('<h1 id="自动编译apt" tabindex="-1"><a class="header-anchor" href="#自动编译apt"><span>自动编译apt</span></a></h1><p>在常规的项目中框架无法感知并且处理apt的注解,需要编译时才会生成对应的文件,所以如果一个类已经编译生成了对应的代理对象那么如果修改这个类中的属性那么是无法实时感知生成对应的代理对象</p><p>比如<code>private String name;</code>用户改成了<code>private String name1;</code>那么插件会实时编译出对应的<code>name1</code>到<code>proxy</code>类中当然如果你没有装插件可以通过重新编译项目即可但是当项目变大后每次重新编译会带来十分漫长的等待时间.</p><p>插件也贴心的准备了两个快捷方式分别是<code>CompileCurrentFile</code>和<code>AutoCompile</code></p><h2 id="compilecurrentfile" tabindex="-1"><a class="header-anchor" href="#compilecurrentfile"><span>CompileCurrentFile</span></a></h2><p>立刻编译当前的类只要类加了<code>@EntityProxy</code>注解即可</p><h2 id="compileall" tabindex="-1"><a class="header-anchor" href="#compileall"><span>CompileAll</span></a></h2><p>立刻编译当前项目的所有类只要类加了<code>@EntityProxy</code>注解即可</p><h2 id="使用方式" tabindex="-1"><a class="header-anchor" href="#使用方式"><span>使用方式</span></a></h2>',9)),t("p",null,[e[0]||(e[0]=o("在对应的类中呼出get set的快捷方式即可看到对应的操作")),e[1]||(e[1]=t("br",null,null,-1)),t("img",{src:a.$withBase("/images/plugin-compile.jpg")},null,8,m)]),e[3]||(e[3]=t("h2",{id:"总结",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#总结"},[t("span",null,"总结")])],-1)),e[4]||(e[4]=t("p",null,[o("有时候插件或者框架并不会100%正确生成Proxy有时候因为部分错误原因导致没有及时编译生成最新的代理对象，所以eq提供了"),t("code",null,"CompileCurrentFile"),o("仅编译当前文件,防止"),t("code",null,"AutoCompile"),o("带来的长时间阻塞编译生成")],-1))])}const u=r(l,[["render",c]]),h=JSON.parse('{"path":"/plugin/compile.html","title":"Compile","lang":"zh-CN","frontmatter":{"title":"Compile","order":20,"category":["plugin"],"description":"自动编译apt 在常规的项目中框架无法感知并且处理apt的注解,需要编译时才会生成对应的文件,所以如果一个类已经编译生成了对应的代理对象那么如果修改这个类中的属性那么是无法实时感知生成对应的代理对象 比如private String name;用户改成了private String name1;那么插件会实时编译出对应的name1到proxy类中当然如...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Compile\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-05T01:54:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/plugin/compile.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"Compile"}],["meta",{"property":"og:description","content":"自动编译apt 在常规的项目中框架无法感知并且处理apt的注解,需要编译时才会生成对应的文件,所以如果一个类已经编译生成了对应的代理对象那么如果修改这个类中的属性那么是无法实时感知生成对应的代理对象 比如private String name;用户改成了private String name1;那么插件会实时编译出对应的name1到proxy类中当然如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-05T01:54:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-05T01:54:38.000Z"}]]},"git":{"createdTime":1746410078000,"updatedTime":1746410078000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":1,"url":"https://github.com/xuejiaming"}]},"readingTime":{"minutes":1.17,"words":351},"filePathRelative":"plugin/compile.md","autoDesc":true}');export{u as comp,h as data};
