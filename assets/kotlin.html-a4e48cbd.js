import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,d as n,e as s,b as i,f as c}from"./app-c6c544f7.js";const l="/easy-query-doc/kt-build.jpg",u="/easy-query-doc/kt-impl.jpg",r={},k=n("h1",{id:"kotlin配置使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#kotlin配置使用","aria-hidden":"true"},"#"),s(" kotlin配置使用")],-1),d=n("p",null,[n("code",null,"eq"),s("不但支持java也支持"),n("code",null,"kotlin"),s("语言的使用,我们将使用ksp来实现kotlin的相关处理")],-1),v={href:"https://github.com/xuejmnet/easy-query-samples",target:"_blank",rel:"noopener noreferrer"},m=c(`<h2 id="创建koltin项目" tabindex="-1"><a class="header-anchor" href="#创建koltin项目" aria-hidden="true">#</a> 创建koltin项目</h2><h3 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖" aria-hidden="true">#</a> 添加依赖</h3><p><code>build.gradle</code>文件</p><div class="language-gradle line-numbers-mode" data-ext="gradle"><pre class="language-gradle"><code><span class="token keyword">plugins</span> <span class="token punctuation">{</span>
    <span class="token function">kotlin</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;jvm&quot;</span></span><span class="token punctuation">)</span> version <span class="token interpolation-string"><span class="token string">&quot;1.9.21&quot;</span></span>
    <span class="token function">id</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.google.devtools.ksp&quot;</span></span><span class="token punctuation">)</span> version <span class="token interpolation-string"><span class="token string">&quot;1.9.21-1.0.15&quot;</span></span>
<span class="token punctuation">}</span>

group <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;com.test&quot;</span></span>
version <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">&quot;1.0-SNAPSHOT&quot;</span></span>

<span class="token keyword">repositories</span> <span class="token punctuation">{</span>
    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">dependencies</span> <span class="token punctuation">{</span>

    <span class="token keyword">implementation</span><span class="token punctuation">(</span><span class="token function">kotlin</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;stdlib&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.easy-query:sql-core:2.5.5&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.easy-query:sql-mysql:2.5.5&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.easy-query:sql-api-proxy:2.5.5&quot;</span></span><span class="token punctuation">)</span>
<span class="token comment">//    annotationProcessor(&quot;com.easy-query:sql-processor:2.5.5&quot;)</span>
    <span class="token function">ksp</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.easy-query:sql-ksp-processor:2.5.5&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.mysql:mysql-connector-j:9.2.0&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">implementation</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;com.zaxxer:HikariCP:3.3.1&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">testImplementation</span><span class="token punctuation">(</span><span class="token function">kotlin</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;test&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">tasks</span><span class="token punctuation">.</span>test <span class="token punctuation">{</span>
    <span class="token function">useJUnitPlatform</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
kotlin <span class="token punctuation">{</span>
    <span class="token function">jvmToolchain</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span>
    <span class="token comment">// 将生成的代码添加到编译路径中。</span>
    <span class="token comment">// 没有这个配置，gradle命令仍然可以正常执行，</span>
    <span class="token comment">// 但是, Intellij无法找到生成的源码。</span>
    <span class="token keyword">sourceSets</span><span class="token punctuation">.</span>main <span class="token punctuation">{</span>
        kotlin<span class="token punctuation">.</span><span class="token function">srcDir</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">&quot;build/generated/ksp/main/kotlin&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加数据库对象" tabindex="-1"><a class="header-anchor" href="#添加数据库对象" aria-hidden="true">#</a> 添加数据库对象</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_topic&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EntityProxy</span>
<span class="token keyword">class</span> <span class="token class-name">Topic</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> id<span class="token operator">:</span><span class="token class-name">String</span><span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> stars<span class="token operator">:</span><span class="token class-name">Int</span><span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> title<span class="token operator">:</span><span class="token class-name">String</span><span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成代理对象" tabindex="-1"><a class="header-anchor" href="#生成代理对象" aria-hidden="true">#</a> 生成代理对象</h3><p>将当前项目build后可以再对应的build模块看到对应生产的<code>TopicProxy</code>类</p><img src="`+l+'"><h3 id="插件快速实现接口" tabindex="-1"><a class="header-anchor" href="#插件快速实现接口" aria-hidden="true">#</a> 插件快速实现接口</h3><p>你如果安装了插件可以通过插件快速时间接口,当然你也可以自己去实现</p><img src="'+u+`"><h3 id="最终的topic类" tabindex="-1"><a class="header-anchor" href="#最终的topic类" aria-hidden="true">#</a> 最终的Topic类</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">package</span> com<span class="token punctuation">.</span>test<span class="token punctuation">.</span>entity

<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Column
<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>EntityProxy
<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Table

<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>ProxyEntityAvailable<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>test<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>TopicProxy<span class="token punctuation">;</span>




<span class="token annotation builtin">@Table</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;t_topic&quot;</span></span><span class="token punctuation">)</span>
<span class="token annotation builtin">@EntityProxy</span>
<span class="token keyword">class</span> Topic <span class="token operator">:</span> ProxyEntityAvailable<span class="token operator">&lt;</span>Topic<span class="token punctuation">,</span> TopicProxy<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token annotation builtin">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> id<span class="token operator">:</span>String<span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> stars<span class="token operator">:</span>Int<span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> title<span class="token operator">:</span>String<span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写测试代码" tabindex="-1"><a class="header-anchor" href="#编写测试代码" aria-hidden="true">#</a> 编写测试代码</h3><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>
<span class="token keyword">package</span> com<span class="token punctuation">.</span>test

<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>api<span class="token punctuation">.</span>proxy<span class="token punctuation">.</span>client<span class="token punctuation">.</span>DefaultEasyEntityQuery
<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>api<span class="token punctuation">.</span>client<span class="token punctuation">.</span>DefaultEasyQueryClient
<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>bootstrapper<span class="token punctuation">.</span>EasyQueryBootstrapper
<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>core<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>LogFactory
<span class="token keyword">import</span> com<span class="token punctuation">.</span>easy<span class="token punctuation">.</span>query<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>config<span class="token punctuation">.</span>MySQLDatabaseConfiguration
<span class="token keyword">import</span> com<span class="token punctuation">.</span>test<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Topic
<span class="token keyword">import</span> com<span class="token punctuation">.</span>zaxxer<span class="token punctuation">.</span>hikari<span class="token punctuation">.</span>HikariDataSource

<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello World!&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> hikariDataSource <span class="token operator">=</span> <span class="token function">HikariDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    hikariDataSource<span class="token punctuation">.</span>jdbcUrl <span class="token operator">=</span>
        <span class="token string-literal singleline"><span class="token string">&quot;jdbc:mysql://127.0.0.1:3306/easy-query-test?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false&amp;allowMultiQueries=true&amp;rewriteBatchedStatements=true&quot;</span></span><span class="token punctuation">;</span>
    hikariDataSource<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;root&quot;</span></span><span class="token punctuation">;</span>
    hikariDataSource<span class="token punctuation">.</span>password <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;root&quot;</span></span><span class="token punctuation">;</span>
    hikariDataSource<span class="token punctuation">.</span>driverClassName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span><span class="token punctuation">;</span>
    hikariDataSource<span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    LogFactory<span class="token punctuation">.</span><span class="token function">useStdOutLogging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> easyQueryClient <span class="token operator">=</span> EasyQueryBootstrapper<span class="token punctuation">.</span><span class="token function">defaultBuilderConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setDefaultDataSource</span><span class="token punctuation">(</span>hikariDataSource<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">useDatabaseConfigure</span><span class="token punctuation">(</span><span class="token function">MySQLDatabaseConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> entityQuery <span class="token operator">=</span> <span class="token function">DefaultEasyEntityQuery</span><span class="token punctuation">(</span>easyQueryClient<span class="token punctuation">)</span>
    <span class="token keyword">var</span> toList <span class="token operator">=</span> easyQueryClient<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span>Topic<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> toList1 <span class="token operator">=</span> entityQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span>Topic<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">where</span> <span class="token punctuation">{</span>
            it<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;123&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function b(y,g){const a=p("ExternalLinkIcon");return e(),o("div",null,[k,d,n("p",null,[s("本章源代码在git上如果需要请自行获取"),n("a",v,[s("点我获取"),i(a)])]),m])}const f=t(r,[["render",b],["__file","kotlin.html.vue"]]);export{f as default};
