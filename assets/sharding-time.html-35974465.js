import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-bb0aa1c5.js";const e={},p=t(`<p>本章节我们实现分库分表的分表功能,实现按时间分表，按月份表</p><p>这是我们最终的java对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;t_topic_sharding_time&quot;</span><span class="token punctuation">,</span>shardingInitializer <span class="token operator">=</span> <span class="token class-name">TopicShardingTimeShardingInitializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicShardingTime</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> stars<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@ShardingTableKey</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>



<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicShardingTimeShardingInitializer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractShardingMonthInitializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicShardingTime</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> <span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> <span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure0</span><span class="token punctuation">(</span><span class="token class-name">ShardingEntityBuilder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicShardingTime</span><span class="token punctuation">&gt;</span></span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>


    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置对象" tabindex="-1"><a class="header-anchor" href="#配置对象" aria-hidden="true">#</a> 配置对象</h2><p>首先我们来看下对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;t_topic_sharding_time&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicShardingTime</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">//@ShardingExtraTableKey 先忽略该注解</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> stars<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@ShardingTableKey</span> <span class="token comment">//表示这个属性为分表键</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注解<code>Table</code>属性<code>shardingInitializer = TopicShardingTimeShardingInitializer.class</code>表示分初始化器使用<code>TopicShardingTimeShardingInitializer.class</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicShardingTimeShardingInitializer</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractShardingMonthInitializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicShardingTime</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token comment">//表示初始化时的开始时间用来初始化自动计算数据库的分片数量</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> <span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//结束时间,即TopicShardingTime第一次被初始化时和getBeginTime互相计算出现在数据库的分片数量</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> <span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure0</span><span class="token punctuation">(</span><span class="token class-name">ShardingEntityBuilder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicShardingTime</span><span class="token punctuation">&gt;</span></span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>


    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样我们就完成了对象的分片配置,具体原理是为什么呢？<br> 首先我们通过设置<code>beginTime</code>和<code>endTime</code>在初次使用<code>TopicShardingTime</code>对象的时候确保可以计算出对应的数据库应有的db数量,具体代码在<code>AbstractShardingMonthInitializer</code>这个默认的分片初始化器里面</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">ShardingEntityBuilder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">EntityMetadata</span> entityMetadata <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">getEntityMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">EasyQueryOption</span> easyQueryOption <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">getEasyQueryOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> defaultDataSourceName <span class="token operator">=</span> easyQueryOption<span class="token punctuation">.</span><span class="token function">getDefaultDataSourceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> tableName <span class="token operator">=</span> entityMetadata<span class="token punctuation">.</span><span class="token function">getTableName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//防止系统在凌晨发布定时任务刚好在23:59:00-00:00:00时间点运行过,导致下次运行会在00:00:01-59,会缺几秒导致没有加到内存中所以需要加5分钟</span>
        <span class="token class-name">LocalDateTime</span> setBeginTime <span class="token operator">=</span> <span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">plusMinutes</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">LocalDateTime</span> beginTime <span class="token operator">=</span> <span class="token function">getBeginTimeToStart</span><span class="token punctuation">(</span>setBeginTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> endTime <span class="token operator">=</span> <span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>beginTime<span class="token punctuation">.</span><span class="token function">isAfter</span><span class="token punctuation">(</span>endTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;begin time:&quot;</span> <span class="token operator">+</span> beginTime <span class="token operator">+</span> <span class="token string">&quot; is after end time:&quot;</span> <span class="token operator">+</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> tableSeparator <span class="token operator">=</span> <span class="token function">getTableSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Collection</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> initTables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//应该是不在endTime后可以等于endTime</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>beginTime<span class="token punctuation">.</span><span class="token function">isAfter</span><span class="token punctuation">(</span>endTime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> dataSource <span class="token operator">=</span> <span class="token function">formatDataSource</span><span class="token punctuation">(</span>beginTime<span class="token punctuation">,</span> defaultDataSourceName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> tail <span class="token operator">=</span> <span class="token function">formatTail</span><span class="token punctuation">(</span>beginTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> actualTableNames <span class="token operator">=</span> <span class="token class-name">EasyMapUtil</span><span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>initTables<span class="token punctuation">,</span>dataSource<span class="token punctuation">,</span> key <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            actualTableNames<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tableName <span class="token operator">+</span> tableSeparator <span class="token operator">+</span> tail<span class="token punctuation">)</span><span class="token punctuation">;</span>
            beginTime <span class="token operator">=</span> <span class="token function">getNextTime</span><span class="token punctuation">(</span>beginTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//初始化实际表</span>
        builder<span class="token punctuation">.</span><span class="token function">actualTableNameInit</span><span class="token punctuation">(</span>initTables<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">configure0</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置路由" tabindex="-1"><a class="header-anchor" href="#配置路由" aria-hidden="true">#</a> 配置路由</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopicShardingTimeTableRoute</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMonthTableRoute</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TopicShardingTime</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">LocalDateTime</span> <span class="token function">convertLocalDateTime</span><span class="token punctuation">(</span><span class="token class-name">Object</span> shardingValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span>shardingValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过继承默认抽象路由<code>AbstractMonthTableRoute</code>我们非常简单的实现了分片的规则</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
        <span class="token class-name">EasyQueryClient</span> easyQueryClient <span class="token operator">=</span> <span class="token class-name">EasyQueryBootstrapper</span><span class="token punctuation">.</span><span class="token function">defaultBuilderConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setDefaultDataSource</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">optionConfigure</span><span class="token punctuation">(</span>op <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    op<span class="token punctuation">.</span><span class="token function">setDeleteThrowError</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setExecutorCorePoolSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setExecutorMaximumPoolSize</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setMaxShardingQueryLimit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setThrowIfRouteNotMatch</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setMaxShardingRouteCount</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setDefaultDataSourceMergePoolSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//开启定时任务 不然明天的表或者下个月的表不会在内存中存在</span>
                    op<span class="token punctuation">.</span><span class="token function">setStartTimeJob</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    op<span class="token punctuation">.</span><span class="token function">setReverseOffsetThreshold</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">useDatabaseConfigure</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MySQLDatabaseConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DefaultEasyEntityQuery</span> easyEntityQuery <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultEasyEntityQuery</span><span class="token punctuation">(</span>easyQueryClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">QueryRuntimeContext</span> runtimeContext <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">getRuntimeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">QueryConfiguration</span> configuration <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getQueryConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        configuration<span class="token punctuation">.</span><span class="token function">applyShardingInitializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TopicShardingTimeShardingInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TableRouteManager</span> tableRouteManager <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getTableRouteManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tableRouteManager<span class="token punctuation">.</span><span class="token function">addRoute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TopicShardingTimeTableRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置<code>ShardingInitializer</code>和添加路由即可</p>`,15),c=[p];function o(i,l){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","sharding-time.html.vue"]]);export{r as default};
