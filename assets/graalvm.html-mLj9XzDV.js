import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,d as a,o as r}from"./app-DF2yT6Ev.js";const l={},p=["src"],h=["src"],o=["src"];function d(e,i){return r(),t("div",null,[i[0]||(i[0]=n(`<h1 id="graalvm" tabindex="-1"><a class="header-anchor" href="#graalvm"><span>GraalVM</span></a></h1><p>GraalVM is a high-performance multi-language runtime that supports applications written in various languages, including Java, JavaScript, Python, Ruby, R, and WebAssembly. It also provides an important feature: compiling Java applications into native executable files (Native Image).</p><div class="hint-container tip"><p class="hint-container-title">Explanation in one sentence!!!</p><blockquote><p>GraalVM is a high-performance virtual machine that can &quot;turn Java applications into native programs&quot; while supporting multi-language mixed execution.</p></blockquote></div><p>This is the first native demo in eq history, proving the feasibility of eq in the native domain. Users can decide whether to use it or not as a reference.</p><div class="hint-container warning"><p class="hint-container-title">Note!!!</p><blockquote><p>This demo is based on a specific version of eq. If you&#39;re using a different version of eq, you may need to pay attention to reflection declarations because future versions may extend new interfaces and handling. You can <a href="https://github.com/dromara/easy-query/blob/main/sql-core/src/main/java/com/easy/query/core/bootstrapper/EasyQueryBuilderConfiguration.java" target="_blank" rel="noopener noreferrer">view EasyQueryBuilderConfiguration</a> for details</p></blockquote></div><h2 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>demo</span></a></h2><p>The demo for this chapter is provided by <a href="https://github.com/wzszsw" target="_blank" rel="noopener noreferrer">user</a> address: <a href="https://github.com/wzszsw/easy-query-native-demo" target="_blank" rel="noopener noreferrer">https://github.com/wzszsw/easy-query-native-demo</a></p><p>Specific code can refer to the demo provided by the user</p><h2 id="running-steps" tabindex="-1"><a class="header-anchor" href="#running-steps"><span>Running Steps</span></a></h2><h3 id="step-1" tabindex="-1"><a class="header-anchor" href="#step-1"><span>Step 1</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DemoApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        EasyBeanUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">FAST_BEAN_FUNCTION</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ReflectBean</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">::new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//Add this line in the startup item to replace the default reflection</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        SpringApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">DemoApplication</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, args);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="step-2" tabindex="-1"><a class="header-anchor" href="#step-2"><span>Step 2</span></a></h3>`,12)),a("img",{src:e.$withBase("/images/graalvm1.png"),msg:"Step 1"},null,8,p),i[1]||(i[1]=a("h3",{id:"step-3",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#step-3"},[a("span",null,"Step 3")])],-1)),a("img",{src:e.$withBase("/images/graalvm2.png"),msg:"Step 2"},null,8,h),i[2]||(i[2]=a("h3",{id:"step-4",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#step-4"},[a("span",null,"Step 4")])],-1)),a("img",{src:e.$withBase("/images/graalvm3.png"),msg:"Step 3"},null,8,o)])}const g=s(l,[["render",d]]),k=JSON.parse('{"path":"/en/framework/graalvm.html","title":"GraalVM","lang":"en-US","frontmatter":{"title":"GraalVM","order":90,"description":"GraalVM GraalVM is a high-performance multi-language runtime that supports applications written in various languages, including Java, JavaScript, Python, Ruby, R, and WebAssembl...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"GraalVM\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-27T05:04:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/en/framework/graalvm.html"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"GraalVM"}],["meta",{"property":"og:description","content":"GraalVM GraalVM is a high-performance multi-language runtime that supports applications written in various languages, including Java, JavaScript, Python, Ruby, R, and WebAssembl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-27T05:04:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-27T05:04:42.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/dromara/easy-query/easy-query-doc/framework/graalvm.html"}]]},"git":{"createdTime":1761541482000,"updatedTime":1761541482000,"contributors":[{"name":"只是我","username":"","email":"alice@example.com","commits":1}]},"readingTime":{"minutes":0.79,"words":237},"filePathRelative":"en/framework/graalvm.md","autoDesc":true}');export{g as comp,k as data};
