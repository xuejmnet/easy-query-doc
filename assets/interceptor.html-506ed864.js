import{_ as u}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as k,c as r,a as n,b as s,d as o,w as a,e as t}from"./app-d474d8fd.js";const d={},m=t('<h1 id="全局拦截器" tabindex="-1"><a class="header-anchor" href="#全局拦截器" aria-hidden="true">#</a> 全局拦截器</h1><p><code>easy-qeury</code>默认提供了拦截器,支持项目在工程化的时候可以批量拦截sql表达式</p><ul><li>自动填充id，自动填充创建人,自动填充创建时间,自动填充修改人,自动填充修改时间等</li><li>请求租户id自动条件过滤</li><li>用户权限比如领导可以看看和操作本部门和下属部门,部门只能看看和操作本部门,用户只能看和操作自己的数据</li><li>比如<code>/company/**</code>的web请求路径将当前企业id:<code>companyId</code>作为条件限制只允许操作当前企业</li></ul>',3),v=t('<table><thead><tr><th>类</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>EntityInterceptor</td><td>对象拦截器</td><td>用于对象插入前和修改前进行对象拦截</td></tr><tr><td>PredicateFilterInterceptor</td><td>条件拦截器</td><td>用户在查询,修改,删除的时候可以通过条件拦截来动态构建添加条件如:<code>租户id</code></td></tr><tr><td>UpdateSetInterceptor</td><td>更新列拦截器</td><td>用户在更新update表达式的时候可以通过当前拦截器自动追加<code>set</code>列操作</td></tr></tbody></table><h2 id="interceptor-api" tabindex="-1"><a class="header-anchor" href="#interceptor-api" aria-hidden="true">#</a> Interceptor Api</h2><table><thead><tr><th>方法</th><th>默认值/实现</th><th>描述</th></tr></thead><tbody><tr><td>order</td><td>100</td><td>用于对拦截器进行顺序排序执行 越小越先执行</td></tr><tr><td>enable</td><td>true</td><td>是否默认添加到表达式中前提是apply为true,true:默认添加,false:不添加可以通过<code>ThreadLocal</code>动态设置,或者调用useInterceptor(name)来显式使用</td></tr><tr><td>name</td><td>无</td><td>拦截器名称需要自己实现,默认可以使用类名</td></tr><tr><td>apply</td><td>哪些对象允许采用当前拦截器</td><td>默认可以才用是否为某个接口的实现<code>Interface.class.isAssignableFrom(entityClass);</code></td></tr></tbody></table>',3),b={class:"hint-container warning"},y=n("p",{class:"hint-container-title"},"说明!!!",-1),g=n("code",null,"QueryConfiguration",-1),f=n("code",null,"springboot",-1),I=n("code",null,"easy-query",-1),w=n("code",null,"@Component",-1),h=n("code",null,"solon",-1),T=n("br",null,null,-1),_=n("code",null,"easy-query",-1),E=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryRuntimeContext</span> runtimeContext <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">getRuntimeContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">QueryConfiguration</span> configuration <span class="token operator">=</span> runtimeContext<span class="token punctuation">.</span><span class="token function">getQueryConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
configuration<span class="token punctuation">.</span><span class="token function">applyInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyEntityInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),C=n("h2",{id:"demo数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#demo数据","aria-hidden":"true"},"#"),s(" demo数据")],-1),x=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@Table"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"t_topic_interceptor"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"TopicInterceptor"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token annotation punctuation"},"@Column"),n("span",{class:"token punctuation"},"("),s("primaryKey "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Integer"),s(" stars"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" title"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" createTime"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" createBy"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" updateTime"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" updateBy"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@UpdateIgnore"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" tenantId"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token comment"},"-- 数据库表结构语句"),s(`
`),n("span",{class:"token keyword"},"create"),s(),n("span",{class:"token keyword"},"table"),s(` t_topic_interceptor
`),n("span",{class:"token punctuation"},"("),s(`
    id `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"32"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'主键ID'"),n("span",{class:"token keyword"},"primary"),s(),n("span",{class:"token keyword"},"key"),n("span",{class:"token punctuation"},","),s(`
    stars `),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'点赞数'"),n("span",{class:"token punctuation"},","),s(`
    title `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'标题'"),n("span",{class:"token punctuation"},","),s(`
    create_time `),n("span",{class:"token keyword"},"datetime"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'创建时间'"),n("span",{class:"token punctuation"},","),s(`
    create_by `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'创建人'"),n("span",{class:"token punctuation"},","),s(`
    update_time `),n("span",{class:"token keyword"},"datetime"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'修改时间'"),n("span",{class:"token punctuation"},","),s(`
    update_by `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'修改人'"),n("span",{class:"token punctuation"},","),s(`
    tenant_id `),n("span",{class:"token keyword"},"varchar"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"50"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"not"),s(),n("span",{class:"token boolean"},"null"),s(),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'租户'"),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token keyword"},"comment"),s(),n("span",{class:"token string"},"'拦截器主题表'"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=t(`<h2 id="entityinterceptor" tabindex="-1"><a class="header-anchor" href="#entityinterceptor" aria-hidden="true">#</a> EntityInterceptor</h2><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> Api</h3><table><thead><tr><th>方法</th><th>默认实现</th><th>描述</th></tr></thead><tbody><tr><td>configureInsert</td><td>无</td><td>配置自动插入时的值:创建时间,创建人</td></tr><tr><td>configureUpdate</td><td>无</td><td>配置更新是需要修改的值:修改时间,修改人</td></tr></tbody></table><p>模拟当前用户租户对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CurrentUserHelper</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> userId<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span>userId<span class="token operator">=</span>userId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> userId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> tenantId<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setTenantId</span><span class="token punctuation">(</span><span class="token class-name">String</span> tenantId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span>tenantId<span class="token operator">=</span>tenantId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> tenantId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拦截器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
 * create time 2023/4/3 21:13
 * 如果是spring项目添加@Component，如果是非spring项目直接添加到QueryConfiguration.applyInterceptor
 *
 * <span class="token keyword">@author</span> xuejiaming
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyEntityInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">EntityInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureInsert</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityInsertExpressionBuilder</span> entityInsertExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">)</span> entity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getCreateBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setCreateBy</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getUpdateBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureUpdate</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityUpdateExpressionBuilder</span> entityUpdateExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">)</span> entity<span class="token punctuation">;</span>
        topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;MyEntityInterceptor&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>entityClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//租户拦截器</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTenantInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">EntityInterceptor</span><span class="token punctuation">,</span><span class="token class-name">PredicateFilterInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;MyTenantInterceptor&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>entityClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">LambdaEntityExpressionBuilder</span> lambdaEntityExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">WherePredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> wherePredicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            wherePredicate<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;tenantId&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureInsert</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityInsertExpressionBuilder</span> entityInsertExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">)</span> entity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setTenantId</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureUpdate</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityUpdateExpressionBuilder</span> entityUpdateExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//设置当前租户和当前用户</span>
<span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token string">&quot;xiaoming&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">setTenantId</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopicInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicInterceptor<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicInterceptor<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
topicInterceptor<span class="token punctuation">.</span><span class="token function">setStars</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token class-name">INTO</span> t_topic_interceptor <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`stars\`<span class="token punctuation">,</span>\`title\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">,</span>\`create_by\`<span class="token punctuation">,</span>\`update_time\`<span class="token punctuation">,</span>\`update_by\`<span class="token punctuation">,</span>\`tenant_id\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> 
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span><span class="token constant">T21</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">32.</span><span class="token function">643</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xiaoming</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span><span class="token constant">T21</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">32.</span><span class="token function">643</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xiaoming</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">abc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token class-name">TopicInterceptor</span> topicInterceptor1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whereId</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`stars\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`title\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_by\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`update_time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`update_by\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`tenant_id\` <span class="token constant">FROM</span> t_topic_interceptor t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>


<span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token string">&quot;xiaoming1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>topicInterceptor1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_topic_interceptor <span class="token constant">SET</span> \`stars\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`title\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_time\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_by\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span><span class="token constant">T21</span><span class="token operator">:</span><span class="token number">28</span><span class="token operator">:</span><span class="token number">32.</span><span class="token function">670</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xiaoming1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插入的时候确定了自动填充,实际项目中可以通过接口来限制,更新的时候也会自动更新时间,但是如果是表达式更新那么还是原先的操作并不会更新</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">long</span> l2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token operator">::</span><span class="token function">getTitle</span><span class="token punctuation">,</span> topicInterceptor2<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">whereId</span><span class="token punctuation">(</span>topicInterceptor2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_topic_interceptor <span class="token constant">SET</span> \`title\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种情况下<code>updateBy</code>和<code>updateTime</code>并不会自动添加到生成的sql里面,这个时候我们的<code>UpdateSetInterceptor</code>拦截就起作用了</p><h2 id="updatesetinterceptor" tabindex="-1"><a class="header-anchor" href="#updatesetinterceptor" aria-hidden="true">#</a> UpdateSetInterceptor</h2><p>我们在原先的拦截器上再次实现<code>UpdateSetInterceptor</code>让原先的拦截器支持表达式<code>set</code>,当然你也可以单独创建一个拦截器,如果单独创建那么可以单独对其进行选择性启用或者禁用</p><h3 id="api-1" tabindex="-1"><a class="header-anchor" href="#api-1" aria-hidden="true">#</a> Api</h3><table><thead><tr><th>方法</th><th>默认实现</th><th>描述</th></tr></thead><tbody><tr><td>configure</td><td>无</td><td>配置表达式更新set列自动填充</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
 * create time 2023/4/3 21:13
 * 如果是spring项目添加@Component，如果是非spring项目直接添加到EasQueryConfiguration.applyInterceptor
 *
 * <span class="token keyword">@author</span> xuejiaming
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyEntityInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">EntityInterceptor</span><span class="token punctuation">,</span> <span class="token class-name">UpdateSetInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureInsert</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityInsertExpressionBuilder</span> entityInsertExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">)</span> entity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getCreateBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setCreateBy</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getUpdateBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureUpdate</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityUpdateExpressionBuilder</span> entityUpdateExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">)</span> entity<span class="token punctuation">;</span>
        topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        topicInterceptor<span class="token punctuation">.</span><span class="token function">setUpdateBy</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;MyEntityInterceptor&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>entityClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityUpdateExpressionBuilder</span> entityUpdateExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">ColumnSetter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> columnSetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> updateBy <span class="token operator">=</span> <span class="token string">&quot;updateBy&quot;</span><span class="token punctuation">;</span><span class="token comment">//属性名用来动态创建lambda</span>
        <span class="token class-name">String</span> updateTime <span class="token operator">=</span> <span class="token string">&quot;updateTime&quot;</span><span class="token punctuation">;</span><span class="token comment">//属性名用来动态创建lambda</span>
        <span class="token comment">//是否已经set了</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>entityUpdateExpressionBuilder<span class="token punctuation">.</span><span class="token function">getSetColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsOnce</span><span class="token punctuation">(</span>entityClass<span class="token punctuation">,</span>updateBy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> userId <span class="token operator">=</span> <span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            columnSetter<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>updateBy<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>entityUpdateExpressionBuilder<span class="token punctuation">.</span><span class="token function">getSetColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">containsOnce</span><span class="token punctuation">(</span>entityClass<span class="token punctuation">,</span>updateTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            columnSetter<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>updateTime<span class="token punctuation">,</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">long</span> l2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token comment">//虽然我们没有在表达式中设置需要set的属性,但是因为拦截器得原因easy-qeury帮我们自动的进行了处理</span>
        <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token operator">::</span><span class="token function">getTitle</span><span class="token punctuation">,</span> topicInterceptor2<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereId</span><span class="token punctuation">(</span>topicInterceptor2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_topic_interceptor <span class="token constant">SET</span> \`title\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_by\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_time\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xiaoming1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span><span class="token constant">T21</span><span class="token operator">:</span><span class="token number">56</span><span class="token operator">:</span><span class="token number">39.</span><span class="token function">426</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">123</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到目前为止基本上大部分的业务需求已经可以实现了，但是如果你是有租户的或者你是需要对当前请求查询条件进行额外条件过滤添加的,那么<code>PredicateFilterInterceptor</code>可以帮你满足这个条件</p><h2 id="predicatefilterinterceptor" tabindex="-1"><a class="header-anchor" href="#predicatefilterinterceptor" aria-hidden="true">#</a> PredicateFilterInterceptor</h2><h3 id="api-2" tabindex="-1"><a class="header-anchor" href="#api-2" aria-hidden="true">#</a> Api</h3><table><thead><tr><th>方法</th><th>默认实现</th><th>描述</th></tr></thead><tbody><tr><td>configure</td><td>无</td><td>配置表达式where条件,查询,修改(对象/表达式),删除(对象/表达式)</td></tr></tbody></table><h3 id="租户模式实现" tabindex="-1"><a class="header-anchor" href="#租户模式实现" aria-hidden="true">#</a> 租户模式实现</h3><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 添加租户id</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 查询过滤租户id</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 更新添加租户id条件</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 删除添加租户id</label></li></ul><p>这边我们新建一个租户拦截器,把原先拦截器里面的自动填充租户id移动到租户拦截器里面</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTenantInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">EntityInterceptor</span><span class="token punctuation">,</span><span class="token class-name">PredicateFilterInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;MyTenantInterceptor&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>entityClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">LambdaEntityExpressionBuilder</span> lambdaEntityExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">WherePredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> sqlWherePredicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>x
            sqlWherePredicate<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;tenantId&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureInsert</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityInsertExpressionBuilder</span> entityInsertExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">TopicInterceptor</span> topicInterceptor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">)</span> entity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>topicInterceptor<span class="token punctuation">.</span><span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            topicInterceptor<span class="token punctuation">.</span><span class="token function">setTenantId</span><span class="token punctuation">(</span><span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">getTenantId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureUpdate</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entityClass<span class="token punctuation">,</span> <span class="token class-name">EntityUpdateExpressionBuilder</span> entityUpdateExpressionBuilder<span class="token punctuation">,</span> <span class="token class-name">Object</span> entity<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token comment">//查询</span>
<span class="token class-name">TopicInterceptor</span> topicInterceptor1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whereId</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`stars\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`title\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_by\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`update_time\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`update_by\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`tenant_id\` <span class="token constant">FROM</span> t_topic_interceptor t <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`tenant_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token comment">//实体对象更新</span>

<span class="token class-name">CurrentUserHelper</span><span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span><span class="token string">&quot;xiaoming1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>topicInterceptor1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_topic_interceptor <span class="token constant">SET</span> \`stars\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`title\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_time\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_by\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`tenant_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">27.</span><span class="token function">756</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xiaoming1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">abc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>


<span class="token comment">//表达式更新</span>
<span class="token keyword">long</span> l2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token operator">::</span><span class="token function">getTitle</span><span class="token punctuation">,</span> topicInterceptor2<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">whereId</span><span class="token punctuation">(</span>topicInterceptor2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_topic_interceptor <span class="token constant">SET</span> \`title\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_by\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`update_time\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`tenant_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xiaoming1</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">04</span><span class="token operator">-</span><span class="token number">03</span><span class="token constant">T22</span><span class="token operator">:</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">27.</span><span class="token function">773</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">abc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>


<span class="token comment">//表达式删除</span>
<span class="token keyword">long</span> l3 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">deletable</span><span class="token punctuation">(</span><span class="token class-name">TopicInterceptor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span>topicInterceptor2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">DELETE</span> <span class="token constant">FROM</span> t_topic_interceptor <span class="token constant">WHERE</span> \`tenant_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token comment">//对象删除</span>
<span class="token keyword">long</span> l4 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">deletable</span><span class="token punctuation">(</span>topicInterceptor2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">DELETE</span> <span class="token constant">FROM</span> t_topic_interceptor <span class="token constant">WHERE</span> \`tenant_id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">AND</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">abc</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所有的增删改都会添加对应的条件表达式值,可以做到表结构完美隔离租户之间的数据,并且用户使用全程无感</p><h2 id="按需拦截" tabindex="-1"><a class="header-anchor" href="#按需拦截" aria-hidden="true">#</a> 按需拦截</h2><p>比如我们现在有这么一个需求因为部分接口需要针对测试数据进行移除,不希望统计到程序里面所以可以针对部分情况进行按需拦截<br> 可以新建一个表达式拦截器<code>PredicateFilterInterceptor</code>,然后默认将enable改成<code>false</code>需要时自行添加条件通过<code>useInteceptor(name)</code>,或者可以通过判断当前是否是某个api接口比如<code>startWith(&quot;/api/test&quot;)</code>,可以通过<code>ThreadLocal</code>来表示当前启用值</p>`,32);function q(B,j){const c=l("RouterLink"),i=l("CodeTabs");return k(),r("div",null,[m,n("p",null,[s("如果不知道如何使用可以查看 "),o(c,{to:"/practice/entity/"},{default:a(()=>[s("实战对象设计")]),_:1})]),v,n("div",b,[y,n("blockquote",null,[n("p",null,[s("创建完拦截器后需要配置到"),g,s(",如果你是"),f,s("并且是默认"),I,s("只需要添加"),w,s("如果是"),h,s("那么可以查看"),o(c,{to:"/guide/config/config-solon.html#solon%E6%89%80%E6%9C%89%E9%85%8D%E7%BD%AE"},{default:a(()=>[s("配置或配置到所有数据源")]),_:1}),T,s(" 如果您是自行构建的"),_,s("需要自行添加拦截器")])]),E]),C,o(i,{id:"156",data:[{id:"TopicInterceptor"},{id:"SQL"}]},{title0:a(({value:p,isActive:e})=>[s("TopicInterceptor")]),title1:a(({value:p,isActive:e})=>[s("SQL")]),tab0:a(({value:p,isActive:e})=>[x]),tab1:a(({value:p,isActive:e})=>[U]),_:1}),S])}const D=u(d,[["render",q],["__file","interceptor.html.vue"]]);export{D as default};
