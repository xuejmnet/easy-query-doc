import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as n}from"./app-Cs_tlunU.js";const t={};function h(l,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="相关术语" tabindex="-1"><a class="header-anchor" href="#相关术语"><span>相关术语</span></a></h1><h2 id="隐式表达式" tabindex="-1"><a class="header-anchor" href="#隐式表达式"><span>隐式表达式</span></a></h2><p><code>隐式查询</code>通过对象关系描述来编写表达式的方式实现对数据库数据的筛选组装排序的操作在eq里面称之为隐式表达式</p><div class="hint-container tip"><p class="hint-container-title">说明!!!</p><blockquote><p><code>隐式表达式</code>是<code>eq</code>的重中之重,如果你使用eq不掌握隐式表达式那么使用<code>eq</code>和使用别的orm没有太多区别,<code>eq</code>的强大<code>70%</code>来源于隐式表达式</p></blockquote></div><h3 id="隐式join" tabindex="-1"><a class="header-anchor" href="#隐式join"><span>隐式join</span></a></h3><p>如下是一个<code>隐式join</code>的操作设置<code>user</code>和<code>company</code>为多对一关系,其中join操作并没有在表达式中体现出来，而是通过对象关系树来实现表达式的编写</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">queryable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(u</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        u</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">company</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xx公司&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="隐式子查询" tabindex="-1"><a class="header-anchor" href="#隐式子查询"><span>隐式子查询</span></a></h3><p>如下是一个<code>隐式子查询</code>的操作设置<code>user</code>和<code>bankCard</code>为一对多关系,其中<code>exits</code>语句并没有在表达式中体现出来，但是表达式依然通过类<code>stream</code>的方式查询出用户条件满足时存在至少一张储蓄卡的</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">queryable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">User</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(u</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        u</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bankCards</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">any</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(card</span><span style="--shiki-light:#C18401;--shiki-dark:#C678DD;">-&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            card</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;储蓄卡&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显式表达式" tabindex="-1"><a class="header-anchor" href="#显式表达式"><span>显式表达式</span></a></h2>`,11)]))}const r=s(t,[["render",h]]),d=JSON.parse('{"path":"/framework/terminology.html","title":"相关术语","lang":"zh-CN","frontmatter":{"title":"相关术语","order":5,"description":"相关术语 隐式表达式 隐式查询通过对象关系描述来编写表达式的方式实现对数据库数据的筛选组装排序的操作在eq里面称之为隐式表达式 说明!!! 隐式表达式是eq的重中之重,如果你使用eq不掌握隐式表达式那么使用eq和使用别的orm没有太多区别,eq的强大70%来源于隐式表达式 隐式join 如下是一个隐式join的操作设置user和company为多对一关...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"相关术语\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-23T14:13:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/framework/terminology.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"相关术语"}],["meta",{"property":"og:description","content":"相关术语 隐式表达式 隐式查询通过对象关系描述来编写表达式的方式实现对数据库数据的筛选组装排序的操作在eq里面称之为隐式表达式 说明!!! 隐式表达式是eq的重中之重,如果你使用eq不掌握隐式表达式那么使用eq和使用别的orm没有太多区别,eq的强大70%来源于隐式表达式 隐式join 如下是一个隐式join的操作设置user和company为多对一关..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-23T14:13:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-23T14:13:27.000Z"}]]},"git":{"createdTime":1761228807000,"updatedTime":1761228807000,"contributors":[{"name":"xuejiaming","username":"xuejiaming","email":"326308290@qq.com","commits":1,"url":"https://github.com/xuejiaming"}]},"readingTime":{"minutes":0.99,"words":297},"filePathRelative":"framework/terminology.md","autoDesc":true}');export{r as comp,d as data};
