import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as e,a as n,b as o,d as c,e as l}from"./app-989fc924.js";const u={},i=l(`<p><code>easy-query</code>提供了数据库函数列值转换,可以完美的实现java对象和数据库列的函数互相交换,比如数据库函数<code>加密、解密</code>、<code>base64 编码、解码</code>等数据库函数对</p><h2 id="mysql加密解密" tabindex="-1"><a class="header-anchor" href="#mysql加密解密" aria-hidden="true">#</a> mysql加密解密</h2><p><a href="/easy-query-doc/guide/adv/column-encryption">《数据库列加密》</a> 上一篇文章我们讲解了如何使用java代码来实现数据库列的加密解密,接下来我将使用数据库函数来实现</p><p>AES_DECRYPT(from_base64(<code>receiver_mobile</code>)</p><table><thead><tr><th>方法</th><th>默认值</th></tr></thead><tbody><tr><td>to_base64(AES_ENCRYPT(&#39;手机号值&#39;),&#39;秘钥&#39;)</td><td>将数据进行aes加密,然后进行base64编码</td></tr><tr><td>AES_DECRYPT(from_base64(&#39;手机号列&#39;),&#39;秘钥&#39;)</td><td>将数据进行base64解码,然后进行aes进行解密</td></tr></tbody></table><h2 id="columnvaluesqlconverter" tabindex="-1"><a class="header-anchor" href="#columnvaluesqlconverter" aria-hidden="true">#</a> ColumnValueSQLConverter</h2><div class="hint-container tip"><p class="hint-container-title">说明!!!</p><blockquote><p>支持join和下多表的自动识别表别名而无需自行处理别名</p></blockquote></div><table><thead><tr><th>方法</th><th>作用域</th><th>说明</th></tr></thead><tbody><tr><td>columnConvert</td><td>仅作用到select投影上面</td><td>用于做数据库列到java对象字段的函数处理比如 [AES_DECRYPT(from_base64(<code>phone</code>),&#39;秘钥&#39;)]</td></tr><tr><td>valueConvert</td><td>仅作用到insert,update set值,where条件值</td><td>用于做java对象字段到数据库列的函数处理比如 [AES_DECRYPT(from_base64(&#39;手机号列&#39;),&#39;秘钥&#39;)]</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
     * select查询
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     */</span>
    <span class="token keyword">void</span> <span class="token function">columnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * insert update entity
     * udpate set
     * where
     * <span class="token keyword">@param</span> <span class="token parameter">table</span>
     * <span class="token keyword">@param</span> <span class="token parameter">columnMetadata</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlParameter</span>
     * <span class="token keyword">@param</span> <span class="token parameter">sqlPropertyConverter</span>
     */</span>
    <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token comment">//@Component 如果是springboot的话</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySQLAesEncryptColumnValueSQLConverter</span> <span class="token keyword">implements</span> <span class="token class-name">ColumnValueSQLConverter</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 数据加密秘钥
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SECRET</span><span class="token operator">=</span><span class="token string">&quot;1234567890123456&quot;</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">columnConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        Dialect dialect = runtimeContext.getQueryConfiguration().getDialect();</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;AES_DECRYPT(from_base64({0}),{1})&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
           context
                   <span class="token punctuation">.</span><span class="token function">expression</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getPropertyName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//采用变量是因为可能出现join附带别名所以需要变量</span>
                   <span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">SECRET</span><span class="token punctuation">)</span>
                   <span class="token punctuation">.</span><span class="token function">setAlias</span><span class="token punctuation">(</span>columnMetadata<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如果这边也是用变量就会导致join下不是别名而是带具体表的列比如:t.\`phone\`</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">valueConvert</span><span class="token punctuation">(</span><span class="token class-name">TableAvailable</span> table<span class="token punctuation">,</span> <span class="token class-name">ColumnMetadata</span> columnMetadata<span class="token punctuation">,</span> <span class="token class-name">SQLParameter</span> sqlParameter<span class="token punctuation">,</span> <span class="token class-name">SQLPropertyConverter</span> sqlPropertyConverter<span class="token punctuation">,</span> <span class="token class-name">QueryRuntimeContext</span> runtimeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlPropertyConverter<span class="token punctuation">.</span><span class="token function">sqlNativeSegment</span><span class="token punctuation">(</span><span class="token string">&quot;to_base64(AES_ENCRYPT({0},{1}))&quot;</span><span class="token punctuation">,</span>context<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            context<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>sqlParameter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">SECRET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//非springboot或者多数据源之类的可以通过获取对应的QueryConfiguration进行添加</span>
<span class="token comment">//QueryRuntimeContext runtimeContext = easyQuery.getRuntimeContext();</span>
<span class="token comment">//QueryConfiguration configuration = runtimeContext.getQueryConfiguration();</span>
<span class="token comment">//configuration.applyColumnValueSQLConverter(new MySQLAesEncryptColumnValueSQLConverter());</span>



<span class="token comment">//java对象</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Table</span><span class="token punctuation">(</span><span class="token string">&quot;t_sys_user_sql_encryption&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SysUserSQLEncryption</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Column</span><span class="token punctuation">(</span>sqlConversion <span class="token operator">=</span> <span class="token class-name">MySQLAesEncryptColumnValueSQLConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token comment">//添加这个列为加密列</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> idCard<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="新增数据" tabindex="-1"><a class="header-anchor" href="#新增数据" aria-hidden="true">#</a> 新增数据</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span><span class="token string">&quot;13232456789&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setIdCard</span><span class="token punctuation">(</span><span class="token string">&quot;12345678&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token string">&quot;xxxxxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">insertable</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//插入语句采用手机号加密</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`t_sys_user_sql_encryption\` <span class="token punctuation">(</span>\`id\`<span class="token punctuation">,</span>\`username\`<span class="token punctuation">,</span>\`phone\`<span class="token punctuation">,</span>\`id_card\`<span class="token punctuation">,</span>\`address\`<span class="token punctuation">,</span>\`create_time\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span> <span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">13232456789</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345678</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xxxxxxx</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">10</span><span class="token constant">T14</span><span class="token operator">:</span><span class="token number">09</span><span class="token operator">:</span><span class="token number">32.</span><span class="token function">109</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据" aria-hidden="true">#</a> 查询数据</h2><p>单表</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> sysUserSQLEncryption <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//查询语句采用手机号列解密</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> \`id\`<span class="token punctuation">,</span>\`username\`<span class="token punctuation">,</span><span class="token function">AES_DECRYPT</span><span class="token punctuation">(</span><span class="token function">from_base64</span><span class="token punctuation">(</span>\`phone\`<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`phone\`<span class="token punctuation">,</span>\`id_card\`<span class="token punctuation">,</span>\`address\`<span class="token punctuation">,</span>\`create_time\` <span class="token constant">FROM</span> \`t_sys_user_sql_encryption\` <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">4</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>

<span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">12345</span><span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> phone<span class="token operator">=</span><span class="token number">13232456789</span><span class="token punctuation">,</span> idCard<span class="token operator">=</span><span class="token number">12345678</span><span class="token punctuation">,</span> address<span class="token operator">=</span>xxxxxxx<span class="token punctuation">,</span> createTime<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">10</span><span class="token constant">T14</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据" aria-hidden="true">#</a> 更新数据</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> sysUserSQLEncryption <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sysUserSQLEncryption<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span><span class="token string">&quot;111123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> l2 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span>sysUserSQLEncryption<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> \`t_sys_user_sql_encryption\` <span class="token constant">SET</span> \`username\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`phone\` <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\`id_card\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`address\` <span class="token operator">=</span> <span class="token operator">?</span><span class="token punctuation">,</span>\`create_time\` <span class="token operator">=</span> <span class="token operator">?</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">username</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">111123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345678</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">xxxxxxx</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">10</span><span class="token constant">T14</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token function">12</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="按列更新" tabindex="-1"><a class="header-anchor" href="#按列更新" aria-hidden="true">#</a> 按列更新</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">long</span> l1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">updatable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token operator">::</span><span class="token function">getPhone</span><span class="token punctuation">,</span> <span class="token string">&quot;1111234&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">whereById</span><span class="token punctuation">(</span><span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executeRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> \`t_sys_user_sql_encryption\` <span class="token constant">SET</span> \`phone\` <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token constant">WHERE</span> \`id\` <span class="token operator">=</span> <span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1111234</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">12345</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>多表join查询</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SysUserSQLEncryption</span> sysUserSQLEncryption1 <span class="token operator">=</span> easyQuery<span class="token punctuation">.</span><span class="token function">queryable</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token class-name">Topic</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token class-name">SysUserSQLEncryption</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">,</span> <span class="token class-name">Topic</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token operator">::</span><span class="token function">getPhone</span><span class="token punctuation">,</span> <span class="token string">&quot;1111234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name">SysUserSQLEncryption</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> t1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> t<span class="token punctuation">.</span><span class="token function">columnAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">firstOrNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//注意这边列会自动带上具体的表名而不是简单的拼接所以在join条件下也无需关心别名</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">SELECT</span> t<span class="token punctuation">.</span>\`id\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`username\`<span class="token punctuation">,</span><span class="token function">AES_DECRYPT</span><span class="token punctuation">(</span><span class="token function">from_base64</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>\`phone\`<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token constant">AS</span> \`phone\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`id_card\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`address\`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>\`create_time\` <span class="token constant">FROM</span> \`t_sys_user_sql_encryption\` t <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> \`t_topic\` t1 <span class="token constant">ON</span> t<span class="token punctuation">.</span>\`id\` <span class="token operator">=</span> t1<span class="token punctuation">.</span>\`id\` <span class="token constant">WHERE</span> t<span class="token punctuation">.</span>\`phone\` <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span><span class="token function">AES_ENCRYPT</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">LIMIT</span> <span class="token number">1</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1111234</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">1234567890123456</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Time</span> <span class="token class-name">Elapsed</span><span class="token operator">:</span> <span class="token function">3</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span>
<span class="token operator">&lt;=</span><span class="token operator">=</span> <span class="token class-name">Total</span><span class="token operator">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">说明!!!</p><blockquote><p>如果采用加密对进行处理那么默认是不支持like函数的,因为为了高性能默认easy-query采用的是对表达式条件值进行加密匹配而不是数据库列解密匹配,如果需要支持解密可以采用上一篇文章的加密方式,可以实现高性能的加密列like</p></blockquote></div><h2 id="相关博客" tabindex="-1"><a class="header-anchor" href="#相关博客" aria-hidden="true">#</a> 相关博客</h2>`,24),r={href:"https://www.cnblogs.com/xuejiaming/p/17619102.html",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const s=t("ExternalLinkIcon");return p(),e("div",null,[i,n("ul",null,[n("li",null,[n("a",r,[o("《数据库列加密解密脱敏》"),c(s)])])])])}const y=a(u,[["render",k],["__file","column-sql-func-auto.html.vue"]]);export{y as default};
