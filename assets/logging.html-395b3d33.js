import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as u,c as r,d as o,w as a,a as n,b as s,e as c}from"./app-09336a63.js";const k={},d=n("h1",{id:"打印sql日志",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#打印sql日志","aria-hidden":"true"},"#"),s(" 打印sql日志")],-1),m=n("p",null,[n("code",null,"easy-query"),s("默认适配slf4j日志接口,如果您有自定义日志接口可以通过自行实现")],-1),v=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"logging"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"level"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"com.easy.query.core"),n("span",{class:"token punctuation"},":"),s(` debug
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"LogFactory"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"useStdOutLogging"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),n("span",{class:"token comment"},"//框架默认System.out.println、System.err.println"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),g=c(`<h1 id="自定义日志" tabindex="-1"><a class="header-anchor" href="#自定义日志" aria-hidden="true">#</a> 自定义日志</h1><h2 id="springboot" tabindex="-1"><a class="header-anchor" href="#springboot" aria-hidden="true">#</a> springboot</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token comment">//新建一个日志打印的实现继承com.easy.query.core.logging.Log</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySysOutLogImpl</span> <span class="token keyword">implements</span> <span class="token class-name">Log</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 必须要实现一个构造函数,传入单个字符串string参数
     * <span class="token keyword">@param</span> <span class="token parameter">clazz</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">MySysOutLogImpl</span><span class="token punctuation">(</span><span class="token class-name">String</span> clazz<span class="token punctuation">)</span><span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----开始----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----结束----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----开始----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----结束----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----开始----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----结束----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">trace</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----开始----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----结束----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----开始----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----结束----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{class:"language-yaml"},[n("code",null,[s(`
`),n("span",{class:"token key atrule"},"easy-query"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"enable"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
  `),n("span",{class:"token key atrule"},"name-conversion"),n("span",{class:"token punctuation"},":"),s(` underlined
  `),n("span",{class:"token key atrule"},"database"),n("span",{class:"token punctuation"},":"),s(` mysql
  `),n("span",{class:"token comment"},"#主要是这边需要配置日志"),s(`
  `),n("span",{class:"token key atrule"},"log-class"),n("span",{class:"token punctuation"},":"),s(` com.easyquery.springbootdemo.logging.
  `),n("span",{class:"token key atrule"},"print-sql"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token class-name"},"LogFactory"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"useCustomLogging"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"MySysOutLogImpl"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),f=c('<div class="language-log line-numbers-mode" data-ext="log"><pre class="language-log"><code>\n<span class="token separator comment">----</span>开始<span class="token separator comment">----</span>\n<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Preparing<span class="token operator">:</span> SELECT t<span class="token punctuation">.</span>`id`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`create_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`update_by`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`deleted`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`title`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`content`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`url`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`star`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`publish_time`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`score`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`status`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`order`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`is_top`<span class="token punctuation">,</span>t<span class="token punctuation">.</span>`top` FROM `t_blog` t WHERE t<span class="token punctuation">.</span>`deleted` <span class="token operator">=</span> <span class="token operator">?</span> AND t<span class="token punctuation">.</span>`id` <span class="token operator">=</span> <span class="token operator">?</span> LIMIT <span class="token number">1</span>\n<span class="token separator comment">----</span>结束<span class="token separator comment">----</span>\n<span class="token separator comment">----</span>开始<span class="token separator comment">----</span>\n<span class="token operator">=</span><span class="token operator">=</span><span class="token operator">&gt;</span> Parameters<span class="token operator">:</span> <span class="token boolean">true</span><span class="token operator">(</span>Boolean<span class="token operator">)</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token operator">(</span>String<span class="token operator">)</span>\n<span class="token separator comment">----</span>结束<span class="token separator comment">----</span>\n<span class="token separator comment">----</span>开始<span class="token separator comment">----</span>\n<span class="token operator">&lt;</span><span class="token operator">=</span><span class="token operator">=</span> Time Elapsed<span class="token operator">:</span> <span class="token number">12</span><span class="token operator">(</span>ms<span class="token operator">)</span>\n<span class="token separator comment">----</span>结束<span class="token separator comment">----</span>\n<span class="token separator comment">----</span>开始<span class="token separator comment">----</span>\n<span class="token operator">&lt;</span><span class="token operator">=</span><span class="token operator">=</span> Total<span class="token operator">:</span> <span class="token number">0</span>\n<span class="token separator comment">----</span>结束<span class="token separator comment">----</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',1);function h(S,q){const p=i("CodeTabs");return u(),r("div",null,[d,m,o(p,{id:"6",data:[{id:"SpringBoot"},{id:"控制台"}]},{title0:a(({value:t,isActive:e})=>[s("SpringBoot")]),title1:a(({value:t,isActive:e})=>[s("控制台")]),tab0:a(({value:t,isActive:e})=>[v]),tab1:a(({value:t,isActive:e})=>[b]),_:1}),g,o(p,{id:"21",data:[{id:"SpringBoot配置"},{id:"控制台配置"}]},{title0:a(({value:t,isActive:e})=>[s("SpringBoot配置")]),title1:a(({value:t,isActive:e})=>[s("控制台配置")]),tab0:a(({value:t,isActive:e})=>[y]),tab1:a(({value:t,isActive:e})=>[_]),_:1}),f])}const O=l(k,[["render",h],["__file","logging.html.vue"]]);export{O as default};
