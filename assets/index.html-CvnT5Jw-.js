import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as c,d as t,e as o,f as r,w as l,r as s,o as d}from"./app-m4uaPpdH.js";const m={};function u(p,e){const n=s("RouteLink");return d(),i("div",null,[e[4]||(e[4]=c("<p><code>eq</code> has a large number of built-in function tools to facilitate users only needing to remember one complete API to adapt to all databases, including string-related, number-related, time-related, Math expression mathematical functions, etc.</p><p><code>eq</code> follows the database and divides properties into the following major types:</p><ul><li><code>String</code> corresponds to Java <code>String</code> type</li><li><code>Number</code> corresponds to Java <code>Long</code>, <code>Integer</code>, <code>BigDecimal</code>...</li><li><code>DateTime</code> corresponds to Java <code>LocalDateTime</code>, <code>LocalDate</code>, <code>Date</code>...</li><li><code>Boolean</code> corresponds to Java <code>Boolean</code></li><li><code>Any</code> corresponds to Java <code>List</code> or other unknown types</li><li><code>JsonMap</code> (not implemented)</li><li><code>JsonArray</code> (not implemented)</li></ul><p>Different systems have different functions and compile-time type acceptance. For example, <code>String</code> comparisons can only be <code>String</code>. Each system has its own functions. Of course, you can also use functions like <code>toStr</code>, <code>toNumber</code> to convert to corresponding functions, or use <code>asAny</code> to convert to any type and then use any function. The difference is that <code>toxxxx</code> is a database-level function, while <code>asAny()</code> or <code>asAnyType(Long.class)</code> is a compile-time behavior to trick the compiler.</p><p>Aggregate function filtering, such as <code>o.column().aggregateFunction().filter()</code></p><ul><li>avg</li><li>sum</li><li>max</li><li>min</li><li>count</li><li>joining</li></ul><p>Functions support chaining between each other and support circular nesting</p>",7)),t("p",null,[e[1]||(e[1]=o("If there are unknown functions that eq has not implemented, users can implement them themselves through ")),e[2]||(e[2]=t("code",null,"NativeSQL",-1)),e[3]||(e[3]=o()),r(n,{to:"/en/ability/native-sql.html#%E9%9D%99%E6%80%81%E5%87%BD%E6%95%B0sql%E7%89%87%E6%AE%B5%E5%B0%81%E8%A3%85"},{default:l(()=>e[0]||(e[0]=[o("native sql fragments or search the documentation for "),t("code",null,"static function sql fragment encapsulation",-1)])),_:1})])])}const y=a(m,[["render",u]]),h=JSON.parse('{"path":"/en/func/","title":"Built-in Functions","lang":"en-US","frontmatter":{"title":"Built-in Functions","description":"eq has a large number of built-in function tools to facilitate users only needing to remember one complete API to adapt to all databases, including string-related, number-relate...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Built-in Functions\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-26T17:39:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuejmnet\\",\\"url\\":\\"https://github.com/xuejmnet\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/dromara/easy-query/easy-query-doc/en/func/"}],["meta",{"property":"og:site_name","content":"Documentation"}],["meta",{"property":"og:title","content":"Built-in Functions"}],["meta",{"property":"og:description","content":"eq has a large number of built-in function tools to facilitate users only needing to remember one complete API to adapt to all databases, including string-related, number-relate..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-26T17:39:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T17:39:47.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://github.com/dromara/easy-query/easy-query-doc/func/"}]]},"git":{"createdTime":1761500387000,"updatedTime":1761500387000,"contributors":[{"name":"只是我","username":"","email":"alice@example.com","commits":1}]},"readingTime":{"minutes":0.8,"words":239},"filePathRelative":"en/func/README.md","autoDesc":true}');export{y as comp,h as data};
